(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Wolfram 14.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       154,          7]
NotebookDataLength[    315507,       6717]
NotebookOptionsPosition[    308209,       6593]
NotebookOutlinePosition[    308676,       6611]
CellTagsIndexPosition[    308633,       6608]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Bayesian Networks in the Wolfram Language", "Title",
 CellChangeTimes->{{3.963334992015093*^9, 
  3.9633350033766174`*^9}},ExpressionUUID->"fb898530-1d51-c142-9171-\
f999d116163c"],

Cell["by Andreas Hafver", "Author",
 CellChangeTimes->{{3.9633376247314854`*^9, 
  3.9633376402983093`*^9}},ExpressionUUID->"ec47f65b-2b6f-a24e-83b4-\
32a00b85ce30"],

Cell[TextData[StyleBox["The Wolfram Language  has excellent support for \
probabilistic modelling. However, I have long been missing support for \
Bayesian Networks, also known as belief networks. Last year I got tired of \
relying on commercial BN tools and libraries in other languages, so I made my \
own Wolfram  BN implementation This weekend I decided to turn it into a \
paclet and share it with the Wolfram Community.  Here is a short explanation \
of what I did and how it works. ", "Abstract"]], "Text",
 CellChangeTimes->{{3.9633350102939777`*^9, 3.963335165436159*^9}, {
   3.9633352249275856`*^9, 3.963336414893379*^9}, {3.963336449497694*^9, 
   3.9633364872480793`*^9}, {3.9633365352782745`*^9, 3.963336626457594*^9}, {
   3.9633366747919827`*^9, 3.9633370026576824`*^9}, 3.9633370905484753`*^9, {
   3.963337286670679*^9, 3.9633373379225235`*^9}, {3.9633374904626427`*^9, 
   3.9633375297558136`*^9}, {3.9633376515912304`*^9, 
   3.9633376629657497`*^9}, {3.963343907464525*^9, 3.9633439214754105`*^9}, {
   3.9633439778149567`*^9, 
   3.9633440266323967`*^9}},ExpressionUUID->"b4862872-00b8-c841-ab31-\
75e93699e430"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
      "Cloudy", "Rain", "Sprinkler", "Grass"}, {{{1, 2}, {1, 3}, {2, 4}, {3, 
       4}}, Null}, {
      GraphLayout -> {"Dimension" -> 2}, 
       VertexLabels -> {Automatic, "Grass" -> Labeled[
           Graphics[{{
              Opacity[0], 
              
              Point[{{0., -0.8428550619082302}, {0., 
               3.8048069919883467`}}]}, {{}, {
               Directive[
                EdgeForm[
                 Directive[
                  Thickness[Small], 
                  Opacity[0.6859999999999999]]], 
                RGBColor[1., 0.78, 0.2]], {{
                 Directive[
                  EdgeForm[
                   Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                  RGBColor[1, 0.5, 0]], 
                 Tooltip[
                  StatusArea[
                   
                   Rectangle[{0., 0.5487982520029133}, {0.9162000000000001, 
                    1.4512017479970867`}, "RoundingRadius" -> 0], 
                   0.9162000000000001], 
                  Style[0.9162000000000001, {}]]}, {
                 Directive[
                  EdgeForm[
                   Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                  RGBColor[1, 0.5, 0]], 
                 Tooltip[
                  StatusArea[
                   
                   Rectangle[{0., 1.5487982520029133`}, {0.08380000000000001, 
                    2.4512017479970867`}, "RoundingRadius" -> 0], 
                   0.08380000000000001], 
                  Style[
                  0.08380000000000001, {}]]}}}, {}, {}}, {}, {}, {}, {}, {}}, \
{DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
             Axes -> {False, False}, AxesLabel -> {None, None}, 
             AxesOrigin -> {0., -0.8428550619082302}, 
             CoordinatesToolOptions -> {"DisplayFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& )}, Frame -> True, 
             FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{{{1., 
                  Spacer[0], {0.004`20., 0}}, {1., "Wet", 0}, {2., 
                  Spacer[0], {0.004`20., 0}}, {2., "Dry", 0}}, {{1., 
                  Spacer[0], {0.004`20., 0}}, {2., 
                  Spacer[0], {0.004`20., 0}}}}, {None, None}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> Tiny, 
             PlotRange -> {{0, 1}, {All, All}}, PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, None}}], "Grass",
            Top], "Cloudy" -> Labeled[
           Graphics[{{
              Opacity[0], 
              
              Point[{{0., -0.8428550619082302}, {0., 
               3.8048069919883467`}}]}, {{}, {
               Directive[
                EdgeForm[
                 Directive[
                  Thickness[Small], 
                  Opacity[0.6859999999999999]]], 
                RGBColor[1., 0.78, 0.2]], {{
                 Directive[
                  EdgeForm[
                   Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                  RGBColor[1, 0.5, 0]], 
                 Tooltip[
                  StatusArea[
                   
                   Rectangle[{0., 0.5487982520029133}, {0.8000000000000002, 
                    1.4512017479970867`}, "RoundingRadius" -> 0], 
                   0.8000000000000002], 
                  Style[0.8000000000000002, {}]]}, {
                 Directive[
                  EdgeForm[
                   Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                  RGBColor[1, 0.5, 0]], 
                 Tooltip[
                  StatusArea[
                   
                   Rectangle[{0., 1.5487982520029133`}, {0.2, 
                    2.4512017479970867`}, "RoundingRadius" -> 0], 0.2], 
                  Style[0.2, {}]]}}}, {}, {}}, {}, {}, {}, {}, {}}, {
            DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
             Axes -> {False, False}, AxesLabel -> {None, None}, 
             AxesOrigin -> {0., -0.8428550619082302}, 
             CoordinatesToolOptions -> {"DisplayFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& )}, Frame -> True, 
             FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{{{1., 
                  Spacer[0], {0.004`20., 0}}, {1., "True", 0}, {2., 
                  Spacer[0], {0.004`20., 0}}, {2., "False", 0}}, {{1., 
                  Spacer[0], {0.004`20., 0}}, {2., 
                  Spacer[0], {0.004`20., 0}}}}, {None, None}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> Tiny, 
             PlotRange -> {{0, 1}, {All, All}}, PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, None}}], 
           "Cloudy", Top], "Sprinkler" -> Labeled[
           Graphics[{{
              Opacity[0], 
              
              Point[{{0., -0.8428550619082302}, {0., 
               3.8048069919883467`}}]}, {{}, {
               Directive[
                EdgeForm[
                 Directive[
                  Thickness[Small], 
                  Opacity[0.6859999999999999]]], 
                RGBColor[1., 0.78, 0.2]], {{
                 Directive[
                  EdgeForm[
                   Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                  RGBColor[1, 0.5, 0]], 
                 Tooltip[
                  StatusArea[
                   
                   Rectangle[{0., 0.5487982520029133}, {0.18, 
                    1.4512017479970867`}, "RoundingRadius" -> 0], 0.18], 
                  Style[0.18, {}]]}, {
                 Directive[
                  EdgeForm[
                   Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                  RGBColor[1, 0.5, 0]], 
                 Tooltip[
                  StatusArea[
                   
                   Rectangle[{0., 1.5487982520029133`}, {0.8200000000000002, 
                    2.4512017479970867`}, "RoundingRadius" -> 0], 
                   0.8200000000000002], 
                  Style[
                  0.8200000000000002, {}]]}}}, {}, {}}, {}, {}, {}, {}, {}}, {
            DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
             Axes -> {False, False}, AxesLabel -> {None, None}, 
             AxesOrigin -> {0., -0.8428550619082302}, 
             CoordinatesToolOptions -> {"DisplayFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& )}, Frame -> True, 
             FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{{{1., 
                  Spacer[0], {0.004`20., 0}}, {1., "On", 0}, {2., 
                  Spacer[0], {0.004`20., 0}}, {2., "Off", 0}}, {{1., 
                  Spacer[0], {0.004`20., 0}}, {2., 
                  Spacer[0], {0.004`20., 0}}}}, {None, None}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> Tiny, 
             PlotRange -> {{0, 1}, {All, All}}, PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, None}}], 
           "Sprinkler", Top], "Rain" -> Labeled[
           Graphics[{{
              Opacity[0], 
              
              Point[{{0., -0.8428550619082302}, {0., 
               3.8048069919883467`}}]}, {{}, {
               Directive[
                EdgeForm[
                 Directive[
                  Thickness[Small], 
                  Opacity[0.6859999999999999]]], 
                RGBColor[1., 0.78, 0.2]], {{
                 Directive[
                  EdgeForm[
                   Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                  RGBColor[0, 0, 1]], 
                 Tooltip[
                  StatusArea[
                   
                   Rectangle[{0., 0.5487982520029133}, {1.0000000000000002`, 
                    1.4512017479970867`}, "RoundingRadius" -> 0], 
                   1.0000000000000002`], 
                  Style[1.0000000000000002`, {}]]}, {
                 Directive[
                  EdgeForm[
                   Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                  RGBColor[0, 0, 1]], 
                 Tooltip[
                  StatusArea[
                   
                   Rectangle[{0., 1.5487982520029133`}, {0., 
                    2.4512017479970867`}, "RoundingRadius" -> 0], 0], 
                  Style[0, {}]]}}}, {}, {}}, {}, {}, {}, {}, {}}, {
            DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
             Axes -> {False, False}, AxesLabel -> {None, None}, 
             AxesOrigin -> {0., -0.8428550619082302}, 
             CoordinatesToolOptions -> {"DisplayFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& )}, Frame -> True, 
             FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{{{1., 
                  Spacer[0], {0.004`20., 0}}, {1., "True", 0}, {2., 
                  Spacer[0], {0.004`20., 0}}, {2., "False", 0}}, {{1., 
                  Spacer[0], {0.004`20., 0}}, {2., 
                  Spacer[0], {0.004`20., 0}}}}, {None, None}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> Tiny, 
             PlotRange -> {{0, 1}, {All, All}}, PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, None}}], "Rain", 
           Top]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.7], Opacity[0.7], CapForm["Round"], Arrowheads[
        Medium], 
        ArrowBox[{{{-1.8369701987210297`*^-16, 1.}, {1., 
         1.2246467991473532`*^-16}}, {{-1.8369701987210297`*^-16, 
         1.}, {-1., -2.4492935982947064`*^-16}}, {{1., 
         1.2246467991473532`*^-16}, {
         6.123233995736766*^-17, -1.}}, {{-1., -2.4492935982947064`*^-16}, {
         6.123233995736766*^-17, -1.}}}, 0.02261146496815286]}, 
       {Hue[0.6, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {
         DiskBox[{-1.8369701987210297`*^-16, 1.}, 0.02261146496815286], 
         InsetBox[
          TemplateBox[{
            GraphicsBox[{{
               Opacity[0], 
               
               PointBox[{{0., -0.8428550619082302}, {0., 
                3.8048069919883467`}}]}, {{}, {
                Directive[
                 EdgeForm[
                  Directive[
                   Thickness[Small], 
                   Opacity[0.6859999999999999]]], 
                 RGBColor[1., 0.78, 0.2]], {{
                  Directive[
                   EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                   RGBColor[1, 0.5, 0]], 
                  TagBox[
                   TooltipBox[
                    TagBox[
                    
                    RectangleBox[{0., 0.5487982520029133}, {
                    0.8000000000000002, 1.4512017479970867`}, 
                    "RoundingRadius" -> 0], 
                    StatusArea[#, 0.8000000000000002]& , TagBoxNote -> 
                    "0.8000000000000002"], 
                    StyleBox[
                    "0.8000000000000002`", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[0.8000000000000002, {}], "Tooltip"]& ]}, {
                  Directive[
                   EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                   RGBColor[1, 0.5, 0]], 
                  TagBox[
                   TooltipBox[
                    TagBox[
                    
                    RectangleBox[{0., 1.5487982520029133`}, {0.2, 
                    2.4512017479970867`}, "RoundingRadius" -> 0], 
                    StatusArea[#, 0.2]& , TagBoxNote -> "0.2"], 
                    StyleBox["0.2`", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[0.2, {}], 
                    "Tooltip"]& ]}}}, {}, {}}, {}, {}, {}, {}, {}}, {
             DisplayFunction -> Identity, AspectRatio -> 
              NCache[GoldenRatio^(-1), 0.6180339887498948], 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0., -0.8428550619082302}, 
              CoordinatesToolOptions -> {"DisplayFunction" -> ({
                  Identity[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                  Identity[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}& )}, Frame -> True, 
              FrameLabel -> {{None, None}, {None, None}}, 
              FrameTicks -> {{{{1., 
                   FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                   0.004, 0}}, {1., 
                   FormBox["\"True\"", TraditionalForm], 0}, {2., 
                   FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                   0.004, 0}}, {2., 
                   FormBox["\"False\"", TraditionalForm], 0}}, {{1., 
                   FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                   0.004, 0}}, {2., 
                   FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                   0.004, 0}}}}, {None, None}}, GridLines -> {None, None}, 
              GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> Tiny, 
              PlotRange -> {{0, 1}, {All, All}}, PlotRangePadding -> {{
                 Scaled[0.02], 
                 Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, None}}], 
            "\"Cloudy\""},
           "Labeled",
           DisplayFunction->(FormBox[
             GridBox[{{
                ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
                TagBox[
                 ItemBox[
                  PaneBox[
                   TagBox[#, "SkipImageSizeLevel"], 
                   Alignment -> {Center, Baseline}, BaselinePosition -> 
                   Baseline], DefaultBaseStyle -> "Labeled"], 
                 "SkipImageSizeLevel"]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {2, 1}], TraditionalForm]& ),
           InterpretationFunction->(RowBox[{"Labeled", "[", 
              RowBox[{#, ",", #2, ",", "Top", ",", 
                RowBox[{"{", "}"}]}], "]"}]& )], 
          Offset[{2, 2}, {0.022611464968152677, 1.0226114649681528}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1., 1.2246467991473532`*^-16}, 0.02261146496815286], 
         InsetBox[
          TemplateBox[{
            GraphicsBox[{{
               Opacity[0], 
               
               PointBox[{{0., -0.8428550619082302}, {0., 
                3.8048069919883467`}}]}, {{}, {
                Directive[
                 EdgeForm[
                  Directive[
                   Thickness[Small], 
                   Opacity[0.6859999999999999]]], 
                 RGBColor[1., 0.78, 0.2]], {{
                  Directive[
                   EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                   RGBColor[0, 0, 1]], 
                  TagBox[
                   TooltipBox[
                    TagBox[
                    
                    RectangleBox[{0., 0.5487982520029133}, {
                    1.0000000000000002`, 1.4512017479970867`}, 
                    "RoundingRadius" -> 0], 
                    StatusArea[#, 1.0000000000000002`]& , TagBoxNote -> 
                    "1.0000000000000002"], 
                    StyleBox[
                    "1.0000000000000002`", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[1.0000000000000002`, {}], "Tooltip"]& ]}, {
                  Directive[
                   EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                   RGBColor[0, 0, 1]], 
                  TagBox[
                   TooltipBox[
                    TagBox[
                    
                    RectangleBox[{0., 1.5487982520029133`}, {0., 
                    2.4512017479970867`}, "RoundingRadius" -> 0], 
                    StatusArea[#, 0]& , TagBoxNote -> "0"], 
                    StyleBox["0", {}, StripOnInput -> False]], Annotation[#, 
                    Style[0, {}], 
                    "Tooltip"]& ]}}}, {}, {}}, {}, {}, {}, {}, {}}, {
             DisplayFunction -> Identity, AspectRatio -> 
              NCache[GoldenRatio^(-1), 0.6180339887498948], 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0., -0.8428550619082302}, 
              CoordinatesToolOptions -> {"DisplayFunction" -> ({
                  Identity[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                  Identity[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}& )}, Frame -> True, 
              FrameLabel -> {{None, None}, {None, None}}, 
              FrameTicks -> {{{{1., 
                   FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                   0.004, 0}}, {1., 
                   FormBox["\"True\"", TraditionalForm], 0}, {2., 
                   FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                   0.004, 0}}, {2., 
                   FormBox["\"False\"", TraditionalForm], 0}}, {{1., 
                   FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                   0.004, 0}}, {2., 
                   FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                   0.004, 0}}}}, {None, None}}, GridLines -> {None, None}, 
              GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> Tiny, 
              PlotRange -> {{0, 1}, {All, All}}, PlotRangePadding -> {{
                 Scaled[0.02], 
                 Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, None}}], 
            "\"Rain\""},
           "Labeled",
           DisplayFunction->(FormBox[
             GridBox[{{
                ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
                TagBox[
                 ItemBox[
                  PaneBox[
                   TagBox[#, "SkipImageSizeLevel"], 
                   Alignment -> {Center, Baseline}, BaselinePosition -> 
                   Baseline], DefaultBaseStyle -> "Labeled"], 
                 "SkipImageSizeLevel"]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {2, 1}], TraditionalForm]& ),
           InterpretationFunction->(RowBox[{"Labeled", "[", 
              RowBox[{#, ",", #2, ",", "Top", ",", 
                RowBox[{"{", "}"}]}], "]"}]& )], 
          Offset[{2, 2}, {1.0226114649681528, 0.022611464968152983}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-1., -2.4492935982947064`*^-16}, 0.02261146496815286], 
         InsetBox[
          TemplateBox[{
            GraphicsBox[{{
               Opacity[0], 
               
               PointBox[{{0., -0.8428550619082302}, {0., 
                3.8048069919883467`}}]}, {{}, {
                Directive[
                 EdgeForm[
                  Directive[
                   Thickness[Small], 
                   Opacity[0.6859999999999999]]], 
                 RGBColor[1., 0.78, 0.2]], {{
                  Directive[
                   EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                   RGBColor[1, 0.5, 0]], 
                  TagBox[
                   TooltipBox[
                    TagBox[
                    
                    RectangleBox[{0., 0.5487982520029133}, {0.18, 
                    1.4512017479970867`}, "RoundingRadius" -> 0], 
                    StatusArea[#, 0.18]& , TagBoxNote -> "0.18"], 
                    StyleBox["0.18`", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[0.18, {}], "Tooltip"]& ]}, {
                  Directive[
                   EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                   RGBColor[1, 0.5, 0]], 
                  TagBox[
                   TooltipBox[
                    TagBox[
                    
                    RectangleBox[{0., 1.5487982520029133`}, {
                    0.8200000000000002, 2.4512017479970867`}, 
                    "RoundingRadius" -> 0], 
                    StatusArea[#, 0.8200000000000002]& , TagBoxNote -> 
                    "0.8200000000000002"], 
                    StyleBox[
                    "0.8200000000000002`", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[0.8200000000000002, {}], 
                    "Tooltip"]& ]}}}, {}, {}}, {}, {}, {}, {}, {}}, {
             DisplayFunction -> Identity, AspectRatio -> 
              NCache[GoldenRatio^(-1), 0.6180339887498948], 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0., -0.8428550619082302}, 
              CoordinatesToolOptions -> {"DisplayFunction" -> ({
                  Identity[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                  Identity[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}& )}, Frame -> True, 
              FrameLabel -> {{None, None}, {None, None}}, 
              FrameTicks -> {{{{1., 
                   FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                   0.004, 0}}, {1., 
                   FormBox["\"On\"", TraditionalForm], 0}, {2., 
                   FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                   0.004, 0}}, {2., 
                   FormBox["\"Off\"", TraditionalForm], 0}}, {{1., 
                   FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                   0.004, 0}}, {2., 
                   FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                   0.004, 0}}}}, {None, None}}, GridLines -> {None, None}, 
              GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> Tiny, 
              PlotRange -> {{0, 1}, {All, All}}, PlotRangePadding -> {{
                 Scaled[0.02], 
                 Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, None}}], 
            "\"Sprinkler\""},
           "Labeled",
           DisplayFunction->(FormBox[
             GridBox[{{
                ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
                TagBox[
                 ItemBox[
                  PaneBox[
                   TagBox[#, "SkipImageSizeLevel"], 
                   Alignment -> {Center, Baseline}, BaselinePosition -> 
                   Baseline], DefaultBaseStyle -> "Labeled"], 
                 "SkipImageSizeLevel"]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {2, 1}], TraditionalForm]& ),
           InterpretationFunction->(RowBox[{"Labeled", "[", 
              RowBox[{#, ",", #2, ",", "Top", ",", 
                RowBox[{"{", "}"}]}], "]"}]& )], 
          Offset[{2, 2}, {-0.9773885350318472, 0.022611464968152615}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{6.123233995736766*^-17, -1.}, 0.02261146496815286], InsetBox[
          TemplateBox[{
            GraphicsBox[{{
               Opacity[0], 
               
               PointBox[{{0., -0.8428550619082302}, {0., 
                3.8048069919883467`}}]}, {{}, {
                Directive[
                 EdgeForm[
                  Directive[
                   Thickness[Small], 
                   Opacity[0.6859999999999999]]], 
                 RGBColor[1., 0.78, 0.2]], {{
                  Directive[
                   EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                   RGBColor[1, 0.5, 0]], 
                  TagBox[
                   TooltipBox[
                    TagBox[
                    
                    RectangleBox[{0., 0.5487982520029133}, {
                    0.9162000000000001, 1.4512017479970867`}, 
                    "RoundingRadius" -> 0], 
                    StatusArea[#, 0.9162000000000001]& , TagBoxNote -> 
                    "0.9162000000000001"], 
                    StyleBox[
                    "0.9162000000000001`", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[0.9162000000000001, {}], "Tooltip"]& ]}, {
                  Directive[
                   EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                   RGBColor[1, 0.5, 0]], 
                  TagBox[
                   TooltipBox[
                    TagBox[
                    
                    RectangleBox[{0., 1.5487982520029133`}, {
                    0.08380000000000001, 2.4512017479970867`}, 
                    "RoundingRadius" -> 0], 
                    StatusArea[#, 0.08380000000000001]& , TagBoxNote -> 
                    "0.08380000000000001"], 
                    StyleBox[
                    "0.08380000000000001`", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[0.08380000000000001, {}], 
                    "Tooltip"]& ]}}}, {}, {}}, {}, {}, {}, {}, {}}, {
             DisplayFunction -> Identity, AspectRatio -> 
              NCache[GoldenRatio^(-1), 0.6180339887498948], 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0., -0.8428550619082302}, 
              CoordinatesToolOptions -> {"DisplayFunction" -> ({
                  Identity[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                  Identity[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}& )}, Frame -> True, 
              FrameLabel -> {{None, None}, {None, None}}, 
              FrameTicks -> {{{{1., 
                   FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                   0.004, 0}}, {1., 
                   FormBox["\"Wet\"", TraditionalForm], 0}, {2., 
                   FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                   0.004, 0}}, {2., 
                   FormBox["\"Dry\"", TraditionalForm], 0}}, {{1., 
                   FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                   0.004, 0}}, {2., 
                   FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                   0.004, 0}}}}, {None, None}}, GridLines -> {None, None}, 
              GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> Tiny, 
              PlotRange -> {{0, 1}, {All, All}}, PlotRangePadding -> {{
                 Scaled[0.02], 
                 Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, None}}], 
            "\"Grass\""},
           "Labeled",
           DisplayFunction->(FormBox[
             GridBox[{{
                ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
                TagBox[
                 ItemBox[
                  PaneBox[
                   TagBox[#, "SkipImageSizeLevel"], 
                   Alignment -> {Center, Baseline}, BaselinePosition -> 
                   Baseline], DefaultBaseStyle -> "Labeled"], 
                 "SkipImageSizeLevel"]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {2, 1}], TraditionalForm]& ),
           InterpretationFunction->(RowBox[{"Labeled", "[", 
              RowBox[{#, ",", #2, ",", "Top", ",", 
                RowBox[{"{", "}"}]}], "]"}]& )], 
          Offset[{2, 2}, {0.022611464968152924, -0.9773885350318472}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None]], "Input",ExpressionUUID->"f1734fb3-c1c6-ad4c-88ee-\
738959207a44"],

Cell[CellGroupData[{

Cell["Introduction", "Section",
 CellChangeTimes->{{3.963339844340849*^9, 
  3.9633398536984596`*^9}},ExpressionUUID->"4f1a55f2-b25f-1140-a5f3-\
c31166fab912"],

Cell[TextData[{
 "Bayesian Networks (BNs) are graphical probabilistic models for compact \
representation of categorical multivariate distributions . While the number \
of state combinations rapidly explodes with the number of variables, BN take \
advantage of the conditional dependencies to express distributions more \
efficiently in the factored form of a directed acyclic graph (DAG) .  For \
example, we could express P(X,Y,Z) as P(X)P(Y)P(Z|X,Y) if we know how Z \
depends on X and Y.\nBNs are commonly for risk analysis and decision - \
support systems where one is interested in the effect of evidence on \
predictions . \n   \n  If I were to implement a BN framework in any other \
language, a large part of the job would probably be to implement the \
inference algorithms . However, the WL already has a lot of high - level \
functionality for probabilistic analysis . In fact, one should in principle \
be able to just do something like ",
 StyleBox["Probability[x == \"A\" \[Conditioned] y == \"B\" && z == \"C\", \
{x, y, z} \[Distributed] dist]", "InlineCode"],
 ". Moreover, the WL has a ",
 StyleBox["CategoricalDistribution", "InlineCode"],
 " and support support for creating compound distributions using ",
 StyleBox["ProbabilityDistribution", "InlineCode"],
 " . However, there are two issues :"
}], "Text",
 CellChangeTimes->{{3.963337654443119*^9, 3.963337657546171*^9}, {
  3.963337803148096*^9, 3.963337803663969*^9}, {3.9633378366887493`*^9, 
  3.963337839890564*^9}, {3.963338386188141*^9, 
  3.963338542632023*^9}},ExpressionUUID->"b6b3774f-33b8-b744-842e-\
b57789b10bcf"],

Cell[TextData[{
 "It appears that ",
 StyleBox["ProbabilityDistribution", "InlineCode"],
 " does not support categorical domains directly, so I had to find a \
workaround."
}], "ItemNumbered",
 CellChangeTimes->{{3.9633373458107204`*^9, 3.963337473866274*^9}, {
   3.9633397292286644`*^9, 3.9633397292286644`*^9}, 3.9633397707227383`*^9, {
   3.9633400633947144`*^9, 
   3.9633401787592144`*^9}},ExpressionUUID->"06675790-69fc-0c40-a3d4-\
4ac084a8ba87"],

Cell[TextData[{
 "It is inconvenient to use constructs like ",
 StyleBox["{x, y, z} \[Distributed] dist", "InlineCode"],
 " because one has to remember the ordering of the variables."
}], "ItemNumbered",
 CellChangeTimes->{{3.9633373458107204`*^9, 3.9633373789176636`*^9}, 
   3.9633374823157673`*^9, {3.9633397922884274`*^9, 
   3.9633398117528286`*^9}},ExpressionUUID->"c8d2a666-cdb7-ba45-a5dc-\
55e8bd36ece2"],

Cell[CellGroupData[{

Cell["\<\
Solving issue 1: Making ProbabilityDistribution work with categorical \
variables\
\>", "Subsection",
 CellChangeTimes->{{3.963339830481825*^9, 3.963339835518648*^9}, {
  3.963339875995844*^9, 
  3.9633399169589214`*^9}},ExpressionUUID->"2235a9e2-1e29-9143-a6b3-\
3ad99503e08f"],

Cell["\<\
To solve the first issue, I noted that there are two ways to implement \
categorical distributions in the WL:\
\>", "Text",
 CellChangeTimes->{{3.963337547720167*^9, 3.9633375638305397`*^9}, {
  3.9633379140085793`*^9, 3.9633379815891094`*^9}, {3.963339819223524*^9, 
  3.963339823693384*^9}},ExpressionUUID->"b2373134-223e-4f41-9307-\
1b754d6a61a6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dist1", " ", "=", " ", 
  RowBox[{"CategoricalDistribution", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\<A\>\"", ",", "\"\<B\>\"", ",", "\"\<C\>\""}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.1", ",", "0.2", ",", "0.7"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.963337991330755*^9, 3.9633381170843163`*^9}, {
  3.9633381677187195`*^9, 3.963338172221607*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"80c4685c-0c67-6a45-b2e3-d5212e0f1474"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["CategoricalDistribution",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = True, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
               ImageSizeCache -> {
                7.629213089961558, {0., 7.629213089961558}}], Appearance -> 
              None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               GrayLevel[0.55], 
               RectangleBox[{0., 0.}, {0.87, 1.}, RoundingRadius -> 0]}, {
               GrayLevel[0.8], 
               RectangleBox[{1., 0.}, {1.88, 2.}, RoundingRadius -> 0]}, {
               GrayLevel[0.65], 
               RectangleBox[{2., 0.}, {2.88, 3.}, RoundingRadius -> 0]}}, 
             AspectRatio -> 1, Background -> GrayLevel[1], 
             ImageSize -> {Automatic, 29.029}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Scalar\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Categories: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   
                   GridBox[{{"\"A\"", "\"B\"", "\"C\""}}, AutoDelete -> False,
                     FrameStyle -> GrayLevel[0.8], 
                    GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Grid"], "SummaryItem"]}]}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"], 
               ImageSizeCache -> {
                7.629213089961558, {0., 7.629213089961558}}], Appearance -> 
              None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               GrayLevel[0.55], 
               RectangleBox[{0., 0.}, {0.87, 1.}, RoundingRadius -> 0]}, {
               GrayLevel[0.8], 
               RectangleBox[{1., 0.}, {1.88, 2.}, RoundingRadius -> 0]}, {
               GrayLevel[0.65], 
               RectangleBox[{2., 0.}, {2.88, 3.}, RoundingRadius -> 0]}}, 
             AspectRatio -> 1, Background -> GrayLevel[1], 
             ImageSize -> {Automatic, 29.029}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Scalar\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Categories: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   
                   GridBox[{{"\"A\"", "\"B\"", "\"C\""}}, AutoDelete -> False,
                     FrameStyle -> GrayLevel[0.8], 
                    GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Grid"], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Probabilities: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"\"", "SummaryItem"]}]}, {
               TagBox[
                StyleBox[
                 TagBox[
                  TagBox[
                   
                   DynamicModuleBox[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
                    "InitialData" -> <|
                    "A" -> NumberForm[0.1, 2], "B" -> NumberForm[0.2, 2], "C" -> 
                    NumberForm[0.7, 2]|>, "AllowEmbedding" -> True, 
                    "InitialShape" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[31.5], 
                    TypeSystem`PackageScope`UnknownShape[False]]], 3, 
                    DirectedInfinity[1], {}], "InitialType" -> 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[
                    TypeSystem`Enumeration["A", "B", "C"]], 
                    TypeSystem`AnyType, 3], "Meta" -> <||>, "RowTarget" -> 20,
                     "ColumnTarget" -> 10, "Shape" -> 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[31.5], 
                    TypeSystem`PackageScope`UnknownShape[False]]], 3, 
                    DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
                    TypeSystem`Atom[
                    TypeSystem`Enumeration["A", "B", "C"]], 
                    TypeSystem`AnyType, 3], "Path" -> {}, "DisplayedRowCount" -> 
                    3, "DisplayedColumnCount" -> 1, "DataRowCount" -> 3, 
                    "DataColumnCount" -> 1, "SortPaths" -> {}, 
                    "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
                    "UpdateType" -> 1|>, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                    DynamicModule[{
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                    Style[
                    Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["A", 
                    Style[
                    "A", FontColor -> RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["A"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["A"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{31.5, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    NumberForm[0.1, 2], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["A"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["B", 
                    Style[
                    "B", FontColor -> RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["B"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["B"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{31.5, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    NumberForm[0.2, 2], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["B"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["C", 
                    Style[
                    "C", FontColor -> RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["C"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["C"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{31.5, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    NumberForm[0.7, 2], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["C"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}}, 
                    BaseStyle -> {
                    ContextMenu -> 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                    "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                    Dividers -> All, FrameStyle -> 
                    GrayLevel[0.7490196078431373], Spacings -> {0, 0}, 
                    Alignment -> Left, 
                    BaseStyle -> {
                    FontFamily -> "Source Sans Pro", FontSize -> 14, 
                    FontWeight -> Plain}], LineBreakWithin -> False, 
                    ContextMenu -> {}, NumberMarks -> False, ShowAutoStyles -> 
                    False]], TypeSystem`NestedGrid`PackagePrivate`initialQ = 
                    True}, 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`datasetData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
                    DynamicModuleValues :> {}], 
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`SubViewPathbar[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = 
                    Dynamic[
                    Replace[
                    Replace[
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                    Blank[]] -> "", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                    Blank[]], 
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                    Blank[]], 
                    Pattern[
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Blank[]]] :> (
                    Increment[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                    TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader = TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path$, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                    Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`bar, 
                    Except[
                    Alternatives[
                    Blank[Spacer], ""]]] :> 
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedPathbar[
                    TypeSystem`NestedGrid`PackagePrivate`bar]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                    Null}, 
                    DynamicWrapperBox[
                    DynamicBox[
                    ToBoxes[
                    Dataset`DatasetContent[
                    2, "Path" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
                    "Grid" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    "VPos" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
                    "TopBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
                    "BottomBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
                    "OutputID" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
                    StandardForm], 
                    ImageSizeCache -> {
                    101.02000000000001`, {21.31790100542053, 
                    23.92673899457946}}, 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                    MouseAnnotation[], 
                    ImageSizeCache -> {
                    101.02000000000001`, {21.31790100542053, 
                    23.92673899457946}}], 
                    BaseStyle -> {LineBreakWithin -> False}, 
                    DynamicModuleValues :> {}, 
                    Initialization :> (
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
                    CreateUUID[]), 
                    UnsavedVariables :> {
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}], 
                   Deploy, DefaultBaseStyle -> "Deploy"], 
                  Dataset`InterpretDataset[1], Editable -> False, 
                  SelectWithContents -> True, Selectable -> False], 
                 StripOnInput -> False, Magnification -> 0.8 Inherited], 
                "SummaryItem"]}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  CategoricalDistribution[<|
   "Probabilities" -> {0.1, 0.2, 0.7}, 
    "Index" -> <|"A" -> 1, "B" -> 2, "C" -> 3|>|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.9633380198984146`*^9, 3.9633380250022182`*^9}, {
   3.9633380616281414`*^9, 3.9633380700853596`*^9}, {3.963338105374983*^9, 
   3.9633381173333817`*^9}, 3.963338177175167*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"025cb7cd-24dc-3245-ba1b-0110978bab71"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dist2", " ", "=", " ", 
  RowBox[{"EmpiricalDistribution", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0.1", ",", "0.2", ",", "0.7"}], "}"}], "->", 
    RowBox[{"{", 
     RowBox[{"\"\<A\>\"", ",", "\"\<B\>\"", ",", "\"\<C\>\""}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.9633381389973736`*^9, 3.9633381474031963`*^9}, {
  3.963338188883457*^9, 3.9633381926859207`*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"d2ee3da5-5d71-3146-b949-59aa9374a9f9"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["DataDistribution",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = True, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
               ImageSizeCache -> {
                7.629213089961558, {0., 7.629213089961558}}], Appearance -> 
              None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAwBmIQ/Xmu+cn//+/vZ4CCC1M/TWa6cwfO38s482xKyU04
/7jcgZ2dbtfg/Je6ZtOXalyG802T9I879p2H8y+e+nxkr91JOL9Xun/Bj/RD
+2fNBIGT9p8WTNjrlLQdyr9pXzaPm8Nu+1I4/+nEnefMz7Taw/ht95KiXc6v
g/NfPvaf8/Dqbjhfw2XB8sCVR+B8JRNxGd0vp+D8f3Ojb6o8vgDnX14fY2xj
cwXO7xG4e2tC9HU43/RvoXDbvltw/kGLtpk7nt+F8+Ubwm+4rnpgb2IMAo/t
L2W5vN4c8QjO//7nwxKHV4/hfJGr6svnzn0K5y8KkQuQNHkO56tE5zbMPPQC
zp+33O3ny6JXcH7X7PsSkWxv4Py8q0yNM3a/hfPdptUV3Ml4D+d7/I9pnl/z
Ac7PvLb/047Qj3C+c2PT1kSFT3D+9PyPu3meI/jPG5Y+m7/vM5z/IXVnyqH2
L3D+11wh9rOJX+H8zZ6n/6TpfoOGz0v71xkGZsxfEXz51bcmt5/9DufzHHzi
Mnv6Dzj/609jqelFP+0hqeWDfUSZvvFUz19wfsmxrvlKQr/h/B5LbYMZrxH8
2AZtkbnb/sD5K7huWC+p/Qvnv99+sn1y6D84/52FtLqQ/H84v/a576f//3Hx
GRgA8dtlww==
              "], {{{}, {
                 GrayLevel[0.85], 
                 EdgeForm[None], 
                 GraphicsGroupBox[
                  
                  PolygonBox[{{7, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 
                   40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26,
                    25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 
                   11, 10, 9, 8}}]]}, {}, {}}, {{}, {}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 Opacity[1.], 
                 
                 LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 
                  16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 
                  31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 
                  46, 47, 48, 49, 50}]}}}], AspectRatio -> 1, 
             Axes -> {False, False}, AxesLabel -> {None, None}, 
             AxesOrigin -> {0, 0}, Background -> GrayLevel[0.93], 
             BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction -> 
             Identity, Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], LabelStyle -> {FontFamily -> "Arial"}, 
             Method -> {"ScalingFunctions" -> None, "AxesInFront" -> True}, 
             PlotRange -> {All, All}, PlotRangeClipping -> True, 
             PlotRangePadding -> {{0, 0}, {0, 0.1}}, 
             Ticks -> {Automatic, Automatic}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Empirical\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["3", "SummaryItem"]}]}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"], 
               ImageSizeCache -> {
                7.629213089961558, {0., 7.629213089961558}}], Appearance -> 
              None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAwBmIQ/Xmu+cn//+/vZ4CCC1M/TWa6cwfO38s482xKyU04
/7jcgZ2dbtfg/Je6ZtOXalyG802T9I879p2H8y+e+nxkr91JOL9Xun/Bj/RD
+2fNBIGT9p8WTNjrlLQdyr9pXzaPm8Nu+1I4/+nEnefMz7Taw/ht95KiXc6v
g/NfPvaf8/Dqbjhfw2XB8sCVR+B8JRNxGd0vp+D8f3Ojb6o8vgDnX14fY2xj
cwXO7xG4e2tC9HU43/RvoXDbvltw/kGLtpk7nt+F8+Ubwm+4rnpgb2IMAo/t
L2W5vN4c8QjO//7nwxKHV4/hfJGr6svnzn0K5y8KkQuQNHkO56tE5zbMPPQC
zp+33O3ny6JXcH7X7PsSkWxv4Py8q0yNM3a/hfPdptUV3Ml4D+d7/I9pnl/z
Ac7PvLb/047Qj3C+c2PT1kSFT3D+9PyPu3meI/jPG5Y+m7/vM5z/IXVnyqH2
L3D+11wh9rOJX+H8zZ6n/6TpfoOGz0v71xkGZsxfEXz51bcmt5/9DufzHHzi
Mnv6Dzj/609jqelFP+0hqeWDfUSZvvFUz19wfsmxrvlKQr/h/B5LbYMZrxH8
2AZtkbnb/sD5K7huWC+p/Qvnv99+sn1y6D84/52FtLqQ/H84v/a576f//3Hx
GRgA8dtlww==
              "], {{{}, {
                 GrayLevel[0.85], 
                 EdgeForm[None], 
                 GraphicsGroupBox[
                  
                  PolygonBox[{{7, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 
                   40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26,
                    25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 
                   11, 10, 9, 8}}]]}, {}, {}}, {{}, {}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 Opacity[1.], 
                 
                 LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 
                  16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 
                  31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 
                  46, 47, 48, 49, 50}]}}}], AspectRatio -> 1, 
             Axes -> {False, False}, AxesLabel -> {None, None}, 
             AxesOrigin -> {0, 0}, Background -> GrayLevel[0.93], 
             BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction -> 
             Identity, Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], LabelStyle -> {FontFamily -> "Arial"}, 
             Method -> {"ScalingFunctions" -> None, "AxesInFront" -> True}, 
             PlotRange -> {All, All}, PlotRangeClipping -> True, 
             PlotRangePadding -> {{0, 0}, {0, 0.1}}, 
             Ticks -> {Automatic, Automatic}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Empirical\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["3", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Input dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"symbolic\"", "SummaryItem"]}]}}, AutoDelete -> 
             False, BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  DataDistribution[
  "Empirical", {{0.1, 0.2, 0.7}, {"A", "B", "C"}, False}, 1, 3],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.9633380723518753`*^9, {3.963338140700905*^9, 3.96333814769993*^9}, 
   3.963338195822426*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"0451bbdc-3ded-fc4a-b383-a3d19cb29a31"]
}, Open  ]],

Cell[TextData[{
 "However, note that ",
 StyleBox["EmpiricalDistribution", "InlineCode"],
 " produces a ",
 StyleBox["DataDistribution", "InlineCode"],
 ", and ",
 StyleBox["dist1", "InlineCode"],
 " and ",
 StyleBox["dist2", "InlineCode"],
 " behave differently when we try to retrieve their PDF functions: "
}], "Text",
 CellChangeTimes->{{3.963338199891199*^9, 3.963338351516018*^9}, {
   3.9633386037239017`*^9, 3.9633386834133205`*^9}, {3.963339325346983*^9, 
   3.9633393506293526`*^9}, 
   3.9633393812840996`*^9},ExpressionUUID->"7ff97b62-9553-b74d-afec-\
2849cfda3c16"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PDF", "[", 
  RowBox[{"dist1", ",", "x"}], "]"}]], "Input",
 CellLabel->"In[24]:=",ExpressionUUID->"f365b7a1-017c-8b4b-8877-4078037a4779"],

Cell[BoxData[
 RowBox[{"PDF", "[", 
  RowBox[{
   InterpretationBox[
    RowBox[{
     TagBox["CategoricalDistribution",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
                 ImageSizeCache -> {
                  7.629213089961558, {0., 7.629213089961558}}], Appearance -> 
                None, BaseStyle -> {}, 
                ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 GrayLevel[0.55], 
                 RectangleBox[{0., 0.}, {0.87, 1.}, RoundingRadius -> 0]}, {
                 GrayLevel[0.8], 
                 RectangleBox[{1., 0.}, {1.88, 2.}, RoundingRadius -> 0]}, {
                 GrayLevel[0.65], 
                 RectangleBox[{2., 0.}, {2.88, 3.}, RoundingRadius -> 0]}}, 
               AspectRatio -> 1, Background -> GrayLevel[1], 
               ImageSize -> {Automatic, 29.029}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Scalar\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Categories: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TagBox[
                    
                    GridBox[{{"\"A\"", "\"B\"", "\"C\""}}, AutoDelete -> 
                    False, FrameStyle -> GrayLevel[0.8], 
                    GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], "SummaryItem"]}]}}, AutoDelete -> False, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
            False, BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
          GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"], 
                 ImageSizeCache -> {
                  7.629213089961558, {0., 7.629213089961558}}], Appearance -> 
                None, BaseStyle -> {}, 
                ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 GrayLevel[0.55], 
                 RectangleBox[{0., 0.}, {0.87, 1.}, RoundingRadius -> 0]}, {
                 GrayLevel[0.8], 
                 RectangleBox[{1., 0.}, {1.88, 2.}, RoundingRadius -> 0]}, {
                 GrayLevel[0.65], 
                 RectangleBox[{2., 0.}, {2.88, 3.}, RoundingRadius -> 0]}}, 
               AspectRatio -> 1, Background -> GrayLevel[1], 
               ImageSize -> {Automatic, 29.029}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Scalar\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Categories: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TagBox[
                    
                    GridBox[{{"\"A\"", "\"B\"", "\"C\""}}, AutoDelete -> 
                    False, FrameStyle -> GrayLevel[0.8], 
                    GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Probabilities: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"\"", "SummaryItem"]}]}, {
                 TagBox[
                  StyleBox[
                   TagBox[
                    TagBox[
                    
                    DynamicModuleBox[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
                    "InitialData" -> <|
                    "A" -> NumberForm[0.1, 2], "B" -> NumberForm[0.2, 2], "C" -> 
                    NumberForm[0.7, 2]|>, "AllowEmbedding" -> True, 
                    "InitialShape" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[31.5], 
                    TypeSystem`PackageScope`UnknownShape[False]]], 3, 
                    DirectedInfinity[1], {}], "InitialType" -> 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[
                    TypeSystem`Enumeration["A", "B", "C"]], 
                    TypeSystem`AnyType, 3], "Meta" -> <||>, "RowTarget" -> 20,
                     "ColumnTarget" -> 10, "Shape" -> 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[31.5], 
                    TypeSystem`PackageScope`UnknownShape[False]]], 3, 
                    DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
                    TypeSystem`Atom[
                    TypeSystem`Enumeration["A", "B", "C"]], 
                    TypeSystem`AnyType, 3], "Path" -> {}, "DisplayedRowCount" -> 
                    3, "DisplayedColumnCount" -> 1, "DataRowCount" -> 3, 
                    "DataColumnCount" -> 1, "SortPaths" -> {}, 
                    "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
                    "UpdateType" -> 1|>, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                    DynamicModule[{
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                    Style[
                    Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["A", 
                    Style[
                    "A", FontColor -> RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["A"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["A"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{31.5, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    NumberForm[0.1, 2], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["A"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["B", 
                    Style[
                    "B", FontColor -> RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["B"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["B"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{31.5, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    NumberForm[0.2, 2], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["B"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["C", 
                    Style[
                    "C", FontColor -> RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["C"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["C"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{31.5, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    NumberForm[0.7, 2], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["C"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}}, 
                    BaseStyle -> {
                    ContextMenu -> 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                    "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                    Dividers -> All, FrameStyle -> 
                    GrayLevel[0.7490196078431373], Spacings -> {0, 0}, 
                    Alignment -> Left, 
                    BaseStyle -> {
                    FontFamily -> "Source Sans Pro", FontSize -> 14, 
                    FontWeight -> Plain}], LineBreakWithin -> False, 
                    ContextMenu -> {}, NumberMarks -> False, ShowAutoStyles -> 
                    False]], TypeSystem`NestedGrid`PackagePrivate`initialQ = 
                    True}, 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`datasetData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
                    DynamicModuleValues :> {}], 
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`SubViewPathbar[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = 
                    Dynamic[
                    Replace[
                    Replace[
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                    Blank[]] -> "", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                    Blank[]], 
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                    Blank[]], 
                    Pattern[
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Blank[]]] :> (
                    Increment[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                    TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader = TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path$, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                    Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`bar, 
                    Except[
                    Alternatives[
                    Blank[Spacer], ""]]] :> 
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedPathbar[
                    TypeSystem`NestedGrid`PackagePrivate`bar]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                    Null}, 
                    DynamicWrapperBox[
                    DynamicBox[
                    ToBoxes[
                    Dataset`DatasetContent[
                    2, "Path" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
                    "Grid" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    "VPos" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
                    "TopBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
                    "BottomBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
                    "OutputID" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
                    StandardForm], 
                    ImageSizeCache -> {
                    101.02000000000001`, {21.31790100542053, 
                    23.92673899457946}}, 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                    MouseAnnotation[], 
                    ImageSizeCache -> {
                    101.02000000000001`, {21.31790100542053, 
                    23.92673899457946}}], 
                    BaseStyle -> {LineBreakWithin -> False}, 
                    DynamicModuleValues :> {}, 
                    Initialization :> (
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
                    CreateUUID[]), 
                    UnsavedVariables :> {
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}], 
                    Deploy, DefaultBaseStyle -> "Deploy"], 
                    Dataset`InterpretDataset[1], Editable -> False, 
                    SelectWithContents -> True, Selectable -> False], 
                   StripOnInput -> False, Magnification -> 0.8 Inherited], 
                  "SummaryItem"]}}, AutoDelete -> False, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
            False, BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    CategoricalDistribution[<|
     "Probabilities" -> {0.1, 0.2, 0.7}, 
      "Index" -> <|"A" -> 1, "B" -> 2, "C" -> 3|>|>],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", "x"}], "]"}]], "Output",
 CellChangeTimes->{3.9633385797389317`*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"1a0e187f-1a25-5b4b-a766-3b81035f3d48"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PDF", "[", 
  RowBox[{"dist2", ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.9633385877134075`*^9, 3.963338593735195*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"f34a5d1d-e649-c14a-bf0d-448ca1cc957f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"0.1`", " ", 
   RowBox[{"Boole", "[", 
    RowBox[{"\<\"A\"\>", "\[Equal]", "x"}], "]"}]}], "+", 
  RowBox[{"0.2`", " ", 
   RowBox[{"Boole", "[", 
    RowBox[{"\<\"B\"\>", "\[Equal]", "x"}], "]"}]}], "+", 
  RowBox[{"0.7`", " ", 
   RowBox[{"Boole", "[", 
    RowBox[{"\<\"C\"\>", "\[Equal]", "x"}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.963338594450533*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"b8a88ac6-8465-5a47-a9fa-df16f840e401"]
}, Open  ]],

Cell[TextData[{
 StyleBox["EmpiricalDistribution", "InlineCode"],
 " directly produces a symbolic ",
 StyleBox["PDF", "InlineCode"],
 " function in terms of ",
 StyleBox["Boole", "InlineCode"],
 " . This is exactly what I need to be able to construct multivariate \
distributions in my BN model,  however, the domain is still categorical, \
which ",
 StyleBox["ProbabilityDistribution", "InlineCode"],
 " doesn\[CloseCurlyQuote]t like. To solve this, I introduce a domain \
mapping, e.g. ",
 StyleBox["<|\[CloseCurlyDoubleQuote]A\[CloseCurlyDoubleQuote]->1,\
\[CloseCurlyDoubleQuote]B\[CloseCurlyDoubleQuote]->2,\[CloseCurlyDoubleQuote]\
C\[CloseCurlyDoubleQuote]->3|>.\n\n", "InlineCode"],
 "My implementation of",
 StyleBox[" BayesianNetwork ", "InlineCode"],
 "accepts both",
 StyleBox[" CategoricalDistribution ", "InlineCode"],
 "and",
 StyleBox[" EmpiricalDistribution as input, but ", "InlineCode"],
 "represent all distributions internally as ",
 StyleBox["DataDistribution", "InlineCode"],
 " with integer range domains, e.g.: "
}], "Text",
 CellChangeTimes->{{3.963338638019823*^9, 3.963338646171669*^9}, {
  3.9633387112560024`*^9, 3.9633387546118183`*^9}, {3.9633387873193016`*^9, 
  3.9633388319171734`*^9}, {3.963338898296278*^9, 3.963339141034006*^9}, {
  3.963339204093525*^9, 3.9633393116679153`*^9}, {3.963339420228527*^9, 
  3.963339473315298*^9}, {3.9633395050702896`*^9, 3.963339527405403*^9}, {
  3.9633395824253807`*^9, 
  3.96333965028936*^9}},ExpressionUUID->"a1f861e0-a9ca-b84b-b506-\
95612e071761"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dist3", " ", "=", " ", 
  RowBox[{"EmpiricalDistribution", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0.1", ",", "0.2", ",", "0.7"}], "}"}], "->", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9633394760176888`*^9, 3.963339481754986*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"e8f44853-41fe-124a-93b1-855a75eb28b8"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["DataDistribution",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = True, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
               ImageSizeCache -> {
                7.629213089961558, {0., 7.629213089961558}}], Appearance -> 
              None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAwBmIQ/Xmu+cn//+/vZ4CCC1M/TWa6cwfO38s482xKyU04
/7jcgZ2dbtfg/Je6ZtOXalyG802T9I879p2H8y+e+nxkr91JOL9Xun/Bj/RD
+2fNBIGT9p8WTNjrlLQdyr9pXzaPm8Nu+1I4/+nEnefMz7Taw/ht95KiXc6v
g/NfPvaf8/Dqbjhfw2XB8sCVR+B8JRNxGd0vp+D8f3Ojb6o8vgDnX14fY2xj
cwXO7xG4e2tC9HU43/RvoXDbvltw/kGLtpk7nt+F8+Ubwm+4rnpgb2IMAo/t
L2W5vN4c8QjO//7nwxKHV4/hfJGr6svnzn0K5y8KkQuQNHkO56tE5zbMPPQC
zp+33O3ny6JXcH7X7PsSkWxv4Py8q0yNM3a/hfPdptUV3Ml4D+d7/I9pnl/z
Ac7PvLb/047Qj3C+c2PT1kSFT3D+9PyPu3meI/jPG5Y+m7/vM5z/IXVnyqH2
L3D+11wh9rOJX+H8zZ6n/6TpfoOGz0v71xkGZsxfEXz51bcmt5/9DufzHHzi
Mnv6Dzj/609jqelFP+0hqeWDfUSZvvFUz19wfsmxrvlKQr/h/B5LbYMZrxH8
2AZtkbnb/sD5K7huWC+p/Qvnv99+sn1y6D84/52FtLqQ/H84v/a576f//3Hx
GRgA8dtlww==
              "], {{{}, {
                 GrayLevel[0.85], 
                 EdgeForm[None], 
                 GraphicsGroupBox[
                  
                  PolygonBox[{{7, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 
                   40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26,
                    25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 
                   11, 10, 9, 8}}]]}, {}, {}}, {{}, {}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 Opacity[1.], 
                 
                 LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 
                  16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 
                  31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 
                  46, 47, 48, 49, 50}]}}}], AspectRatio -> 1, 
             Axes -> {False, False}, AxesLabel -> {None, None}, 
             AxesOrigin -> {0, 0}, Background -> GrayLevel[0.93], 
             BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction -> 
             Identity, Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], LabelStyle -> {FontFamily -> "Arial"}, 
             Method -> {"ScalingFunctions" -> None, "AxesInFront" -> True}, 
             PlotRange -> {All, All}, PlotRangeClipping -> True, 
             PlotRangePadding -> {{0, 0}, {0, 0.1}}, 
             Ticks -> {Automatic, Automatic}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Empirical\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["3", "SummaryItem"]}]}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"], 
               ImageSizeCache -> {
                7.629213089961558, {0., 7.629213089961558}}], Appearance -> 
              None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAwBmIQ/Xmu+cn//+/vZ4CCC1M/TWa6cwfO38s482xKyU04
/7jcgZ2dbtfg/Je6ZtOXalyG802T9I879p2H8y+e+nxkr91JOL9Xun/Bj/RD
+2fNBIGT9p8WTNjrlLQdyr9pXzaPm8Nu+1I4/+nEnefMz7Taw/ht95KiXc6v
g/NfPvaf8/Dqbjhfw2XB8sCVR+B8JRNxGd0vp+D8f3Ojb6o8vgDnX14fY2xj
cwXO7xG4e2tC9HU43/RvoXDbvltw/kGLtpk7nt+F8+Ubwm+4rnpgb2IMAo/t
L2W5vN4c8QjO//7nwxKHV4/hfJGr6svnzn0K5y8KkQuQNHkO56tE5zbMPPQC
zp+33O3ny6JXcH7X7PsSkWxv4Py8q0yNM3a/hfPdptUV3Ml4D+d7/I9pnl/z
Ac7PvLb/047Qj3C+c2PT1kSFT3D+9PyPu3meI/jPG5Y+m7/vM5z/IXVnyqH2
L3D+11wh9rOJX+H8zZ6n/6TpfoOGz0v71xkGZsxfEXz51bcmt5/9DufzHHzi
Mnv6Dzj/609jqelFP+0hqeWDfUSZvvFUz19wfsmxrvlKQr/h/B5LbYMZrxH8
2AZtkbnb/sD5K7huWC+p/Qvnv99+sn1y6D84/52FtLqQ/H84v/a576f//3Hx
GRgA8dtlww==
              "], {{{}, {
                 GrayLevel[0.85], 
                 EdgeForm[None], 
                 GraphicsGroupBox[
                  
                  PolygonBox[{{7, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 
                   40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26,
                    25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 
                   11, 10, 9, 8}}]]}, {}, {}}, {{}, {}, {
                 GrayLevel[0.55], 
                 AbsoluteThickness[1.5], 
                 Opacity[1.], 
                 
                 LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 
                  16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 
                  31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 
                  46, 47, 48, 49, 50}]}}}], AspectRatio -> 1, 
             Axes -> {False, False}, AxesLabel -> {None, None}, 
             AxesOrigin -> {0, 0}, Background -> GrayLevel[0.93], 
             BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction -> 
             Identity, Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], LabelStyle -> {FontFamily -> "Arial"}, 
             Method -> {"ScalingFunctions" -> None, "AxesInFront" -> True}, 
             PlotRange -> {All, All}, PlotRangeClipping -> True, 
             PlotRangePadding -> {{0, 0}, {0, 0.1}}, 
             Ticks -> {Automatic, Automatic}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Empirical\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["3", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Input dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"1", ",", "3"}], "}"}], "SummaryItem"]}]}}, 
             AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  DataDistribution["Empirical", {{0.1, 0.2, 0.7}, {1, 2, 3}, False}, 1, 3],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.9633394828714848`*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"fd48d9bc-27d5-ba48-a796-c410436238cd"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Solving issue 2 : Making Probability work with named variables\
\>", "Subsection",
 CellChangeTimes->{{3.96333992973427*^9, 
  3.9633399490982456`*^9}},ExpressionUUID->"b5f2aa51-0b0e-c840-bef5-\
c4f68893ff4f"],

Cell[TextData[{
 "The  Probability function in the WL works with multivariate distributions, \
however one has to specify the order of the variables, e.g., ",
 StyleBox["{x, y, z} \[Distributed] dist", "InlineCode"],
 ". \nTo overcome this, my BayesianNetwork makes use of named variables using \
",
 StyleBox["#name ", "InlineCode"],
 "(",
 StyleBox["Slot[\[OpenCurlyDoubleQuote]name\[CloseCurlyDoubleQuote]]", 
  "InlineCode"],
 ").  I then overloaded the ",
 StyleBox["Probability", "InlineCode"],
 " function so that it works with constructs like ",
 StyleBox["Probability[#var2 \[Conditioned] #var1 && #var3 &, BN].", 
  "InlineCode"]
}], "Text",
 CellChangeTimes->{{3.9633396869315624`*^9, 3.963339706479391*^9}, {
   3.9633399519507065`*^9, 3.963340046782152*^9}, {3.963340223290642*^9, 
   3.9633404235653286`*^9}, 3.9633405277014904`*^9, {3.9633406408819065`*^9, 
   3.9633406891981926`*^9}, 
   3.9633407569622345`*^9},ExpressionUUID->"f9316198-312e-b041-9ae7-\
5e77ba85877c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Examples", "Section",
 CellChangeTimes->{{3.9633404258816586`*^9, 3.9633404991655865`*^9}, {
   3.9633405423300343`*^9, 3.9633405677147217`*^9}, {3.9633407036256943`*^9, 
   3.963340713299135*^9}, 
   3.9633438546278477`*^9},ExpressionUUID->"bb06359c-7bb7-254f-9845-\
1c5a43ccfc65"],

Cell["\<\
Before going in detail about the implementation, let me show a small example, \
one that is commonly used to teach BNs:\
\>", "Text",
 CellChangeTimes->{{3.963340998047659*^9, 3.9633410222478294`*^9}, {
  3.963342606438593*^9, 3.963342652570616*^9}, {3.963342784064453*^9, 
  3.9633427874259777`*^9}},ExpressionUUID->"99c457db-3c36-9e42-bb9b-\
25c664a4d526"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BN", " ", "=", " ", 
  RowBox[{"BayesianNetwork", "[", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<Name\>\"", "->", "\"\<Cloudy\>\""}], ",", 
       RowBox[{"\"\<Distribution\>\"", "->", 
        RowBox[{"Function", "[", 
         RowBox[{"CategoricalDistribution", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<True\>\"", ",", "\"\<False\>\""}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.5", ",", "0.5"}], "}"}]}], "]"}], "]"}]}]}], "|>"}], ",",
      "\[IndentingNewLine]", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<Name\>\"", "->", "\"\<Rain\>\""}], ",", 
       RowBox[{"\"\<Distribution\>\"", "->", 
        RowBox[{"Function", "[", 
         RowBox[{"CategoricalDistribution", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<True\>\"", ",", "\"\<False\>\""}], "}"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"Boole", "[", 
              RowBox[{"#Cloudy", "==", "\"\<True\>\""}], "]"}], 
             RowBox[{"{", 
              RowBox[{"0.8", ",", "0.2"}], "}"}]}], "+", 
            RowBox[{
             RowBox[{"Boole", "[", 
              RowBox[{"#Cloudy", "==", "\"\<False\>\""}], "]"}], 
             RowBox[{"{", 
              RowBox[{"0.2", ",", "0.8"}], "}"}]}]}]}], "]"}], "]"}]}]}], 
      "|>"}], ",", "\[IndentingNewLine]", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<Name\>\"", "->", "\"\<Sprinkler\>\""}], ",", 
       RowBox[{"\"\<Distribution\>\"", "->", 
        RowBox[{"Function", "[", 
         RowBox[{"CategoricalDistribution", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<On\>\"", ",", "\"\<Off\>\""}], "}"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"Boole", "[", 
              RowBox[{"#Cloudy", "==", "\"\<True\>\""}], "]"}], 
             RowBox[{"{", 
              RowBox[{"0.1", ",", "0.9"}], "}"}]}], "+", 
            RowBox[{
             RowBox[{"Boole", "[", 
              RowBox[{"#Cloudy", "==", "\"\<False\>\""}], "]"}], 
             RowBox[{"{", 
              RowBox[{"0.5", ",", "0.5"}], "}"}]}]}]}], "]"}], "]"}]}]}], 
      "|>"}], ",", "\[IndentingNewLine]", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<Name\>\"", "->", "\"\<Grass\>\""}], ",", 
       RowBox[{"\"\<Distribution\>\"", "->", 
        RowBox[{"Function", "[", 
         RowBox[{"CategoricalDistribution", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<Wet\>\"", ",", "\"\<Dry\>\""}], "}"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"Boole", "[", 
              RowBox[{
               RowBox[{"#Rain", "==", "\"\<True\>\""}], "&&", 
               RowBox[{"#Sprinkler", "==", "\"\<On\>\""}]}], "]"}], 
             RowBox[{"{", 
              RowBox[{"0.99", ",", "0.01"}], "}"}]}], "+", " ", 
            RowBox[{
             RowBox[{"Boole", "[", 
              RowBox[{
               RowBox[{"#Rain", "==", "\"\<False\>\""}], "&&", 
               RowBox[{"#Sprinkler", "==", "\"\<On\>\""}]}], "]"}], 
             RowBox[{"{", 
              RowBox[{"0.9", ",", "0.1"}], "}"}]}], "+", 
            RowBox[{
             RowBox[{"Boole", "[", 
              RowBox[{
               RowBox[{"#Rain", "==", "\"\<True\>\""}], "&&", 
               RowBox[{"#Sprinkler", "==", "\"\<Off\>\""}]}], "]"}], 
             RowBox[{"{", 
              RowBox[{"0.9", ",", "0.1"}], "}"}]}], "+", 
            RowBox[{
             RowBox[{"Boole", "[", 
              RowBox[{
               RowBox[{"#Rain", "==", "\"\<False\>\""}], "&&", 
               RowBox[{"#Sprinkler", "==", "\"\<Off\>\""}]}], "]"}], 
             RowBox[{"{", 
              RowBox[{"0.0", ",", "1.0"}], "}"}]}]}]}], "]"}], "]"}]}]}], 
      "|>"}]}], "\[IndentingNewLine]", "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.963342741168438*^9, 3.963342843342367*^9}, 
   3.963342935186514*^9},
 CellLabel->"In[51]:=",ExpressionUUID->"d793268b-2955-0043-8a58-a2c78cbf140d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["BayesianNetworkObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               TagBox[
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{"Cloudy", "Rain", "Sprinkler", "Grass"}, {{{1, 
                    2}, {1, 3}, {2, 4}, {3, 4}}, Null}, {
                    GraphLayout -> {"Dimension" -> 2}, ImageSize -> 50, 
                    VertexLabels -> {None}, VertexSize -> {Large}}]]}, 
                   TagBox[
                    GraphicsGroupBox[
                    
                    GraphicsComplexBox[{{-1.8369701987210297`*^-16, 1.}, {1., 
                    1.2246467991473532`*^-16}, {-1., \
-2.4492935982947064`*^-16}, {6.123233995736766*^-17, -1.}}, {{
                    Arrowheads[Medium], 
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.7], 
                    CapForm["Round"]], 
                    
                    ArrowBox[{{1, 2}, {1, 3}, {2, 4}, {3, 4}}, 
                    0.282842712474619]}, {
                    Directive[
                    Hue[0.6, 0.5, 1.], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    DiskBox[1, 0.282842712474619], 
                    DiskBox[2, 0.282842712474619], 
                    DiskBox[3, 0.282842712474619], 
                    DiskBox[4, 0.282842712474619]}}]], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, ImageSize -> 
                  50, DefaultBaseStyle -> "NetworkGraphics"}], 
                "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               TagBox[
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{"Cloudy", "Rain", "Sprinkler", "Grass"}, {{{1, 
                    2}, {1, 3}, {2, 4}, {3, 4}}, Null}, {
                    GraphLayout -> {"Dimension" -> 2}, ImageSize -> 50, 
                    VertexLabels -> {None}, VertexSize -> {Large}}]]}, 
                   TagBox[
                    GraphicsGroupBox[
                    
                    GraphicsComplexBox[{{-1.8369701987210297`*^-16, 1.}, {1., 
                    1.2246467991473532`*^-16}, {-1., \
-2.4492935982947064`*^-16}, {6.123233995736766*^-17, -1.}}, {{
                    Arrowheads[Medium], 
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.7], 
                    CapForm["Round"]], 
                    
                    ArrowBox[{{1, 2}, {1, 3}, {2, 4}, {3, 4}}, 
                    0.282842712474619]}, {
                    Directive[
                    Hue[0.6, 0.5, 1.], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    DiskBox[1, 0.282842712474619], 
                    DiskBox[2, 0.282842712474619], 
                    DiskBox[3, 0.282842712474619], 
                    DiskBox[4, 0.282842712474619]}}]], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, ImageSize -> 
                  50, DefaultBaseStyle -> "NetworkGraphics"}], 
                "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ahafver`BayesianNetwork`BayesianNetworkObject[<|
   "Variables" -> {<|
      "Name" -> "Cloudy", "Parents" -> {}, 
       "Domain" -> <|"True" -> 1, "False" -> 2|>, "Distribution" -> 
       DataDistribution["Empirical", {{0.5, 0.5}, {1, 2}, False}, 1, 2]|>, <|
      "Name" -> "Rain", "Parents" -> {"Cloudy"}, 
       "Domain" -> <|"True" -> 1, "False" -> 2|>, "Distribution" -> 
       DataDistribution[
        "Empirical", {{(0.8 Boole[# == 1.] + 
            0.2 Boole[# == 2.]) (1. Boole[# == 1.] + 
             1. Boole[# == 2.])^(-1)/((0.8 Boole[# == 1.] + 
             0.2 Boole[# == 2.])/(1. Boole[# == 1.] + 
            1. Boole[# == 2.]) + (0.2 Boole[# == 1.] + 0.8 Boole[# == 2.])/(
            1. Boole[# == 1.] + 1. Boole[# == 2.])), (0.2 Boole[# == 1.] + 
            0.8 Boole[# == 2.]) (1. Boole[# == 1.] + 
             1. Boole[# == 2.])^(-1)/((0.8 Boole[# == 1.] + 
             0.2 Boole[# == 2.])/(1. Boole[# == 1.] + 
            1. Boole[# == 2.]) + (0.2 Boole[# == 1.] + 0.8 Boole[# == 2.])/(
            1. Boole[# == 1.] + 1. Boole[# == 2.]))}, {1, 2}, False}, 1, 
         2]|>, <|"Name" -> "Sprinkler", "Parents" -> {"Cloudy"}, 
       "Domain" -> <|"On" -> 1, "Off" -> 2|>, "Distribution" -> 
       DataDistribution[
        "Empirical", {{(0.1 Boole[# == 1.] + 
            0.5 Boole[# == 2.]) (1. Boole[# == 1.] + 
             1. Boole[# == 2.])^(-1)/((0.1 Boole[# == 1.] + 
             0.5 Boole[# == 2.])/(1. Boole[# == 1.] + 
            1. Boole[# == 2.]) + (0.9 Boole[# == 1.] + 0.5 Boole[# == 2.])/(
            1. Boole[# == 1.] + 1. Boole[# == 2.])), (0.9 Boole[# == 1.] + 
            0.5 Boole[# == 2.]) (1. Boole[# == 1.] + 
             1. Boole[# == 2.])^(-1)/((0.1 Boole[# == 1.] + 
             0.5 Boole[# == 2.])/(1. Boole[# == 1.] + 
            1. Boole[# == 2.]) + (0.9 Boole[# == 1.] + 0.5 Boole[# == 2.])/(
            1. Boole[# == 1.] + 1. Boole[# == 2.]))}, {1, 2}, False}, 1, 
         2]|>, <|"Name" -> "Grass", "Parents" -> {"Rain", "Sprinkler"}, 
       "Domain" -> <|"Wet" -> 1, "Dry" -> 2|>, "Distribution" -> 
       DataDistribution["Empirical", {{(0. + 0.99 Boole[
               And[#2 == 1., #3 == 1.]] + 0.9 Boole[
               And[#2 == 1., #3 == 2.]] + 0.9 Boole[
               And[#2 == 2., #3 == 1.]]) (0. + 1. Boole[
                And[#2 == 1., #3 == 1.]] + 1. Boole[
                And[#2 == 1., #3 == 2.]] + 1. Boole[
                And[#2 == 2., #3 == 1.]] + 1. Boole[
                And[#2 == 2., #3 == 2.]])^(-1)/((0. + 0.99 Boole[
                And[#2 == 1., #3 == 1.]] + 0.9 Boole[
                And[#2 == 1., #3 == 2.]] + 0.9 Boole[
                And[#2 == 2., #3 == 1.]])/(0. + 1. Boole[
               And[#2 == 1., #3 == 1.]] + 1. Boole[
               And[#2 == 1., #3 == 2.]] + 1. Boole[
               And[#2 == 2., #3 == 1.]] + 1. Boole[
               And[#2 == 2., #3 == 2.]]) + (0.01 Boole[
                And[#2 == 1., #3 == 1.]] + 0.1 Boole[
                And[#2 == 1., #3 == 2.]] + 0.1 Boole[
                And[#2 == 2., #3 == 1.]] + 1. Boole[
                And[#2 == 2., #3 == 2.]])/(0. + 1. Boole[
               And[#2 == 1., #3 == 1.]] + 1. Boole[
               And[#2 == 1., #3 == 2.]] + 1. Boole[
               And[#2 == 2., #3 == 1.]] + 1. Boole[
               And[#2 == 2., #3 == 2.]])), (0.01 Boole[
               And[#2 == 1., #3 == 1.]] + 0.1 Boole[
               And[#2 == 1., #3 == 2.]] + 0.1 Boole[
               And[#2 == 2., #3 == 1.]] + 1. Boole[
               And[#2 == 2., #3 == 2.]]) (0. + 1. Boole[
                And[#2 == 1., #3 == 1.]] + 1. Boole[
                And[#2 == 1., #3 == 2.]] + 1. Boole[
                And[#2 == 2., #3 == 1.]] + 1. Boole[
                And[#2 == 2., #3 == 2.]])^(-1)/((0. + 0.99 Boole[
                And[#2 == 1., #3 == 1.]] + 0.9 Boole[
                And[#2 == 1., #3 == 2.]] + 0.9 Boole[
                And[#2 == 2., #3 == 1.]])/(0. + 1. Boole[
               And[#2 == 1., #3 == 1.]] + 1. Boole[
               And[#2 == 1., #3 == 2.]] + 1. Boole[
               And[#2 == 2., #3 == 1.]] + 1. Boole[
               And[#2 == 2., #3 == 2.]]) + (0.01 Boole[
                And[#2 == 1., #3 == 1.]] + 0.1 Boole[
                And[#2 == 1., #3 == 2.]] + 0.1 Boole[
                And[#2 == 2., #3 == 1.]] + 1. Boole[
                And[#2 == 2., #3 == 2.]])/(0. + 1. Boole[
               And[#2 == 1., #3 == 1.]] + 1. Boole[
               And[#2 == 1., #3 == 2.]] + 1. Boole[
               And[#2 == 2., #3 == 1.]] + 1. Boole[
               And[#2 == 2., #3 == 2.]]))}, {1, 2}, False}, 1, 2]|>}, 
    "Distribution" -> ProbabilityDistribution[0.0396 (1. Boole[
           And[
           DocumentationTools`Private`\[FormalX]2 == 1., 
            DocumentationTools`Private`\[FormalX]3 == 1.]] + 1. Boole[
           And[
           DocumentationTools`Private`\[FormalX]2 == 1., 
            DocumentationTools`Private`\[FormalX]3 == 2.]] + 1. Boole[
           And[
           DocumentationTools`Private`\[FormalX]2 == 2., 
            DocumentationTools`Private`\[FormalX]3 == 1.]] + 1. Boole[
           And[
           DocumentationTools`Private`\[FormalX]2 == 2., 
            DocumentationTools`Private`\[FormalX]3 == 2.]])^(-1) (
       1. Boole[DocumentationTools`Private`\[FormalX]1 == 1] + 
       1. Boole[DocumentationTools`Private`\[FormalX]1 == 2]) (
        1. Boole[DocumentationTools`Private`\[FormalX]1 == 1.] + 
        1. Boole[DocumentationTools`Private`\[FormalX]1 == 2.])^(-2) (
       Boole[DocumentationTools`Private`\[FormalX]1 == 1.] (
         1. Boole[DocumentationTools`Private`\[FormalX]2 == 1] + 
         0.25 Boole[DocumentationTools`Private`\[FormalX]2 == 2]) + 
       Boole[DocumentationTools`Private`\[FormalX]1 == 2.] (
         0.25 Boole[DocumentationTools`Private`\[FormalX]2 == 1] + 
         1. Boole[DocumentationTools`Private`\[FormalX]2 == 2])) (
       Boole[DocumentationTools`Private`\[FormalX]1 == 2.] (
         5. Boole[DocumentationTools`Private`\[FormalX]3 == 1] + 
         5. Boole[DocumentationTools`Private`\[FormalX]3 == 2]) + 
       Boole[DocumentationTools`Private`\[FormalX]1 == 1.] (
         1. Boole[DocumentationTools`Private`\[FormalX]3 == 1] + 
         9. Boole[DocumentationTools`Private`\[FormalX]3 == 2])) (
       0.9090909090909092 Boole[
          And[
          DocumentationTools`Private`\[FormalX]2 == 2., 
           DocumentationTools`Private`\[FormalX]3 == 1.]] 
        Boole[DocumentationTools`Private`\[FormalX]4 == 1] + Boole[
          And[
          DocumentationTools`Private`\[FormalX]2 == 1., 
           DocumentationTools`Private`\[FormalX]3 == 1.]] (
         1. Boole[DocumentationTools`Private`\[FormalX]4 == 1] + 
         0.010101010101010102` 
          Boole[DocumentationTools`Private`\[FormalX]4 == 2]) + Boole[
          And[
          DocumentationTools`Private`\[FormalX]2 == 1., 
           DocumentationTools`Private`\[FormalX]3 == 2.]] (
         0.9090909090909092 
          Boole[DocumentationTools`Private`\[FormalX]4 == 1] + 
         0.10101010101010102` 
          Boole[DocumentationTools`Private`\[FormalX]4 == 2]) + 
       0.10101010101010102` Boole[
          And[
          DocumentationTools`Private`\[FormalX]2 == 2., 
           DocumentationTools`Private`\[FormalX]3 == 1.]] 
        Boole[DocumentationTools`Private`\[FormalX]4 == 2] + 
       1.0101010101010102` Boole[
          And[
          DocumentationTools`Private`\[FormalX]2 == 2., 
           DocumentationTools`Private`\[FormalX]3 == 2.]] 
        Boole[DocumentationTools`Private`\[FormalX]4 == 2]), {
      DocumentationTools`Private`\[FormalX]1, 1, 2, 1}, {
      DocumentationTools`Private`\[FormalX]2, 1, 2, 1}, {
      DocumentationTools`Private`\[FormalX]3, 1, 2, 1}, {
      DocumentationTools`Private`\[FormalX]4, 1, 2, 1}], "Graph" -> 
    Graph[{"Cloudy", "Rain", "Sprinkler", "Grass"}, {{{1, 2}, {1, 3}, {2, 
       4}, {3, 4}}, Null}, {VertexLabels -> {Automatic}}]|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.963342843805092*^9, {3.9633428823364906`*^9, 3.963342935719103*^9}},
 CellLabel->"Out[51]=",ExpressionUUID->"42024449-2901-ec47-bdab-b39e50e6790d"]
}, Open  ]],

Cell[TextData[{
 "Note that each variable has a name and a distribution, and the \
distributions are wrapped inside ",
 StyleBox["Function[]. T", "InlineCode"],
 "he named function variables are used to infer parent relationships between \
the variables. "
}], "Text",
 CellChangeTimes->{{3.963342957334385*^9, 
  3.963343068095728*^9}},ExpressionUUID->"65cd49d8-d057-b94a-8e29-\
75493d4f5244"],

Cell["We can now compute some probabilities:", "Text",
 CellChangeTimes->{{3.963343080921217*^9, 
  3.963343099066475*^9}},ExpressionUUID->"6ea7414f-a148-2c47-998e-\
66e372ead534"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Probability", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"#Cloudy", " ", "==", "\"\<True\>\""}], "\[Conditioned]", " ", 
     RowBox[{"#Rain", " ", "==", "\"\<True\>\""}]}], "&"}], ",", "BN"}], 
  "]"}]], "Input",
 CellLabel->"In[54]:=",
 CellID->443941269,ExpressionUUID->"99c0d6f8-a0c2-184f-be7e-b027ae1c2d1c"],

Cell[BoxData["0.7999999999999999`"], "Output",
 CellChangeTimes->{3.9633432203009644`*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"79bf4593-4356-8146-bcbd-709e51e582e6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Probability", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"#Sprinkler", "==", "\"\<On\>\""}], "\[Conditioned]", " ", 
     RowBox[{"#Grass", " ", "==", "\"\<Wet\>\""}]}], "&"}], ",", "BN"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9633431631451283`*^9, 3.9633432169498043`*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"98c76eff-1d14-5844-b10a-e49dc95f1213"],

Cell[BoxData["0.4297635605006954`"], "Output",
 CellChangeTimes->{
  3.9631685144119473`*^9, 3.963171762742056*^9, {3.9633431891458073`*^9, 
   3.9633432183162937`*^9}},
 CellLabel->"Out[53]=",ExpressionUUID->"767c4395-ed6a-4749-863c-2c3b018fe559"]
}, Open  ]],

Cell["We can also plot the BN, with and without some evidence:", "Text",
 CellChangeTimes->{{3.9633432282734337`*^9, 
  3.9633432551947594`*^9}},ExpressionUUID->"4a35186d-1f1b-3c47-b9a3-\
48437e8786c7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "[", "BN", "]"}]], "Input",
 CellChangeTimes->{{3.9633432586454086`*^9, 3.9633432617473125`*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"965e95c0-986d-f449-9def-670bfdecafda"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
      "Cloudy", "Rain", "Sprinkler", "Grass"}, {{{1, 2}, {1, 3}, {2, 4}, {3, 
       4}}, Null}, {
      GraphLayout -> {"Dimension" -> 2}, 
       VertexLabels -> {Automatic, "Grass" -> Labeled[
           Graphics[{{
              Opacity[0], 
              
              Point[{{0., -0.8428550619082302}, {0., 
               3.8048069919883467`}}]}, {{}, {
               Directive[
                EdgeForm[
                 Directive[
                  Thickness[Small], 
                  Opacity[0.6859999999999999]]], 
                RGBColor[1., 0.78, 0.2]], {{
                 Directive[
                  EdgeForm[
                   Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                  RGBColor[1, 0.5, 0]], 
                 Tooltip[
                  StatusArea[
                   
                   Rectangle[{0., 0.5487982520029133}, {0.6471000000000001, 
                    1.4512017479970867`}, "RoundingRadius" -> 0], 
                   0.6471000000000001], 
                  Style[0.6471000000000001, {}]]}, {
                 Directive[
                  EdgeForm[
                   Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                  RGBColor[1, 0.5, 0]], 
                 Tooltip[
                  StatusArea[
                   
                   Rectangle[{0., 1.5487982520029133`}, {0.35290000000000005`,
                     2.4512017479970867`}, "RoundingRadius" -> 0], 
                   0.35290000000000005`], 
                  Style[
                  0.35290000000000005`, {}]]}}}, {}, {}}, {}, {}, {}, {}, \
{}}, {DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
             Axes -> {False, False}, AxesLabel -> {None, None}, 
             AxesOrigin -> {0., -0.8428550619082302}, 
             CoordinatesToolOptions -> {"DisplayFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& )}, Frame -> True, 
             FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{{{1., 
                  Spacer[0], {0.004`20., 0}}, {1., "Wet", 0}, {2., 
                  Spacer[0], {0.004`20., 0}}, {2., "Dry", 0}}, {{1., 
                  Spacer[0], {0.004`20., 0}}, {2., 
                  Spacer[0], {0.004`20., 0}}}}, {None, None}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> Tiny, 
             PlotRange -> {{0, 1}, {All, All}}, PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, None}}], "Grass",
            Top], "Cloudy" -> Labeled[
           Graphics[{{
              Opacity[0], 
              
              Point[{{0., -0.8428550619082302}, {0., 
               3.8048069919883467`}}]}, {{}, {
               Directive[
                EdgeForm[
                 Directive[
                  Thickness[Small], 
                  Opacity[0.6859999999999999]]], 
                RGBColor[1., 0.78, 0.2]], {{
                 Directive[
                  EdgeForm[
                   Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                  RGBColor[1, 0.5, 0]], 
                 Tooltip[
                  StatusArea[
                   
                   Rectangle[{0., 0.5487982520029133}, {0.5000000000000001, 
                    1.4512017479970867`}, "RoundingRadius" -> 0], 
                   0.5000000000000001], 
                  Style[0.5000000000000001, {}]]}, {
                 Directive[
                  EdgeForm[
                   Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                  RGBColor[1, 0.5, 0]], 
                 Tooltip[
                  StatusArea[
                   
                   Rectangle[{0., 1.5487982520029133`}, {0.5, 
                    2.4512017479970867`}, "RoundingRadius" -> 0], 0.5], 
                  Style[0.5, {}]]}}}, {}, {}}, {}, {}, {}, {}, {}}, {
            DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
             Axes -> {False, False}, AxesLabel -> {None, None}, 
             AxesOrigin -> {0., -0.8428550619082302}, 
             CoordinatesToolOptions -> {"DisplayFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& )}, Frame -> True, 
             FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{{{1., 
                  Spacer[0], {0.004`20., 0}}, {1., "True", 0}, {2., 
                  Spacer[0], {0.004`20., 0}}, {2., "False", 0}}, {{1., 
                  Spacer[0], {0.004`20., 0}}, {2., 
                  Spacer[0], {0.004`20., 0}}}}, {None, None}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> Tiny, 
             PlotRange -> {{0, 1}, {All, All}}, PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, None}}], 
           "Cloudy", Top], "Sprinkler" -> Labeled[
           Graphics[{{
              Opacity[0], 
              
              Point[{{0., -0.8428550619082302}, {0., 
               3.8048069919883467`}}]}, {{}, {
               Directive[
                EdgeForm[
                 Directive[
                  Thickness[Small], 
                  Opacity[0.6859999999999999]]], 
                RGBColor[1., 0.78, 0.2]], {{
                 Directive[
                  EdgeForm[
                   Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                  RGBColor[1, 0.5, 0]], 
                 Tooltip[
                  StatusArea[
                   
                   Rectangle[{0., 0.5487982520029133}, {0.3, 
                    1.4512017479970867`}, "RoundingRadius" -> 0], 0.3], 
                  Style[0.3, {}]]}, {
                 Directive[
                  EdgeForm[
                   Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                  RGBColor[1, 0.5, 0]], 
                 Tooltip[
                  StatusArea[
                   
                   Rectangle[{0., 1.5487982520029133`}, {0.7000000000000002, 
                    2.4512017479970867`}, "RoundingRadius" -> 0], 
                   0.7000000000000002], 
                  Style[
                  0.7000000000000002, {}]]}}}, {}, {}}, {}, {}, {}, {}, {}}, {
            DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
             Axes -> {False, False}, AxesLabel -> {None, None}, 
             AxesOrigin -> {0., -0.8428550619082302}, 
             CoordinatesToolOptions -> {"DisplayFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& )}, Frame -> True, 
             FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{{{1., 
                  Spacer[0], {0.004`20., 0}}, {1., "On", 0}, {2., 
                  Spacer[0], {0.004`20., 0}}, {2., "Off", 0}}, {{1., 
                  Spacer[0], {0.004`20., 0}}, {2., 
                  Spacer[0], {0.004`20., 0}}}}, {None, None}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> Tiny, 
             PlotRange -> {{0, 1}, {All, All}}, PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, None}}], 
           "Sprinkler", Top], "Rain" -> Labeled[
           Graphics[{{
              Opacity[0], 
              
              Point[{{0., -0.8428550619082302}, {0., 
               3.8048069919883467`}}]}, {{}, {
               Directive[
                EdgeForm[
                 Directive[
                  Thickness[Small], 
                  Opacity[0.6859999999999999]]], 
                RGBColor[1., 0.78, 0.2]], {{
                 Directive[
                  EdgeForm[
                   Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                  RGBColor[1, 0.5, 0]], 
                 Tooltip[
                  StatusArea[
                   
                   Rectangle[{0., 0.5487982520029133}, {0.5000000000000001, 
                    1.4512017479970867`}, "RoundingRadius" -> 0], 
                   0.5000000000000001], 
                  Style[0.5000000000000001, {}]]}, {
                 Directive[
                  EdgeForm[
                   Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                  RGBColor[1, 0.5, 0]], 
                 Tooltip[
                  StatusArea[
                   
                   Rectangle[{0., 1.5487982520029133`}, {0.5, 
                    2.4512017479970867`}, "RoundingRadius" -> 0], 0.5], 
                  Style[0.5, {}]]}}}, {}, {}}, {}, {}, {}, {}, {}}, {
            DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
             Axes -> {False, False}, AxesLabel -> {None, None}, 
             AxesOrigin -> {0., -0.8428550619082302}, 
             CoordinatesToolOptions -> {"DisplayFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& )}, Frame -> True, 
             FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{{{1., 
                  Spacer[0], {0.004`20., 0}}, {1., "True", 0}, {2., 
                  Spacer[0], {0.004`20., 0}}, {2., "False", 0}}, {{1., 
                  Spacer[0], {0.004`20., 0}}, {2., 
                  Spacer[0], {0.004`20., 0}}}}, {None, None}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> Tiny, 
             PlotRange -> {{0, 1}, {All, All}}, PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, None}}], "Rain", 
           Top]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.7], Opacity[0.7], CapForm["Round"], Arrowheads[
        Medium], 
        ArrowBox[{{{-1.8369701987210297`*^-16, 1.}, {1., 
         1.2246467991473532`*^-16}}, {{-1.8369701987210297`*^-16, 
         1.}, {-1., -2.4492935982947064`*^-16}}, {{1., 
         1.2246467991473532`*^-16}, {
         6.123233995736766*^-17, -1.}}, {{-1., -2.4492935982947064`*^-16}, {
         6.123233995736766*^-17, -1.}}}, 0.02261146496815286]}, 
       {Hue[0.6, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {
         DiskBox[{-1.8369701987210297`*^-16, 1.}, 0.02261146496815286], 
         InsetBox[
          TemplateBox[{
            GraphicsBox[{{
               Opacity[0], 
               
               PointBox[{{0., -0.8428550619082302}, {0., 
                3.8048069919883467`}}]}, {{}, {
                Directive[
                 EdgeForm[
                  Directive[
                   Thickness[Small], 
                   Opacity[0.6859999999999999]]], 
                 RGBColor[1., 0.78, 0.2]], {{
                  Directive[
                   EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                   RGBColor[1, 0.5, 0]], 
                  TagBox[
                   TooltipBox[
                    TagBox[
                    
                    RectangleBox[{0., 0.5487982520029133}, {
                    0.5000000000000001, 1.4512017479970867`}, 
                    "RoundingRadius" -> 0], 
                    StatusArea[#, 0.5000000000000001]& , TagBoxNote -> 
                    "0.5000000000000001"], 
                    StyleBox[
                    "0.5000000000000001`", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[0.5000000000000001, {}], "Tooltip"]& ]}, {
                  Directive[
                   EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                   RGBColor[1, 0.5, 0]], 
                  TagBox[
                   TooltipBox[
                    TagBox[
                    
                    RectangleBox[{0., 1.5487982520029133`}, {0.5, 
                    2.4512017479970867`}, "RoundingRadius" -> 0], 
                    StatusArea[#, 0.5]& , TagBoxNote -> "0.5"], 
                    StyleBox["0.5`", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[0.5, {}], 
                    "Tooltip"]& ]}}}, {}, {}}, {}, {}, {}, {}, {}}, {
             DisplayFunction -> Identity, AspectRatio -> 
              NCache[GoldenRatio^(-1), 0.6180339887498948], 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0., -0.8428550619082302}, 
              CoordinatesToolOptions -> {"DisplayFunction" -> ({
                  Identity[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                  Identity[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}& )}, Frame -> True, 
              FrameLabel -> {{None, None}, {None, None}}, 
              FrameTicks -> {{{{1., 
                   FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                   0.004, 0}}, {1., 
                   FormBox["\"True\"", TraditionalForm], 0}, {2., 
                   FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                   0.004, 0}}, {2., 
                   FormBox["\"False\"", TraditionalForm], 0}}, {{1., 
                   FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                   0.004, 0}}, {2., 
                   FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                   0.004, 0}}}}, {None, None}}, GridLines -> {None, None}, 
              GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> Tiny, 
              PlotRange -> {{0, 1}, {All, All}}, PlotRangePadding -> {{
                 Scaled[0.02], 
                 Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, None}}], 
            "\"Cloudy\""},
           "Labeled",
           DisplayFunction->(FormBox[
             GridBox[{{
                ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
                TagBox[
                 ItemBox[
                  PaneBox[
                   TagBox[#, "SkipImageSizeLevel"], 
                   Alignment -> {Center, Baseline}, BaselinePosition -> 
                   Baseline], DefaultBaseStyle -> "Labeled"], 
                 "SkipImageSizeLevel"]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {2, 1}], TraditionalForm]& ),
           InterpretationFunction->(RowBox[{"Labeled", "[", 
              RowBox[{#, ",", #2, ",", "Top", ",", 
                RowBox[{"{", "}"}]}], "]"}]& )], 
          Offset[{2, 2}, {0.022611464968152677, 1.0226114649681528}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1., 1.2246467991473532`*^-16}, 0.02261146496815286], 
         InsetBox[
          TemplateBox[{
            GraphicsBox[{{
               Opacity[0], 
               
               PointBox[{{0., -0.8428550619082302}, {0., 
                3.8048069919883467`}}]}, {{}, {
                Directive[
                 EdgeForm[
                  Directive[
                   Thickness[Small], 
                   Opacity[0.6859999999999999]]], 
                 RGBColor[1., 0.78, 0.2]], {{
                  Directive[
                   EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                   RGBColor[1, 0.5, 0]], 
                  TagBox[
                   TooltipBox[
                    TagBox[
                    
                    RectangleBox[{0., 0.5487982520029133}, {
                    0.5000000000000001, 1.4512017479970867`}, 
                    "RoundingRadius" -> 0], 
                    StatusArea[#, 0.5000000000000001]& , TagBoxNote -> 
                    "0.5000000000000001"], 
                    StyleBox[
                    "0.5000000000000001`", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[0.5000000000000001, {}], "Tooltip"]& ]}, {
                  Directive[
                   EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                   RGBColor[1, 0.5, 0]], 
                  TagBox[
                   TooltipBox[
                    TagBox[
                    
                    RectangleBox[{0., 1.5487982520029133`}, {0.5, 
                    2.4512017479970867`}, "RoundingRadius" -> 0], 
                    StatusArea[#, 0.5]& , TagBoxNote -> "0.5"], 
                    StyleBox["0.5`", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[0.5, {}], 
                    "Tooltip"]& ]}}}, {}, {}}, {}, {}, {}, {}, {}}, {
             DisplayFunction -> Identity, AspectRatio -> 
              NCache[GoldenRatio^(-1), 0.6180339887498948], 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0., -0.8428550619082302}, 
              CoordinatesToolOptions -> {"DisplayFunction" -> ({
                  Identity[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                  Identity[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}& )}, Frame -> True, 
              FrameLabel -> {{None, None}, {None, None}}, 
              FrameTicks -> {{{{1., 
                   FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                   0.004, 0}}, {1., 
                   FormBox["\"True\"", TraditionalForm], 0}, {2., 
                   FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                   0.004, 0}}, {2., 
                   FormBox["\"False\"", TraditionalForm], 0}}, {{1., 
                   FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                   0.004, 0}}, {2., 
                   FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                   0.004, 0}}}}, {None, None}}, GridLines -> {None, None}, 
              GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> Tiny, 
              PlotRange -> {{0, 1}, {All, All}}, PlotRangePadding -> {{
                 Scaled[0.02], 
                 Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, None}}], 
            "\"Rain\""},
           "Labeled",
           DisplayFunction->(FormBox[
             GridBox[{{
                ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
                TagBox[
                 ItemBox[
                  PaneBox[
                   TagBox[#, "SkipImageSizeLevel"], 
                   Alignment -> {Center, Baseline}, BaselinePosition -> 
                   Baseline], DefaultBaseStyle -> "Labeled"], 
                 "SkipImageSizeLevel"]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {2, 1}], TraditionalForm]& ),
           InterpretationFunction->(RowBox[{"Labeled", "[", 
              RowBox[{#, ",", #2, ",", "Top", ",", 
                RowBox[{"{", "}"}]}], "]"}]& )], 
          Offset[{2, 2}, {1.0226114649681528, 0.022611464968152983}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-1., -2.4492935982947064`*^-16}, 0.02261146496815286], 
         InsetBox[
          TemplateBox[{
            GraphicsBox[{{
               Opacity[0], 
               
               PointBox[{{0., -0.8428550619082302}, {0., 
                3.8048069919883467`}}]}, {{}, {
                Directive[
                 EdgeForm[
                  Directive[
                   Thickness[Small], 
                   Opacity[0.6859999999999999]]], 
                 RGBColor[1., 0.78, 0.2]], {{
                  Directive[
                   EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                   RGBColor[1, 0.5, 0]], 
                  TagBox[
                   TooltipBox[
                    TagBox[
                    
                    RectangleBox[{0., 0.5487982520029133}, {0.3, 
                    1.4512017479970867`}, "RoundingRadius" -> 0], 
                    StatusArea[#, 0.3]& , TagBoxNote -> "0.3"], 
                    StyleBox["0.3`", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[0.3, {}], "Tooltip"]& ]}, {
                  Directive[
                   EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                   RGBColor[1, 0.5, 0]], 
                  TagBox[
                   TooltipBox[
                    TagBox[
                    
                    RectangleBox[{0., 1.5487982520029133`}, {
                    0.7000000000000002, 2.4512017479970867`}, 
                    "RoundingRadius" -> 0], 
                    StatusArea[#, 0.7000000000000002]& , TagBoxNote -> 
                    "0.7000000000000002"], 
                    StyleBox[
                    "0.7000000000000002`", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[0.7000000000000002, {}], 
                    "Tooltip"]& ]}}}, {}, {}}, {}, {}, {}, {}, {}}, {
             DisplayFunction -> Identity, AspectRatio -> 
              NCache[GoldenRatio^(-1), 0.6180339887498948], 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0., -0.8428550619082302}, 
              CoordinatesToolOptions -> {"DisplayFunction" -> ({
                  Identity[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                  Identity[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}& )}, Frame -> True, 
              FrameLabel -> {{None, None}, {None, None}}, 
              FrameTicks -> {{{{1., 
                   FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                   0.004, 0}}, {1., 
                   FormBox["\"On\"", TraditionalForm], 0}, {2., 
                   FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                   0.004, 0}}, {2., 
                   FormBox["\"Off\"", TraditionalForm], 0}}, {{1., 
                   FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                   0.004, 0}}, {2., 
                   FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                   0.004, 0}}}}, {None, None}}, GridLines -> {None, None}, 
              GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> Tiny, 
              PlotRange -> {{0, 1}, {All, All}}, PlotRangePadding -> {{
                 Scaled[0.02], 
                 Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, None}}], 
            "\"Sprinkler\""},
           "Labeled",
           DisplayFunction->(FormBox[
             GridBox[{{
                ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
                TagBox[
                 ItemBox[
                  PaneBox[
                   TagBox[#, "SkipImageSizeLevel"], 
                   Alignment -> {Center, Baseline}, BaselinePosition -> 
                   Baseline], DefaultBaseStyle -> "Labeled"], 
                 "SkipImageSizeLevel"]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {2, 1}], TraditionalForm]& ),
           InterpretationFunction->(RowBox[{"Labeled", "[", 
              RowBox[{#, ",", #2, ",", "Top", ",", 
                RowBox[{"{", "}"}]}], "]"}]& )], 
          Offset[{2, 2}, {-0.9773885350318472, 0.022611464968152615}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{6.123233995736766*^-17, -1.}, 0.02261146496815286], InsetBox[
          TemplateBox[{
            GraphicsBox[{{
               Opacity[0], 
               
               PointBox[{{0., -0.8428550619082302}, {0., 
                3.8048069919883467`}}]}, {{}, {
                Directive[
                 EdgeForm[
                  Directive[
                   Thickness[Small], 
                   Opacity[0.6859999999999999]]], 
                 RGBColor[1., 0.78, 0.2]], {{
                  Directive[
                   EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                   RGBColor[1, 0.5, 0]], 
                  TagBox[
                   TooltipBox[
                    TagBox[
                    
                    RectangleBox[{0., 0.5487982520029133}, {
                    0.6471000000000001, 1.4512017479970867`}, 
                    "RoundingRadius" -> 0], 
                    StatusArea[#, 0.6471000000000001]& , TagBoxNote -> 
                    "0.6471000000000001"], 
                    StyleBox[
                    "0.6471000000000001`", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[0.6471000000000001, {}], "Tooltip"]& ]}, {
                  Directive[
                   EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                   RGBColor[1, 0.5, 0]], 
                  TagBox[
                   TooltipBox[
                    TagBox[
                    
                    RectangleBox[{0., 1.5487982520029133`}, {
                    0.35290000000000005`, 2.4512017479970867`}, 
                    "RoundingRadius" -> 0], 
                    StatusArea[#, 0.35290000000000005`]& , TagBoxNote -> 
                    "0.35290000000000005"], 
                    StyleBox[
                    "0.35290000000000005`", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[0.35290000000000005`, {}], 
                    "Tooltip"]& ]}}}, {}, {}}, {}, {}, {}, {}, {}}, {
             DisplayFunction -> Identity, AspectRatio -> 
              NCache[GoldenRatio^(-1), 0.6180339887498948], 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0., -0.8428550619082302}, 
              CoordinatesToolOptions -> {"DisplayFunction" -> ({
                  Identity[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                  Identity[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}& )}, Frame -> True, 
              FrameLabel -> {{None, None}, {None, None}}, 
              FrameTicks -> {{{{1., 
                   FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                   0.004, 0}}, {1., 
                   FormBox["\"Wet\"", TraditionalForm], 0}, {2., 
                   FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                   0.004, 0}}, {2., 
                   FormBox["\"Dry\"", TraditionalForm], 0}}, {{1., 
                   FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                   0.004, 0}}, {2., 
                   FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                   0.004, 0}}}}, {None, None}}, GridLines -> {None, None}, 
              GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> Tiny, 
              PlotRange -> {{0, 1}, {All, All}}, PlotRangePadding -> {{
                 Scaled[0.02], 
                 Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, None}}], 
            "\"Grass\""},
           "Labeled",
           DisplayFunction->(FormBox[
             GridBox[{{
                ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
                TagBox[
                 ItemBox[
                  PaneBox[
                   TagBox[#, "SkipImageSizeLevel"], 
                   Alignment -> {Center, Baseline}, BaselinePosition -> 
                   Baseline], DefaultBaseStyle -> "Labeled"], 
                 "SkipImageSizeLevel"]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {2, 1}], TraditionalForm]& ),
           InterpretationFunction->(RowBox[{"Labeled", "[", 
              RowBox[{#, ",", #2, ",", "Top", ",", 
                RowBox[{"{", "}"}]}], "]"}]& )], 
          Offset[{2, 2}, {0.022611464968152924, -0.9773885350318472}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.963343262497198*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"093d3023-1295-8740-9d3e-8313a78ce349"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{"BN", ",", 
   RowBox[{
    RowBox[{"#Rain", "==", "\"\<True\>\""}], "&"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9633432658449*^9, 3.9633432803433228`*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"abaff592-744c-c640-85b0-929a18295198"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
      "Cloudy", "Rain", "Sprinkler", "Grass"}, {{{1, 2}, {1, 3}, {2, 4}, {3, 
       4}}, Null}, {
      GraphLayout -> {"Dimension" -> 2}, 
       VertexLabels -> {Automatic, "Grass" -> Labeled[
           Graphics[{{
              Opacity[0], 
              
              Point[{{0., -0.8428550619082302}, {0., 
               3.8048069919883467`}}]}, {{}, {
               Directive[
                EdgeForm[
                 Directive[
                  Thickness[Small], 
                  Opacity[0.6859999999999999]]], 
                RGBColor[1., 0.78, 0.2]], {{
                 Directive[
                  EdgeForm[
                   Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                  RGBColor[1, 0.5, 0]], 
                 Tooltip[
                  StatusArea[
                   
                   Rectangle[{0., 0.5487982520029133}, {0.9162, 
                    1.4512017479970867`}, "RoundingRadius" -> 0], 0.9162], 
                  Style[0.9162, {}]]}, {
                 Directive[
                  EdgeForm[
                   Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                  RGBColor[1, 0.5, 0]], 
                 Tooltip[
                  StatusArea[
                   
                   Rectangle[{0., 1.5487982520029133`}, {0.08379999999999999, 
                    2.4512017479970867`}, "RoundingRadius" -> 0], 
                   0.08379999999999999], 
                  Style[
                  0.08379999999999999, {}]]}}}, {}, {}}, {}, {}, {}, {}, {}}, \
{DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
             Axes -> {False, False}, AxesLabel -> {None, None}, 
             AxesOrigin -> {0., -0.8428550619082302}, 
             CoordinatesToolOptions -> {"DisplayFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& )}, Frame -> True, 
             FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{{{1., 
                  Spacer[0], {0.004`20., 0}}, {1., "Wet", 0}, {2., 
                  Spacer[0], {0.004`20., 0}}, {2., "Dry", 0}}, {{1., 
                  Spacer[0], {0.004`20., 0}}, {2., 
                  Spacer[0], {0.004`20., 0}}}}, {None, None}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> Tiny, 
             PlotRange -> {{0, 1}, {All, All}}, PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, None}}], "Grass",
            Top], "Cloudy" -> Labeled[
           Graphics[{{
              Opacity[0], 
              
              Point[{{0., -0.8428550619082302}, {0., 
               3.8048069919883467`}}]}, {{}, {
               Directive[
                EdgeForm[
                 Directive[
                  Thickness[Small], 
                  Opacity[0.6859999999999999]]], 
                RGBColor[1., 0.78, 0.2]], {{
                 Directive[
                  EdgeForm[
                   Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                  RGBColor[1, 0.5, 0]], 
                 Tooltip[
                  StatusArea[
                   
                   Rectangle[{0., 0.5487982520029133}, {0.7999999999999999, 
                    1.4512017479970867`}, "RoundingRadius" -> 0], 
                   0.7999999999999999], 
                  Style[0.7999999999999999, {}]]}, {
                 Directive[
                  EdgeForm[
                   Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                  RGBColor[1, 0.5, 0]], 
                 Tooltip[
                  StatusArea[
                   
                   Rectangle[{0., 1.5487982520029133`}, {0.19999999999999996`,
                     2.4512017479970867`}, "RoundingRadius" -> 0], 
                   0.19999999999999996`], 
                  Style[
                  0.19999999999999996`, {}]]}}}, {}, {}}, {}, {}, {}, {}, \
{}}, {DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
             Axes -> {False, False}, AxesLabel -> {None, None}, 
             AxesOrigin -> {0., -0.8428550619082302}, 
             CoordinatesToolOptions -> {"DisplayFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& )}, Frame -> True, 
             FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{{{1., 
                  Spacer[0], {0.004`20., 0}}, {1., "True", 0}, {2., 
                  Spacer[0], {0.004`20., 0}}, {2., "False", 0}}, {{1., 
                  Spacer[0], {0.004`20., 0}}, {2., 
                  Spacer[0], {0.004`20., 0}}}}, {None, None}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> Tiny, 
             PlotRange -> {{0, 1}, {All, All}}, PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, None}}], 
           "Cloudy", Top], "Sprinkler" -> Labeled[
           Graphics[{{
              Opacity[0], 
              
              Point[{{0., -0.8428550619082302}, {0., 
               3.8048069919883467`}}]}, {{}, {
               Directive[
                EdgeForm[
                 Directive[
                  Thickness[Small], 
                  Opacity[0.6859999999999999]]], 
                RGBColor[1., 0.78, 0.2]], {{
                 Directive[
                  EdgeForm[
                   Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                  RGBColor[1, 0.5, 0]], 
                 Tooltip[
                  StatusArea[
                   
                   Rectangle[{0., 0.5487982520029133}, {0.17999999999999997`, 
                    1.4512017479970867`}, "RoundingRadius" -> 0], 
                   0.17999999999999997`], 
                  Style[0.17999999999999997`, {}]]}, {
                 Directive[
                  EdgeForm[
                   Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                  RGBColor[1, 0.5, 0]], 
                 Tooltip[
                  StatusArea[
                   
                   Rectangle[{0., 1.5487982520029133`}, {0.82, 
                    2.4512017479970867`}, "RoundingRadius" -> 0], 0.82], 
                  Style[0.82, {}]]}}}, {}, {}}, {}, {}, {}, {}, {}}, {
            DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
             Axes -> {False, False}, AxesLabel -> {None, None}, 
             AxesOrigin -> {0., -0.8428550619082302}, 
             CoordinatesToolOptions -> {"DisplayFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& )}, Frame -> True, 
             FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{{{1., 
                  Spacer[0], {0.004`20., 0}}, {1., "On", 0}, {2., 
                  Spacer[0], {0.004`20., 0}}, {2., "Off", 0}}, {{1., 
                  Spacer[0], {0.004`20., 0}}, {2., 
                  Spacer[0], {0.004`20., 0}}}}, {None, None}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> Tiny, 
             PlotRange -> {{0, 1}, {All, All}}, PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, None}}], 
           "Sprinkler", Top], "Rain" -> Labeled[
           Graphics[{{
              Opacity[0], 
              
              Point[{{0., -0.8428550619082302}, {0., 
               3.8048069919883467`}}]}, {{}, {
               Directive[
                EdgeForm[
                 Directive[
                  Thickness[Small], 
                  Opacity[0.6859999999999999]]], 
                RGBColor[1., 0.78, 0.2]], {{
                 Directive[
                  EdgeForm[
                   Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                  RGBColor[0, 0, 1]], 
                 Tooltip[
                  StatusArea[
                   
                   Rectangle[{0., 0.5487982520029133}, {1., 
                    1.4512017479970867`}, "RoundingRadius" -> 0], 1], 
                  Style[1, {}]]}, {
                 Directive[
                  EdgeForm[
                   Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                  RGBColor[0, 0, 1]], 
                 Tooltip[
                  StatusArea[
                   
                   Rectangle[{0., 1.5487982520029133`}, {0., 
                    2.4512017479970867`}, "RoundingRadius" -> 0], 0], 
                  Style[0, {}]]}}}, {}, {}}, {}, {}, {}, {}, {}}, {
            DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
             Axes -> {False, False}, AxesLabel -> {None, None}, 
             AxesOrigin -> {0., -0.8428550619082302}, 
             CoordinatesToolOptions -> {"DisplayFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& )}, Frame -> True, 
             FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{{{1., 
                  Spacer[0], {0.004`20., 0}}, {1., "True", 0}, {2., 
                  Spacer[0], {0.004`20., 0}}, {2., "False", 0}}, {{1., 
                  Spacer[0], {0.004`20., 0}}, {2., 
                  Spacer[0], {0.004`20., 0}}}}, {None, None}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> Tiny, 
             PlotRange -> {{0, 1}, {All, All}}, PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, None}}], "Rain", 
           Top]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.7], Opacity[0.7], CapForm["Round"], Arrowheads[
        Medium], 
        ArrowBox[{{{-1.8369701987210297`*^-16, 1.}, {1., 
         1.2246467991473532`*^-16}}, {{-1.8369701987210297`*^-16, 
         1.}, {-1., -2.4492935982947064`*^-16}}, {{1., 
         1.2246467991473532`*^-16}, {
         6.123233995736766*^-17, -1.}}, {{-1., -2.4492935982947064`*^-16}, {
         6.123233995736766*^-17, -1.}}}, 0.02261146496815286]}, 
       {Hue[0.6, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {
         DiskBox[{-1.8369701987210297`*^-16, 1.}, 0.02261146496815286], 
         InsetBox[
          TemplateBox[{
            GraphicsBox[{{
               Opacity[0], 
               
               PointBox[{{0., -0.8428550619082302}, {0., 
                3.8048069919883467`}}]}, {{}, {
                Directive[
                 EdgeForm[
                  Directive[
                   Thickness[Small], 
                   Opacity[0.6859999999999999]]], 
                 RGBColor[1., 0.78, 0.2]], {{
                  Directive[
                   EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                   RGBColor[1, 0.5, 0]], 
                  TagBox[
                   TooltipBox[
                    TagBox[
                    
                    RectangleBox[{0., 0.5487982520029133}, {
                    0.7999999999999999, 1.4512017479970867`}, 
                    "RoundingRadius" -> 0], 
                    StatusArea[#, 0.7999999999999999]& , TagBoxNote -> 
                    "0.7999999999999999"], 
                    StyleBox[
                    "0.7999999999999999`", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[0.7999999999999999, {}], "Tooltip"]& ]}, {
                  Directive[
                   EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                   RGBColor[1, 0.5, 0]], 
                  TagBox[
                   TooltipBox[
                    TagBox[
                    
                    RectangleBox[{0., 1.5487982520029133`}, {
                    0.19999999999999996`, 2.4512017479970867`}, 
                    "RoundingRadius" -> 0], 
                    StatusArea[#, 0.19999999999999996`]& , TagBoxNote -> 
                    "0.19999999999999996"], 
                    StyleBox[
                    "0.19999999999999996`", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[0.19999999999999996`, {}], 
                    "Tooltip"]& ]}}}, {}, {}}, {}, {}, {}, {}, {}}, {
             DisplayFunction -> Identity, AspectRatio -> 
              NCache[GoldenRatio^(-1), 0.6180339887498948], 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0., -0.8428550619082302}, 
              CoordinatesToolOptions -> {"DisplayFunction" -> ({
                  Identity[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                  Identity[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}& )}, Frame -> True, 
              FrameLabel -> {{None, None}, {None, None}}, 
              FrameTicks -> {{{{1., 
                   FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                   0.004, 0}}, {1., 
                   FormBox["\"True\"", TraditionalForm], 0}, {2., 
                   FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                   0.004, 0}}, {2., 
                   FormBox["\"False\"", TraditionalForm], 0}}, {{1., 
                   FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                   0.004, 0}}, {2., 
                   FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                   0.004, 0}}}}, {None, None}}, GridLines -> {None, None}, 
              GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> Tiny, 
              PlotRange -> {{0, 1}, {All, All}}, PlotRangePadding -> {{
                 Scaled[0.02], 
                 Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, None}}], 
            "\"Cloudy\""},
           "Labeled",
           DisplayFunction->(FormBox[
             GridBox[{{
                ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
                TagBox[
                 ItemBox[
                  PaneBox[
                   TagBox[#, "SkipImageSizeLevel"], 
                   Alignment -> {Center, Baseline}, BaselinePosition -> 
                   Baseline], DefaultBaseStyle -> "Labeled"], 
                 "SkipImageSizeLevel"]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {2, 1}], TraditionalForm]& ),
           InterpretationFunction->(RowBox[{"Labeled", "[", 
              RowBox[{#, ",", #2, ",", "Top", ",", 
                RowBox[{"{", "}"}]}], "]"}]& )], 
          Offset[{2, 2}, {0.022611464968152677, 1.0226114649681528}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1., 1.2246467991473532`*^-16}, 0.02261146496815286], 
         InsetBox[
          TemplateBox[{
            GraphicsBox[{{
               Opacity[0], 
               
               PointBox[{{0., -0.8428550619082302}, {0., 
                3.8048069919883467`}}]}, {{}, {
                Directive[
                 EdgeForm[
                  Directive[
                   Thickness[Small], 
                   Opacity[0.6859999999999999]]], 
                 RGBColor[1., 0.78, 0.2]], {{
                  Directive[
                   EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                   RGBColor[0, 0, 1]], 
                  TagBox[
                   TooltipBox[
                    TagBox[
                    
                    RectangleBox[{0., 0.5487982520029133}, {1., 
                    1.4512017479970867`}, "RoundingRadius" -> 0], 
                    StatusArea[#, 1]& , TagBoxNote -> "1"], 
                    StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1, {}], "Tooltip"]& ]}, {
                  Directive[
                   EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                   RGBColor[0, 0, 1]], 
                  TagBox[
                   TooltipBox[
                    TagBox[
                    
                    RectangleBox[{0., 1.5487982520029133`}, {0., 
                    2.4512017479970867`}, "RoundingRadius" -> 0], 
                    StatusArea[#, 0]& , TagBoxNote -> "0"], 
                    StyleBox["0", {}, StripOnInput -> False]], Annotation[#, 
                    Style[0, {}], 
                    "Tooltip"]& ]}}}, {}, {}}, {}, {}, {}, {}, {}}, {
             DisplayFunction -> Identity, AspectRatio -> 
              NCache[GoldenRatio^(-1), 0.6180339887498948], 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0., -0.8428550619082302}, 
              CoordinatesToolOptions -> {"DisplayFunction" -> ({
                  Identity[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                  Identity[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}& )}, Frame -> True, 
              FrameLabel -> {{None, None}, {None, None}}, 
              FrameTicks -> {{{{1., 
                   FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                   0.004, 0}}, {1., 
                   FormBox["\"True\"", TraditionalForm], 0}, {2., 
                   FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                   0.004, 0}}, {2., 
                   FormBox["\"False\"", TraditionalForm], 0}}, {{1., 
                   FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                   0.004, 0}}, {2., 
                   FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                   0.004, 0}}}}, {None, None}}, GridLines -> {None, None}, 
              GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> Tiny, 
              PlotRange -> {{0, 1}, {All, All}}, PlotRangePadding -> {{
                 Scaled[0.02], 
                 Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, None}}], 
            "\"Rain\""},
           "Labeled",
           DisplayFunction->(FormBox[
             GridBox[{{
                ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
                TagBox[
                 ItemBox[
                  PaneBox[
                   TagBox[#, "SkipImageSizeLevel"], 
                   Alignment -> {Center, Baseline}, BaselinePosition -> 
                   Baseline], DefaultBaseStyle -> "Labeled"], 
                 "SkipImageSizeLevel"]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {2, 1}], TraditionalForm]& ),
           InterpretationFunction->(RowBox[{"Labeled", "[", 
              RowBox[{#, ",", #2, ",", "Top", ",", 
                RowBox[{"{", "}"}]}], "]"}]& )], 
          Offset[{2, 2}, {1.0226114649681528, 0.022611464968152983}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-1., -2.4492935982947064`*^-16}, 0.02261146496815286], 
         InsetBox[
          TemplateBox[{
            GraphicsBox[{{
               Opacity[0], 
               
               PointBox[{{0., -0.8428550619082302}, {0., 
                3.8048069919883467`}}]}, {{}, {
                Directive[
                 EdgeForm[
                  Directive[
                   Thickness[Small], 
                   Opacity[0.6859999999999999]]], 
                 RGBColor[1., 0.78, 0.2]], {{
                  Directive[
                   EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                   RGBColor[1, 0.5, 0]], 
                  TagBox[
                   TooltipBox[
                    TagBox[
                    
                    RectangleBox[{0., 0.5487982520029133}, {
                    0.17999999999999997`, 1.4512017479970867`}, 
                    "RoundingRadius" -> 0], 
                    StatusArea[#, 0.17999999999999997`]& , TagBoxNote -> 
                    "0.17999999999999997"], 
                    StyleBox[
                    "0.17999999999999997`", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[0.17999999999999997`, {}], "Tooltip"]& ]}, {
                  Directive[
                   EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                   RGBColor[1, 0.5, 0]], 
                  TagBox[
                   TooltipBox[
                    TagBox[
                    
                    RectangleBox[{0., 1.5487982520029133`}, {0.82, 
                    2.4512017479970867`}, "RoundingRadius" -> 0], 
                    StatusArea[#, 0.82]& , TagBoxNote -> "0.82"], 
                    StyleBox["0.82`", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[0.82, {}], 
                    "Tooltip"]& ]}}}, {}, {}}, {}, {}, {}, {}, {}}, {
             DisplayFunction -> Identity, AspectRatio -> 
              NCache[GoldenRatio^(-1), 0.6180339887498948], 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0., -0.8428550619082302}, 
              CoordinatesToolOptions -> {"DisplayFunction" -> ({
                  Identity[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                  Identity[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}& )}, Frame -> True, 
              FrameLabel -> {{None, None}, {None, None}}, 
              FrameTicks -> {{{{1., 
                   FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                   0.004, 0}}, {1., 
                   FormBox["\"On\"", TraditionalForm], 0}, {2., 
                   FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                   0.004, 0}}, {2., 
                   FormBox["\"Off\"", TraditionalForm], 0}}, {{1., 
                   FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                   0.004, 0}}, {2., 
                   FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                   0.004, 0}}}}, {None, None}}, GridLines -> {None, None}, 
              GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> Tiny, 
              PlotRange -> {{0, 1}, {All, All}}, PlotRangePadding -> {{
                 Scaled[0.02], 
                 Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, None}}], 
            "\"Sprinkler\""},
           "Labeled",
           DisplayFunction->(FormBox[
             GridBox[{{
                ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
                TagBox[
                 ItemBox[
                  PaneBox[
                   TagBox[#, "SkipImageSizeLevel"], 
                   Alignment -> {Center, Baseline}, BaselinePosition -> 
                   Baseline], DefaultBaseStyle -> "Labeled"], 
                 "SkipImageSizeLevel"]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {2, 1}], TraditionalForm]& ),
           InterpretationFunction->(RowBox[{"Labeled", "[", 
              RowBox[{#, ",", #2, ",", "Top", ",", 
                RowBox[{"{", "}"}]}], "]"}]& )], 
          Offset[{2, 2}, {-0.9773885350318472, 0.022611464968152615}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{6.123233995736766*^-17, -1.}, 0.02261146496815286], InsetBox[
          TemplateBox[{
            GraphicsBox[{{
               Opacity[0], 
               
               PointBox[{{0., -0.8428550619082302}, {0., 
                3.8048069919883467`}}]}, {{}, {
                Directive[
                 EdgeForm[
                  Directive[
                   Thickness[Small], 
                   Opacity[0.6859999999999999]]], 
                 RGBColor[1., 0.78, 0.2]], {{
                  Directive[
                   EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                   RGBColor[1, 0.5, 0]], 
                  TagBox[
                   TooltipBox[
                    TagBox[
                    
                    RectangleBox[{0., 0.5487982520029133}, {0.9162, 
                    1.4512017479970867`}, "RoundingRadius" -> 0], 
                    StatusArea[#, 0.9162]& , TagBoxNote -> "0.9162"], 
                    StyleBox["0.9162`", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[0.9162, {}], "Tooltip"]& ]}, {
                  Directive[
                   EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                   RGBColor[1, 0.5, 0]], 
                  TagBox[
                   TooltipBox[
                    TagBox[
                    
                    RectangleBox[{0., 1.5487982520029133`}, {
                    0.08379999999999999, 2.4512017479970867`}, 
                    "RoundingRadius" -> 0], 
                    StatusArea[#, 0.08379999999999999]& , TagBoxNote -> 
                    "0.08379999999999999"], 
                    StyleBox[
                    "0.08379999999999999`", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[0.08379999999999999, {}], 
                    "Tooltip"]& ]}}}, {}, {}}, {}, {}, {}, {}, {}}, {
             DisplayFunction -> Identity, AspectRatio -> 
              NCache[GoldenRatio^(-1), 0.6180339887498948], 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0., -0.8428550619082302}, 
              CoordinatesToolOptions -> {"DisplayFunction" -> ({
                  Identity[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                  Identity[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}& )}, Frame -> True, 
              FrameLabel -> {{None, None}, {None, None}}, 
              FrameTicks -> {{{{1., 
                   FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                   0.004, 0}}, {1., 
                   FormBox["\"Wet\"", TraditionalForm], 0}, {2., 
                   FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                   0.004, 0}}, {2., 
                   FormBox["\"Dry\"", TraditionalForm], 0}}, {{1., 
                   FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                   0.004, 0}}, {2., 
                   FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                   0.004, 0}}}}, {None, None}}, GridLines -> {None, None}, 
              GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> Tiny, 
              PlotRange -> {{0, 1}, {All, All}}, PlotRangePadding -> {{
                 Scaled[0.02], 
                 Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, None}}], 
            "\"Grass\""},
           "Labeled",
           DisplayFunction->(FormBox[
             GridBox[{{
                ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
                TagBox[
                 ItemBox[
                  PaneBox[
                   TagBox[#, "SkipImageSizeLevel"], 
                   Alignment -> {Center, Baseline}, BaselinePosition -> 
                   Baseline], DefaultBaseStyle -> "Labeled"], 
                 "SkipImageSizeLevel"]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {2, 1}], TraditionalForm]& ),
           InterpretationFunction->(RowBox[{"Labeled", "[", 
              RowBox[{#, ",", #2, ",", "Top", ",", 
                RowBox[{"{", "}"}]}], "]"}]& )], 
          Offset[{2, 2}, {0.022611464968152924, -0.9773885350318472}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.9633432810603237`*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"790462ab-8671-964c-a0ed-8d6240ce9645"]
}, Open  ]],

Cell["\<\
Lets see what happens if we make one of the distributions symbolic:\
\>", "Text",
 CellChangeTimes->{{3.963343304026327*^9, 
  3.963343325275297*^9}},ExpressionUUID->"d4ecbf6f-fd04-304c-9f6e-\
230179b1f20d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BN", " ", "=", " ", 
  RowBox[{"BayesianNetwork", "[", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<Name\>\"", "->", "\"\<Cloudy\>\""}], ",", 
       RowBox[{"\"\<Distribution\>\"", "->", 
        RowBox[{"Function", "[", 
         RowBox[{"CategoricalDistribution", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<True\>\"", ",", "\"\<False\>\""}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.5", ",", "0.5"}], "}"}]}], "]"}], "]"}]}]}], "|>"}], ",",
      "\[IndentingNewLine]", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<Name\>\"", "->", "\"\<Rain\>\""}], ",", 
       RowBox[{"\"\<Distribution\>\"", "->", 
        RowBox[{"Function", "[", 
         RowBox[{"CategoricalDistribution", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<True\>\"", ",", "\"\<False\>\""}], "}"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"Boole", "[", 
              RowBox[{"#Cloudy", "==", "\"\<True\>\""}], "]"}], 
             RowBox[{"{", 
              RowBox[{"p", ",", 
               RowBox[{"1", "-", "p"}]}], "}"}]}], "+", 
            RowBox[{
             RowBox[{"Boole", "[", 
              RowBox[{"#Cloudy", "==", "\"\<False\>\""}], "]"}], 
             RowBox[{"{", 
              RowBox[{"q", ",", 
               RowBox[{"1", "-", "q"}]}], "}"}]}]}]}], "]"}], "]"}]}]}], 
      "|>"}], ",", "\[IndentingNewLine]", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<Name\>\"", "->", "\"\<Sprinkler\>\""}], ",", 
       RowBox[{"\"\<Distribution\>\"", "->", 
        RowBox[{"Function", "[", 
         RowBox[{"CategoricalDistribution", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<On\>\"", ",", "\"\<Off\>\""}], "}"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"Boole", "[", 
              RowBox[{"#Cloudy", "==", "\"\<True\>\""}], "]"}], 
             RowBox[{"{", 
              RowBox[{"0.1", ",", "0.9"}], "}"}]}], "+", 
            RowBox[{
             RowBox[{"Boole", "[", 
              RowBox[{"#Cloudy", "==", "\"\<False\>\""}], "]"}], 
             RowBox[{"{", 
              RowBox[{"0.5", ",", "0.5"}], "}"}]}]}]}], "]"}], "]"}]}]}], 
      "|>"}], ",", "\[IndentingNewLine]", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<Name\>\"", "->", "\"\<Grass\>\""}], ",", 
       RowBox[{"\"\<Distribution\>\"", "->", 
        RowBox[{"Function", "[", 
         RowBox[{"CategoricalDistribution", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<Wet\>\"", ",", "\"\<Dry\>\""}], "}"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"Boole", "[", 
              RowBox[{
               RowBox[{"#Rain", "==", "\"\<True\>\""}], "&&", 
               RowBox[{"#Sprinkler", "==", "\"\<On\>\""}]}], "]"}], 
             RowBox[{"{", 
              RowBox[{"0.99", ",", "0.01"}], "}"}]}], "+", " ", 
            RowBox[{
             RowBox[{"Boole", "[", 
              RowBox[{
               RowBox[{"#Rain", "==", "\"\<False\>\""}], "&&", 
               RowBox[{"#Sprinkler", "==", "\"\<On\>\""}]}], "]"}], 
             RowBox[{"{", 
              RowBox[{"0.9", ",", "0.1"}], "}"}]}], "+", 
            RowBox[{
             RowBox[{"Boole", "[", 
              RowBox[{
               RowBox[{"#Rain", "==", "\"\<True\>\""}], "&&", 
               RowBox[{"#Sprinkler", "==", "\"\<Off\>\""}]}], "]"}], 
             RowBox[{"{", 
              RowBox[{"0.9", ",", "0.1"}], "}"}]}], "+", 
            RowBox[{
             RowBox[{"Boole", "[", 
              RowBox[{
               RowBox[{"#Rain", "==", "\"\<False\>\""}], "&&", 
               RowBox[{"#Sprinkler", "==", "\"\<Off\>\""}]}], "]"}], 
             RowBox[{"{", 
              RowBox[{"0.0", ",", "1.0"}], "}"}]}]}]}], "]"}], "]"}]}]}], 
      "|>"}]}], "\[IndentingNewLine]", "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.963343346915518*^9, 3.9633433619012184`*^9}, {
  3.9633434990628777`*^9, 3.9633435032499027`*^9}, {3.963343656990114*^9, 
  3.9633436628955936`*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"6dac1979-5256-9544-a6dd-26cedee705bf"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["BayesianNetworkObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               TagBox[
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{"Cloudy", "Rain", "Sprinkler", "Grass"}, {{{1, 
                    2}, {1, 3}, {2, 4}, {3, 4}}, Null}, {
                    GraphLayout -> {"Dimension" -> 2}, ImageSize -> 50, 
                    VertexLabels -> {None}, VertexSize -> {Large}}]]}, 
                   TagBox[
                    GraphicsGroupBox[
                    
                    GraphicsComplexBox[{{-1.8369701987210297`*^-16, 1.}, {1., 
                    1.2246467991473532`*^-16}, {-1., \
-2.4492935982947064`*^-16}, {6.123233995736766*^-17, -1.}}, {{
                    Arrowheads[Medium], 
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.7], 
                    CapForm["Round"]], 
                    
                    ArrowBox[{{1, 2}, {1, 3}, {2, 4}, {3, 4}}, 
                    0.282842712474619]}, {
                    Directive[
                    Hue[0.6, 0.5, 1.], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    DiskBox[1, 0.282842712474619], 
                    DiskBox[2, 0.282842712474619], 
                    DiskBox[3, 0.282842712474619], 
                    DiskBox[4, 0.282842712474619]}}]], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, ImageSize -> 
                  50, DefaultBaseStyle -> "NetworkGraphics"}], 
                "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               TagBox[
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{"Cloudy", "Rain", "Sprinkler", "Grass"}, {{{1, 
                    2}, {1, 3}, {2, 4}, {3, 4}}, Null}, {
                    GraphLayout -> {"Dimension" -> 2}, ImageSize -> 50, 
                    VertexLabels -> {None}, VertexSize -> {Large}}]]}, 
                   TagBox[
                    GraphicsGroupBox[
                    
                    GraphicsComplexBox[{{-1.8369701987210297`*^-16, 1.}, {1., 
                    1.2246467991473532`*^-16}, {-1., \
-2.4492935982947064`*^-16}, {6.123233995736766*^-17, -1.}}, {{
                    Arrowheads[Medium], 
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.7], 
                    CapForm["Round"]], 
                    
                    ArrowBox[{{1, 2}, {1, 3}, {2, 4}, {3, 4}}, 
                    0.282842712474619]}, {
                    Directive[
                    Hue[0.6, 0.5, 1.], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    DiskBox[1, 0.282842712474619], 
                    DiskBox[2, 0.282842712474619], 
                    DiskBox[3, 0.282842712474619], 
                    DiskBox[4, 0.282842712474619]}}]], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, ImageSize -> 
                  50, DefaultBaseStyle -> "NetworkGraphics"}], 
                "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ahafver`BayesianNetwork`BayesianNetworkObject[<|
   "Variables" -> {<|
      "Name" -> "Cloudy", "Parents" -> {}, 
       "Domain" -> <|"True" -> 1, "False" -> 2|>, "Distribution" -> 
       DataDistribution["Empirical", {{0.5, 0.5}, {1, 2}, False}, 1, 2]|>, <|
      "Name" -> "Rain", "Parents" -> {"Cloudy"}, 
       "Domain" -> <|"True" -> 1, "False" -> 2|>, "Distribution" -> 
       DataDistribution[
        "Empirical", {{(DocumentationTools`Private`p Boole[# == 1] + 
            DocumentationTools`Private`q 
             Boole[# == 2]) ((1 - DocumentationTools`Private`p) Boole[# == 1] + 
             DocumentationTools`Private`p 
              Boole[# == 1] + (1 - DocumentationTools`Private`q) 
              Boole[# == 2] + 
             DocumentationTools`Private`q 
              Boole[# == 2])^(-1)/(((1 - DocumentationTools`Private`p) 
              Boole[# == 1] + (1 - DocumentationTools`Private`q) 
              Boole[# == 2])/((1 - DocumentationTools`Private`p) 
             Boole[# == 1] + 
            DocumentationTools`Private`p 
             Boole[# == 1] + (1 - DocumentationTools`Private`q) Boole[# == 2] + 
            DocumentationTools`Private`q Boole[# == 2]) + (
             DocumentationTools`Private`p Boole[# == 1] + 
             DocumentationTools`Private`q Boole[# == 2])/((1 - 
              DocumentationTools`Private`p) Boole[# == 1] + 
            DocumentationTools`Private`p 
             Boole[# == 1] + (1 - DocumentationTools`Private`q) Boole[# == 2] + 
            DocumentationTools`Private`q 
             Boole[# == 2])), ((1 - DocumentationTools`Private`p) 
             Boole[# == 1] + (1 - DocumentationTools`Private`q) 
             Boole[# == 2]) ((1 - DocumentationTools`Private`p) Boole[# == 1] + 
             DocumentationTools`Private`p 
              Boole[# == 1] + (1 - DocumentationTools`Private`q) 
              Boole[# == 2] + 
             DocumentationTools`Private`q 
              Boole[# == 2])^(-1)/(((1 - DocumentationTools`Private`p) 
              Boole[# == 1] + (1 - DocumentationTools`Private`q) 
              Boole[# == 2])/((1 - DocumentationTools`Private`p) 
             Boole[# == 1] + 
            DocumentationTools`Private`p 
             Boole[# == 1] + (1 - DocumentationTools`Private`q) Boole[# == 2] + 
            DocumentationTools`Private`q Boole[# == 2]) + (
             DocumentationTools`Private`p Boole[# == 1] + 
             DocumentationTools`Private`q Boole[# == 2])/((1 - 
              DocumentationTools`Private`p) Boole[# == 1] + 
            DocumentationTools`Private`p 
             Boole[# == 1] + (1 - DocumentationTools`Private`q) Boole[# == 2] + 
            DocumentationTools`Private`q Boole[# == 2]))}, {1, 2}, False}, 1, 
         2]|>, <|"Name" -> "Sprinkler", "Parents" -> {"Cloudy"}, 
       "Domain" -> <|"On" -> 1, "Off" -> 2|>, "Distribution" -> 
       DataDistribution[
        "Empirical", {{(0.1 Boole[# == 1.] + 
            0.5 Boole[# == 2.]) (1. Boole[# == 1.] + 
             1. Boole[# == 2.])^(-1)/((0.1 Boole[# == 1.] + 
             0.5 Boole[# == 2.])/(1. Boole[# == 1.] + 
            1. Boole[# == 2.]) + (0.9 Boole[# == 1.] + 0.5 Boole[# == 2.])/(
            1. Boole[# == 1.] + 1. Boole[# == 2.])), (0.9 Boole[# == 1.] + 
            0.5 Boole[# == 2.]) (1. Boole[# == 1.] + 
             1. Boole[# == 2.])^(-1)/((0.1 Boole[# == 1.] + 
             0.5 Boole[# == 2.])/(1. Boole[# == 1.] + 
            1. Boole[# == 2.]) + (0.9 Boole[# == 1.] + 0.5 Boole[# == 2.])/(
            1. Boole[# == 1.] + 1. Boole[# == 2.]))}, {1, 2}, False}, 1, 
         2]|>, <|"Name" -> "Grass", "Parents" -> {"Rain", "Sprinkler"}, 
       "Domain" -> <|"Wet" -> 1, "Dry" -> 2|>, "Distribution" -> 
       DataDistribution["Empirical", {{(0. + 0.99 Boole[
               And[#2 == 1., #3 == 1.]] + 0.9 Boole[
               And[#2 == 1., #3 == 2.]] + 0.9 Boole[
               And[#2 == 2., #3 == 1.]]) (0. + 1. Boole[
                And[#2 == 1., #3 == 1.]] + 1. Boole[
                And[#2 == 1., #3 == 2.]] + 1. Boole[
                And[#2 == 2., #3 == 1.]] + 1. Boole[
                And[#2 == 2., #3 == 2.]])^(-1)/((0. + 0.99 Boole[
                And[#2 == 1., #3 == 1.]] + 0.9 Boole[
                And[#2 == 1., #3 == 2.]] + 0.9 Boole[
                And[#2 == 2., #3 == 1.]])/(0. + 1. Boole[
               And[#2 == 1., #3 == 1.]] + 1. Boole[
               And[#2 == 1., #3 == 2.]] + 1. Boole[
               And[#2 == 2., #3 == 1.]] + 1. Boole[
               And[#2 == 2., #3 == 2.]]) + (0.01 Boole[
                And[#2 == 1., #3 == 1.]] + 0.1 Boole[
                And[#2 == 1., #3 == 2.]] + 0.1 Boole[
                And[#2 == 2., #3 == 1.]] + 1. Boole[
                And[#2 == 2., #3 == 2.]])/(0. + 1. Boole[
               And[#2 == 1., #3 == 1.]] + 1. Boole[
               And[#2 == 1., #3 == 2.]] + 1. Boole[
               And[#2 == 2., #3 == 1.]] + 1. Boole[
               And[#2 == 2., #3 == 2.]])), (0.01 Boole[
               And[#2 == 1., #3 == 1.]] + 0.1 Boole[
               And[#2 == 1., #3 == 2.]] + 0.1 Boole[
               And[#2 == 2., #3 == 1.]] + 1. Boole[
               And[#2 == 2., #3 == 2.]]) (0. + 1. Boole[
                And[#2 == 1., #3 == 1.]] + 1. Boole[
                And[#2 == 1., #3 == 2.]] + 1. Boole[
                And[#2 == 2., #3 == 1.]] + 1. Boole[
                And[#2 == 2., #3 == 2.]])^(-1)/((0. + 0.99 Boole[
                And[#2 == 1., #3 == 1.]] + 0.9 Boole[
                And[#2 == 1., #3 == 2.]] + 0.9 Boole[
                And[#2 == 2., #3 == 1.]])/(0. + 1. Boole[
               And[#2 == 1., #3 == 1.]] + 1. Boole[
               And[#2 == 1., #3 == 2.]] + 1. Boole[
               And[#2 == 2., #3 == 1.]] + 1. Boole[
               And[#2 == 2., #3 == 2.]]) + (0.01 Boole[
                And[#2 == 1., #3 == 1.]] + 0.1 Boole[
                And[#2 == 1., #3 == 2.]] + 0.1 Boole[
                And[#2 == 2., #3 == 1.]] + 1. Boole[
                And[#2 == 2., #3 == 2.]])/(0. + 1. Boole[
               And[#2 == 1., #3 == 1.]] + 1. Boole[
               And[#2 == 1., #3 == 2.]] + 1. Boole[
               And[#2 == 2., #3 == 1.]] + 1. Boole[
               And[#2 == 2., #3 == 2.]]))}, {1, 2}, False}, 1, 2]|>}, 
    "Distribution" -> 
    ProbabilityDistribution[(
       0.5 Boole[1 == DocumentationTools`Private`\[FormalX]1] + 
       0.5 Boole[2 == DocumentationTools`Private`\[FormalX]1]) ((0. + 
         0.99 Boole[
            And[
            DocumentationTools`Private`\[FormalX]2 == 1., 
             DocumentationTools`Private`\[FormalX]3 == 1.]] + 0.9 Boole[
            And[
            DocumentationTools`Private`\[FormalX]2 == 1., 
             DocumentationTools`Private`\[FormalX]3 == 2.]] + 0.9 Boole[
            And[
            DocumentationTools`Private`\[FormalX]2 == 2., 
             DocumentationTools`Private`\[FormalX]3 == 1.]]) (0. + 1. Boole[
             And[
             DocumentationTools`Private`\[FormalX]2 == 1., 
              DocumentationTools`Private`\[FormalX]3 == 1.]] + 1. Boole[
             And[
             DocumentationTools`Private`\[FormalX]2 == 1., 
              DocumentationTools`Private`\[FormalX]3 == 2.]] + 1. Boole[
             And[
             DocumentationTools`Private`\[FormalX]2 == 2., 
              DocumentationTools`Private`\[FormalX]3 == 1.]] + 1. Boole[
             And[
             DocumentationTools`Private`\[FormalX]2 == 2., 
              DocumentationTools`Private`\[FormalX]3 == 2.]])^(-1) ((0. + 
            0.99 Boole[
               And[
               DocumentationTools`Private`\[FormalX]2 == 1., 
                DocumentationTools`Private`\[FormalX]3 == 1.]] + 0.9 Boole[
               And[
               DocumentationTools`Private`\[FormalX]2 == 1., 
                DocumentationTools`Private`\[FormalX]3 == 2.]] + 0.9 Boole[
               And[
               DocumentationTools`Private`\[FormalX]2 == 2., 
                DocumentationTools`Private`\[FormalX]3 == 1.]])/(0. + 1. Boole[
              And[
              DocumentationTools`Private`\[FormalX]2 == 1., 
               DocumentationTools`Private`\[FormalX]3 == 1.]] + 1. Boole[
              And[
              DocumentationTools`Private`\[FormalX]2 == 1., 
               DocumentationTools`Private`\[FormalX]3 == 2.]] + 1. Boole[
              And[
              DocumentationTools`Private`\[FormalX]2 == 2., 
               DocumentationTools`Private`\[FormalX]3 == 1.]] + 1. Boole[
              And[
              DocumentationTools`Private`\[FormalX]2 == 2., 
               DocumentationTools`Private`\[FormalX]3 == 2.]]) + (0.01 Boole[
               And[
               DocumentationTools`Private`\[FormalX]2 == 1., 
                DocumentationTools`Private`\[FormalX]3 == 1.]] + 0.1 Boole[
               And[
               DocumentationTools`Private`\[FormalX]2 == 1., 
                DocumentationTools`Private`\[FormalX]3 == 2.]] + 0.1 Boole[
               And[
               DocumentationTools`Private`\[FormalX]2 == 2., 
                DocumentationTools`Private`\[FormalX]3 == 1.]] + 1. Boole[
               And[
               DocumentationTools`Private`\[FormalX]2 == 2., 
                DocumentationTools`Private`\[FormalX]3 == 2.]])/(0. + 1. Boole[
              And[
              DocumentationTools`Private`\[FormalX]2 == 1., 
               DocumentationTools`Private`\[FormalX]3 == 1.]] + 1. Boole[
              And[
              DocumentationTools`Private`\[FormalX]2 == 1., 
               DocumentationTools`Private`\[FormalX]3 == 2.]] + 1. Boole[
              And[
              DocumentationTools`Private`\[FormalX]2 == 2., 
               DocumentationTools`Private`\[FormalX]3 == 1.]] + 1. Boole[
              And[
              DocumentationTools`Private`\[FormalX]2 == 2., 
               DocumentationTools`Private`\[FormalX]3 == 2.]]))^(-1) 
        Boole[1 == DocumentationTools`Private`\[FormalX]4] + (0.01 Boole[
            And[
            DocumentationTools`Private`\[FormalX]2 == 1., 
             DocumentationTools`Private`\[FormalX]3 == 1.]] + 0.1 Boole[
            And[
            DocumentationTools`Private`\[FormalX]2 == 1., 
             DocumentationTools`Private`\[FormalX]3 == 2.]] + 0.1 Boole[
            And[
            DocumentationTools`Private`\[FormalX]2 == 2., 
             DocumentationTools`Private`\[FormalX]3 == 1.]] + 1. Boole[
            And[
            DocumentationTools`Private`\[FormalX]2 == 2., 
             DocumentationTools`Private`\[FormalX]3 == 2.]]) (0. + 1. Boole[
             And[
             DocumentationTools`Private`\[FormalX]2 == 1., 
              DocumentationTools`Private`\[FormalX]3 == 1.]] + 1. Boole[
             And[
             DocumentationTools`Private`\[FormalX]2 == 1., 
              DocumentationTools`Private`\[FormalX]3 == 2.]] + 1. Boole[
             And[
             DocumentationTools`Private`\[FormalX]2 == 2., 
              DocumentationTools`Private`\[FormalX]3 == 1.]] + 1. Boole[
             And[
             DocumentationTools`Private`\[FormalX]2 == 2., 
              DocumentationTools`Private`\[FormalX]3 == 2.]])^(-1) ((0. + 
            0.99 Boole[
               And[
               DocumentationTools`Private`\[FormalX]2 == 1., 
                DocumentationTools`Private`\[FormalX]3 == 1.]] + 0.9 Boole[
               And[
               DocumentationTools`Private`\[FormalX]2 == 1., 
                DocumentationTools`Private`\[FormalX]3 == 2.]] + 0.9 Boole[
               And[
               DocumentationTools`Private`\[FormalX]2 == 2., 
                DocumentationTools`Private`\[FormalX]3 == 1.]])/(0. + 1. Boole[
              And[
              DocumentationTools`Private`\[FormalX]2 == 1., 
               DocumentationTools`Private`\[FormalX]3 == 1.]] + 1. Boole[
              And[
              DocumentationTools`Private`\[FormalX]2 == 1., 
               DocumentationTools`Private`\[FormalX]3 == 2.]] + 1. Boole[
              And[
              DocumentationTools`Private`\[FormalX]2 == 2., 
               DocumentationTools`Private`\[FormalX]3 == 1.]] + 1. Boole[
              And[
              DocumentationTools`Private`\[FormalX]2 == 2., 
               DocumentationTools`Private`\[FormalX]3 == 2.]]) + (0.01 Boole[
               And[
               DocumentationTools`Private`\[FormalX]2 == 1., 
                DocumentationTools`Private`\[FormalX]3 == 1.]] + 0.1 Boole[
               And[
               DocumentationTools`Private`\[FormalX]2 == 1., 
                DocumentationTools`Private`\[FormalX]3 == 2.]] + 0.1 Boole[
               And[
               DocumentationTools`Private`\[FormalX]2 == 2., 
                DocumentationTools`Private`\[FormalX]3 == 1.]] + 1. Boole[
               And[
               DocumentationTools`Private`\[FormalX]2 == 2., 
                DocumentationTools`Private`\[FormalX]3 == 2.]])/(0. + 1. Boole[
              And[
              DocumentationTools`Private`\[FormalX]2 == 1., 
               DocumentationTools`Private`\[FormalX]3 == 1.]] + 1. Boole[
              And[
              DocumentationTools`Private`\[FormalX]2 == 1., 
               DocumentationTools`Private`\[FormalX]3 == 2.]] + 1. Boole[
              And[
              DocumentationTools`Private`\[FormalX]2 == 2., 
               DocumentationTools`Private`\[FormalX]3 == 1.]] + 1. Boole[
              And[
              DocumentationTools`Private`\[FormalX]2 == 2., 
               DocumentationTools`Private`\[FormalX]3 == 2.]]))^(-1) 
        Boole[2 == DocumentationTools`Private`\[FormalX]4]) (
       Boole[2 == DocumentationTools`Private`\[FormalX]2] ((1 - 
           DocumentationTools`Private`p) 
          Boole[DocumentationTools`Private`\[FormalX]1 == 1] + (1 - 
           DocumentationTools`Private`q) 
          Boole[DocumentationTools`Private`\[FormalX]1 == 2]) ((1 - 
            DocumentationTools`Private`p) 
           Boole[DocumentationTools`Private`\[FormalX]1 == 1] + 
          DocumentationTools`Private`p 
           Boole[DocumentationTools`Private`\[FormalX]1 == 1] + (1 - 
            DocumentationTools`Private`q) 
           Boole[DocumentationTools`Private`\[FormalX]1 == 2] + 
          DocumentationTools`Private`q 
           Boole[DocumentationTools`Private`\[FormalX]1 == 2])^(-1)/(((1 - 
            DocumentationTools`Private`p) 
           Boole[DocumentationTools`Private`\[FormalX]1 == 1] + (1 - 
            DocumentationTools`Private`q) 
           Boole[DocumentationTools`Private`\[FormalX]1 == 2])/((1 - 
           DocumentationTools`Private`p) 
          Boole[DocumentationTools`Private`\[FormalX]1 == 1] + 
         DocumentationTools`Private`p 
          Boole[DocumentationTools`Private`\[FormalX]1 == 1] + (1 - 
           DocumentationTools`Private`q) 
          Boole[DocumentationTools`Private`\[FormalX]1 == 2] + 
         DocumentationTools`Private`q 
          Boole[DocumentationTools`Private`\[FormalX]1 == 2]) + (
          DocumentationTools`Private`p 
           Boole[DocumentationTools`Private`\[FormalX]1 == 1] + 
          DocumentationTools`Private`q 
           Boole[DocumentationTools`Private`\[FormalX]1 == 2])/((1 - 
           DocumentationTools`Private`p) 
          Boole[DocumentationTools`Private`\[FormalX]1 == 1] + 
         DocumentationTools`Private`p 
          Boole[DocumentationTools`Private`\[FormalX]1 == 1] + (1 - 
           DocumentationTools`Private`q) 
          Boole[DocumentationTools`Private`\[FormalX]1 == 2] + 
         DocumentationTools`Private`q 
          Boole[DocumentationTools`Private`\[FormalX]1 == 2])) + 
       Boole[1 == DocumentationTools`Private`\[FormalX]2] (
         DocumentationTools`Private`p 
          Boole[DocumentationTools`Private`\[FormalX]1 == 1] + 
         DocumentationTools`Private`q 
          Boole[DocumentationTools`Private`\[FormalX]1 == 2]) ((1 - 
            DocumentationTools`Private`p) 
           Boole[DocumentationTools`Private`\[FormalX]1 == 1] + 
          DocumentationTools`Private`p 
           Boole[DocumentationTools`Private`\[FormalX]1 == 1] + (1 - 
            DocumentationTools`Private`q) 
           Boole[DocumentationTools`Private`\[FormalX]1 == 2] + 
          DocumentationTools`Private`q 
           Boole[DocumentationTools`Private`\[FormalX]1 == 2])^(-1)/(((1 - 
            DocumentationTools`Private`p) 
           Boole[DocumentationTools`Private`\[FormalX]1 == 1] + (1 - 
            DocumentationTools`Private`q) 
           Boole[DocumentationTools`Private`\[FormalX]1 == 2])/((1 - 
           DocumentationTools`Private`p) 
          Boole[DocumentationTools`Private`\[FormalX]1 == 1] + 
         DocumentationTools`Private`p 
          Boole[DocumentationTools`Private`\[FormalX]1 == 1] + (1 - 
           DocumentationTools`Private`q) 
          Boole[DocumentationTools`Private`\[FormalX]1 == 2] + 
         DocumentationTools`Private`q 
          Boole[DocumentationTools`Private`\[FormalX]1 == 2]) + (
          DocumentationTools`Private`p 
           Boole[DocumentationTools`Private`\[FormalX]1 == 1] + 
          DocumentationTools`Private`q 
           Boole[DocumentationTools`Private`\[FormalX]1 == 2])/((1 - 
           DocumentationTools`Private`p) 
          Boole[DocumentationTools`Private`\[FormalX]1 == 1] + 
         DocumentationTools`Private`p 
          Boole[DocumentationTools`Private`\[FormalX]1 == 1] + (1 - 
           DocumentationTools`Private`q) 
          Boole[DocumentationTools`Private`\[FormalX]1 == 2] + 
         DocumentationTools`Private`q 
          Boole[DocumentationTools`Private`\[FormalX]1 == 2]))) (
       Boole[1 == DocumentationTools`Private`\[FormalX]3] (
         0.1 Boole[DocumentationTools`Private`\[FormalX]1 == 1.] + 
         0.5 Boole[DocumentationTools`Private`\[FormalX]1 == 2.]) (
          1. Boole[DocumentationTools`Private`\[FormalX]1 == 1.] + 
          1. Boole[DocumentationTools`Private`\[FormalX]1 == 2.])^(-1)/((
          0.1 Boole[DocumentationTools`Private`\[FormalX]1 == 1.] + 
          0.5 Boole[DocumentationTools`Private`\[FormalX]1 == 2.])/(
         1. Boole[DocumentationTools`Private`\[FormalX]1 == 1.] + 
         1. Boole[DocumentationTools`Private`\[FormalX]1 == 2.]) + (
          0.9 Boole[DocumentationTools`Private`\[FormalX]1 == 1.] + 
          0.5 Boole[DocumentationTools`Private`\[FormalX]1 == 2.])/(
         1. Boole[DocumentationTools`Private`\[FormalX]1 == 1.] + 
         1. Boole[DocumentationTools`Private`\[FormalX]1 == 2.])) + 
       Boole[2 == DocumentationTools`Private`\[FormalX]3] (
         0.9 Boole[DocumentationTools`Private`\[FormalX]1 == 1.] + 
         0.5 Boole[DocumentationTools`Private`\[FormalX]1 == 2.]) (
          1. Boole[DocumentationTools`Private`\[FormalX]1 == 1.] + 
          1. Boole[DocumentationTools`Private`\[FormalX]1 == 2.])^(-1)/((
          0.1 Boole[DocumentationTools`Private`\[FormalX]1 == 1.] + 
          0.5 Boole[DocumentationTools`Private`\[FormalX]1 == 2.])/(
         1. Boole[DocumentationTools`Private`\[FormalX]1 == 1.] + 
         1. Boole[DocumentationTools`Private`\[FormalX]1 == 2.]) + (
          0.9 Boole[DocumentationTools`Private`\[FormalX]1 == 1.] + 
          0.5 Boole[DocumentationTools`Private`\[FormalX]1 == 2.])/(
         1. Boole[DocumentationTools`Private`\[FormalX]1 == 1.] + 
         1. Boole[DocumentationTools`Private`\[FormalX]1 == 2.]))), {
      DocumentationTools`Private`\[FormalX]1, 1, 2, 1}, {
      DocumentationTools`Private`\[FormalX]2, 1, 2, 1}, {
      DocumentationTools`Private`\[FormalX]3, 1, 2, 1}, {
      DocumentationTools`Private`\[FormalX]4, 1, 2, 1}], "Graph" -> 
    Graph[{"Cloudy", "Rain", "Sprinkler", "Grass"}, {{{1, 2}, {1, 3}, {2, 
       4}, {3, 4}}, Null}, {VertexLabels -> {Automatic}}]|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.9633433629175262`*^9, 3.9633435043166313`*^9, {3.963343635909439*^9, 
   3.9633436636442814`*^9}},
 CellLabel->"Out[68]=",ExpressionUUID->"42407994-9ae2-e54d-868e-94b4a14d014e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "[", "BN", "]"}]], "Input",
 CellChangeTimes->{{3.9633433650197964`*^9, 3.963343425978628*^9}, {
  3.963343647433752*^9, 3.963343672401943*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"1a5c25e4-bf80-6547-9866-c5a630e79d8f"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
      "Cloudy", "Rain", "Sprinkler", "Grass"}, {{{1, 2}, {1, 3}, {2, 4}, {3, 
       4}}, Null}, {
      GraphLayout -> {"Dimension" -> 2}, 
       VertexLabels -> {Automatic, "Grass" -> Labeled[
           
           TableForm[{
            0.27 + 0.40950000000000003` DocumentationTools`Private`p + 
             0.24750000000000003` DocumentationTools`Private`q, 0.73 - 
             0.40950000000000003` DocumentationTools`Private`p - 
             0.24750000000000003` DocumentationTools`Private`q}, 
            TableHeadings -> {{"Wet", "Dry"}, None}], "Grass", Top], "Cloudy" -> 
         Labeled[
           Graphics[{{
              Opacity[0], 
              
              Point[{{0., -0.8428550619082302}, {0., 
               3.8048069919883467`}}]}, {{}, {
               Directive[
                EdgeForm[
                 Directive[
                  Thickness[Small], 
                  Opacity[0.6859999999999999]]], 
                RGBColor[1., 0.78, 0.2]], {{
                 Directive[
                  EdgeForm[
                   Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                  RGBColor[1, 0.5, 0]], 
                 Tooltip[
                  StatusArea[
                   
                   Rectangle[{0., 0.5487982520029133}, {0.5, 
                    1.4512017479970867`}, "RoundingRadius" -> 0], 0.5], 
                  Style[0.5, {}]]}, {
                 Directive[
                  EdgeForm[
                   Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                  RGBColor[1, 0.5, 0]], 
                 Tooltip[
                  StatusArea[
                   
                   Rectangle[{0., 1.5487982520029133`}, {0.5, 
                    2.4512017479970867`}, "RoundingRadius" -> 0], 0.5], 
                  Style[0.5, {}]]}}}, {}, {}}, {}, {}, {}, {}, {}}, {
            DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
             Axes -> {False, False}, AxesLabel -> {None, None}, 
             AxesOrigin -> {0., -0.8428550619082302}, 
             CoordinatesToolOptions -> {"DisplayFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& )}, Frame -> True, 
             FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{{{1., 
                  Spacer[0], {0.004`20., 0}}, {1., "True", 0}, {2., 
                  Spacer[0], {0.004`20., 0}}, {2., "False", 0}}, {{1., 
                  Spacer[0], {0.004`20., 0}}, {2., 
                  Spacer[0], {0.004`20., 0}}}}, {None, None}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> Tiny, 
             PlotRange -> {{0, 1}, {All, All}}, PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, None}}], 
           "Cloudy", Top], "Sprinkler" -> Labeled[
           Graphics[{{
              Opacity[0], 
              
              Point[{{0., -0.8428550619082302}, {0., 
               3.8048069919883467`}}]}, {{}, {
               Directive[
                EdgeForm[
                 Directive[
                  Thickness[Small], 
                  Opacity[0.6859999999999999]]], 
                RGBColor[1., 0.78, 0.2]], {{
                 Directive[
                  EdgeForm[
                   Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                  RGBColor[1, 0.5, 0]], 
                 Tooltip[
                  StatusArea[
                   
                   Rectangle[{0., 0.5487982520029133}, {0.3, 
                    1.4512017479970867`}, "RoundingRadius" -> 0], 0.3], 
                  Style[0.3, {}]]}, {
                 Directive[
                  EdgeForm[
                   Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                  RGBColor[1, 0.5, 0]], 
                 Tooltip[
                  StatusArea[
                   
                   Rectangle[{0., 1.5487982520029133`}, {0.7, 
                    2.4512017479970867`}, "RoundingRadius" -> 0], 0.7], 
                  Style[0.7, {}]]}}}, {}, {}}, {}, {}, {}, {}, {}}, {
            DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
             Axes -> {False, False}, AxesLabel -> {None, None}, 
             AxesOrigin -> {0., -0.8428550619082302}, 
             CoordinatesToolOptions -> {"DisplayFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& )}, Frame -> True, 
             FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{{{1., 
                  Spacer[0], {0.004`20., 0}}, {1., "On", 0}, {2., 
                  Spacer[0], {0.004`20., 0}}, {2., "Off", 0}}, {{1., 
                  Spacer[0], {0.004`20., 0}}, {2., 
                  Spacer[0], {0.004`20., 0}}}}, {None, None}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> Tiny, 
             PlotRange -> {{0, 1}, {All, All}}, PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, None}}], 
           "Sprinkler", Top], "Rain" -> Labeled[
           
           TableForm[{
            0.5 DocumentationTools`Private`p + 
             0.5 DocumentationTools`Private`q, 1 - 0.5 
             DocumentationTools`Private`p - 0.5 DocumentationTools`Private`q},
             TableHeadings -> {{"True", "False"}, None}], "Rain", Top]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.7], Opacity[0.7], CapForm["Round"], Arrowheads[
        Medium], 
        ArrowBox[{{{-1.8369701987210297`*^-16, 1.}, {1., 
         1.2246467991473532`*^-16}}, {{-1.8369701987210297`*^-16, 
         1.}, {-1., -2.4492935982947064`*^-16}}, {{1., 
         1.2246467991473532`*^-16}, {
         6.123233995736766*^-17, -1.}}, {{-1., -2.4492935982947064`*^-16}, {
         6.123233995736766*^-17, -1.}}}, 0.02261146496815286]}, 
       {Hue[0.6, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {
         DiskBox[{-1.8369701987210297`*^-16, 1.}, 0.02261146496815286], 
         InsetBox[
          TemplateBox[{
            GraphicsBox[{{
               Opacity[0], 
               
               PointBox[{{0., -0.8428550619082302}, {0., 
                3.8048069919883467`}}]}, {{}, {
                Directive[
                 EdgeForm[
                  Directive[
                   Thickness[Small], 
                   Opacity[0.6859999999999999]]], 
                 RGBColor[1., 0.78, 0.2]], {{
                  Directive[
                   EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                   RGBColor[1, 0.5, 0]], 
                  TagBox[
                   TooltipBox[
                    TagBox[
                    
                    RectangleBox[{0., 0.5487982520029133}, {0.5, 
                    1.4512017479970867`}, "RoundingRadius" -> 0], 
                    StatusArea[#, 0.5]& , TagBoxNote -> "0.5"], 
                    StyleBox["0.5`", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[0.5, {}], "Tooltip"]& ]}, {
                  Directive[
                   EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                   RGBColor[1, 0.5, 0]], 
                  TagBox[
                   TooltipBox[
                    TagBox[
                    
                    RectangleBox[{0., 1.5487982520029133`}, {0.5, 
                    2.4512017479970867`}, "RoundingRadius" -> 0], 
                    StatusArea[#, 0.5]& , TagBoxNote -> "0.5"], 
                    StyleBox["0.5`", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[0.5, {}], 
                    "Tooltip"]& ]}}}, {}, {}}, {}, {}, {}, {}, {}}, {
             DisplayFunction -> Identity, AspectRatio -> 
              NCache[GoldenRatio^(-1), 0.6180339887498948], 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0., -0.8428550619082302}, 
              CoordinatesToolOptions -> {"DisplayFunction" -> ({
                  Identity[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                  Identity[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}& )}, Frame -> True, 
              FrameLabel -> {{None, None}, {None, None}}, 
              FrameTicks -> {{{{1., 
                   FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                   0.004, 0}}, {1., 
                   FormBox["\"True\"", TraditionalForm], 0}, {2., 
                   FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                   0.004, 0}}, {2., 
                   FormBox["\"False\"", TraditionalForm], 0}}, {{1., 
                   FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                   0.004, 0}}, {2., 
                   FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                   0.004, 0}}}}, {None, None}}, GridLines -> {None, None}, 
              GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> Tiny, 
              PlotRange -> {{0, 1}, {All, All}}, PlotRangePadding -> {{
                 Scaled[0.02], 
                 Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, None}}], 
            "\"Cloudy\""},
           "Labeled",
           DisplayFunction->(FormBox[
             GridBox[{{
                ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
                TagBox[
                 ItemBox[
                  PaneBox[
                   TagBox[#, "SkipImageSizeLevel"], 
                   Alignment -> {Center, Baseline}, BaselinePosition -> 
                   Baseline], DefaultBaseStyle -> "Labeled"], 
                 "SkipImageSizeLevel"]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {2, 1}], TraditionalForm]& ),
           InterpretationFunction->(RowBox[{"Labeled", "[", 
              RowBox[{#, ",", #2, ",", "Top", ",", 
                RowBox[{"{", "}"}]}], "]"}]& )], 
          Offset[{2, 2}, {0.022611464968152677, 1.0226114649681528}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1., 1.2246467991473532`*^-16}, 0.02261146496815286], 
         InsetBox[
          TemplateBox[{
            TagBox[
             TagBox[
              GridBox[{{"\"True\"", 
                 RowBox[{
                   RowBox[{"0.5`", " ", "p"}], "+", 
                   RowBox[{"0.5`", " ", "q"}]}]}, {"\"False\"", 
                 RowBox[{
                   RowBox[{"-", 
                    RowBox[{
                    RowBox[{"0.5`"}], " ", "p"}]}], "-", 
                   RowBox[{"0.5`", " ", "q"}], "+", "1"}]}}, RowSpacings -> 1,
                ColumnAlignments -> Left, 
               GridBoxDividers -> {
                "Columns" -> {False, {True}, False}, "Rows" -> {{False}}}, 
               ColumnAlignments -> Left], OutputFormsDump`HeadedColumn], 
             Function[BoxForm`e$, 
              TableForm[
              BoxForm`e$, TableHeadings -> {{"True", "False"}, None}]]], 
            "\"Rain\""},
           "Labeled",
           DisplayFunction->(FormBox[
             GridBox[{{
                ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
                TagBox[
                 ItemBox[
                  PaneBox[
                   TagBox[#, "SkipImageSizeLevel"], 
                   Alignment -> {Center, Baseline}, BaselinePosition -> 
                   Baseline], DefaultBaseStyle -> "Labeled"], 
                 "SkipImageSizeLevel"]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {2, 1}], TraditionalForm]& ),
           InterpretationFunction->(RowBox[{"Labeled", "[", 
              RowBox[{#, ",", #2, ",", "Top", ",", 
                RowBox[{"{", "}"}]}], "]"}]& )], 
          Offset[{2, 2}, {1.0226114649681528, 0.022611464968152983}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-1., -2.4492935982947064`*^-16}, 0.02261146496815286], 
         InsetBox[
          TemplateBox[{
            GraphicsBox[{{
               Opacity[0], 
               
               PointBox[{{0., -0.8428550619082302}, {0., 
                3.8048069919883467`}}]}, {{}, {
                Directive[
                 EdgeForm[
                  Directive[
                   Thickness[Small], 
                   Opacity[0.6859999999999999]]], 
                 RGBColor[1., 0.78, 0.2]], {{
                  Directive[
                   EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                   RGBColor[1, 0.5, 0]], 
                  TagBox[
                   TooltipBox[
                    TagBox[
                    
                    RectangleBox[{0., 0.5487982520029133}, {0.3, 
                    1.4512017479970867`}, "RoundingRadius" -> 0], 
                    StatusArea[#, 0.3]& , TagBoxNote -> "0.3"], 
                    StyleBox["0.3`", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[0.3, {}], "Tooltip"]& ]}, {
                  Directive[
                   EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                   RGBColor[1, 0.5, 0]], 
                  TagBox[
                   TooltipBox[
                    TagBox[
                    
                    RectangleBox[{0., 1.5487982520029133`}, {0.7, 
                    2.4512017479970867`}, "RoundingRadius" -> 0], 
                    StatusArea[#, 0.7]& , TagBoxNote -> "0.7"], 
                    StyleBox["0.7`", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[0.7, {}], 
                    "Tooltip"]& ]}}}, {}, {}}, {}, {}, {}, {}, {}}, {
             DisplayFunction -> Identity, AspectRatio -> 
              NCache[GoldenRatio^(-1), 0.6180339887498948], 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0., -0.8428550619082302}, 
              CoordinatesToolOptions -> {"DisplayFunction" -> ({
                  Identity[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                  Identity[
                   Part[#, 1]], 
                  Identity[
                   Part[#, 2]]}& )}, Frame -> True, 
              FrameLabel -> {{None, None}, {None, None}}, 
              FrameTicks -> {{{{1., 
                   FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                   0.004, 0}}, {1., 
                   FormBox["\"On\"", TraditionalForm], 0}, {2., 
                   FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                   0.004, 0}}, {2., 
                   FormBox["\"Off\"", TraditionalForm], 0}}, {{1., 
                   FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                   0.004, 0}}, {2., 
                   FormBox[
                    TemplateBox[{0}, "Spacer1"], TraditionalForm], {
                   0.004, 0}}}}, {None, None}}, GridLines -> {None, None}, 
              GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> Tiny, 
              PlotRange -> {{0, 1}, {All, All}}, PlotRangePadding -> {{
                 Scaled[0.02], 
                 Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, None}}], 
            "\"Sprinkler\""},
           "Labeled",
           DisplayFunction->(FormBox[
             GridBox[{{
                ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
                TagBox[
                 ItemBox[
                  PaneBox[
                   TagBox[#, "SkipImageSizeLevel"], 
                   Alignment -> {Center, Baseline}, BaselinePosition -> 
                   Baseline], DefaultBaseStyle -> "Labeled"], 
                 "SkipImageSizeLevel"]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {2, 1}], TraditionalForm]& ),
           InterpretationFunction->(RowBox[{"Labeled", "[", 
              RowBox[{#, ",", #2, ",", "Top", ",", 
                RowBox[{"{", "}"}]}], "]"}]& )], 
          Offset[{2, 2}, {-0.9773885350318472, 0.022611464968152615}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{6.123233995736766*^-17, -1.}, 0.02261146496815286], InsetBox[
          TemplateBox[{
            TagBox[
             TagBox[
              GridBox[{{"\"Wet\"", 
                 RowBox[{
                   RowBox[{"0.40950000000000003`", " ", "p"}], "+", 
                   RowBox[{"0.24750000000000003`", " ", "q"}], "+", 
                   "0.27`"}]}, {"\"Dry\"", 
                 RowBox[{
                   RowBox[{"-", 
                    RowBox[{
                    RowBox[{"0.40950000000000003`"}], " ", "p"}]}], "-", 
                   RowBox[{"0.24750000000000003`", " ", "q"}], "+", 
                   "0.73`"}]}}, RowSpacings -> 1, ColumnAlignments -> Left, 
               GridBoxDividers -> {
                "Columns" -> {False, {True}, False}, "Rows" -> {{False}}}, 
               ColumnAlignments -> Left], OutputFormsDump`HeadedColumn], 
             Function[BoxForm`e$, 
              TableForm[
              BoxForm`e$, TableHeadings -> {{"Wet", "Dry"}, None}]]], 
            "\"Grass\""},
           "Labeled",
           DisplayFunction->(FormBox[
             GridBox[{{
                ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
                TagBox[
                 ItemBox[
                  PaneBox[
                   TagBox[#, "SkipImageSizeLevel"], 
                   Alignment -> {Center, Baseline}, BaselinePosition -> 
                   Baseline], DefaultBaseStyle -> "Labeled"], 
                 "SkipImageSizeLevel"]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {2, 1}], TraditionalForm]& ),
           InterpretationFunction->(RowBox[{"Labeled", "[", 
              RowBox[{#, ",", #2, ",", "Top", ",", 
                RowBox[{"{", "}"}]}], "]"}]& )], 
          Offset[{2, 2}, {0.022611464968152924, -0.9773885350318472}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{{3.963343370690609*^9, 3.963343426979347*^9}, 
   3.9633435053497753`*^9, {3.963343637228161*^9, 3.963343673067583*^9}},
 CellLabel->"Out[70]=",ExpressionUUID->"f43b6b19-570a-d241-b2e3-3e645acd757c"]
}, Open  ]],

Cell["We can even make everything symbolic:", "Text",
 CellChangeTimes->{{3.9633436881365166`*^9, 
  3.9633437000194473`*^9}},ExpressionUUID->"df985851-733f-4040-9b04-\
e2b0633b1a42"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"BN", " ", "=", " ", 
    RowBox[{"BayesianNetwork", "[", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<Name\>\"", "->", "\"\<Cloudy\>\""}], ",", 
         RowBox[{"\"\<Distribution\>\"", "->", 
          RowBox[{"Function", "[", 
           RowBox[{"CategoricalDistribution", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\"\<True\>\"", ",", "\"\<False\>\""}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"pC", ",", 
               RowBox[{"1", "-", "pC"}]}], "}"}]}], "]"}], "]"}]}]}], "|>"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<Name\>\"", "->", "\"\<Rain\>\""}], ",", 
         RowBox[{"\"\<Distribution\>\"", "->", 
          RowBox[{"Function", "[", 
           RowBox[{"CategoricalDistribution", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\"\<True\>\"", ",", "\"\<False\>\""}], "}"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"Boole", "[", 
                RowBox[{"#Cloudy", "==", "\"\<True\>\""}], "]"}], 
               RowBox[{"{", 
                RowBox[{"pRc", ",", 
                 RowBox[{"1", "-", "pRc"}]}], "}"}]}], "+", 
              RowBox[{
               RowBox[{"Boole", "[", 
                RowBox[{"#Cloudy", "==", "\"\<False\>\""}], "]"}], 
               RowBox[{"{", 
                RowBox[{"pRnc", ",", 
                 RowBox[{"1", "-", "pRnc"}]}], "}"}]}]}]}], "]"}], "]"}]}]}], 
        "|>"}], ",", "\[IndentingNewLine]", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<Name\>\"", "->", "\"\<Sprinkler\>\""}], ",", 
         RowBox[{"\"\<Distribution\>\"", "->", 
          RowBox[{"Function", "[", 
           RowBox[{"CategoricalDistribution", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\"\<On\>\"", ",", "\"\<Off\>\""}], "}"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"Boole", "[", 
                RowBox[{"#Cloudy", "==", "\"\<True\>\""}], "]"}], 
               RowBox[{"{", 
                RowBox[{"pSc", ",", 
                 RowBox[{"1", "-", "pSc"}]}], "}"}]}], "+", 
              RowBox[{
               RowBox[{"Boole", "[", 
                RowBox[{"#Cloudy", "==", "\"\<False\>\""}], "]"}], 
               RowBox[{"{", 
                RowBox[{"pSnc", ",", 
                 RowBox[{"1", "-", "pSnc"}]}], "}"}]}]}]}], "]"}], "]"}]}]}], 
        "|>"}], ",", "\[IndentingNewLine]", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<Name\>\"", "->", "\"\<Grass\>\""}], ",", 
         RowBox[{"\"\<Distribution\>\"", "->", 
          RowBox[{"Function", "[", 
           RowBox[{"CategoricalDistribution", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\"\<Wet\>\"", ",", "\"\<Dry\>\""}], "}"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"Boole", "[", 
                RowBox[{
                 RowBox[{"#Rain", "==", "\"\<True\>\""}], "&&", 
                 RowBox[{"#Sprinkler", "==", "\"\<On\>\""}]}], "]"}], 
               RowBox[{"{", 
                RowBox[{"pGrs", ",", 
                 RowBox[{"1", "-", "pGrs"}]}], "}"}]}], "+", " ", 
              RowBox[{
               RowBox[{"Boole", "[", 
                RowBox[{
                 RowBox[{"#Rain", "==", "\"\<False\>\""}], "&&", 
                 RowBox[{"#Sprinkler", "==", "\"\<On\>\""}]}], "]"}], 
               RowBox[{"{", 
                RowBox[{"pGnrs", ",", 
                 RowBox[{"1", "-", "pGnrs"}]}], "}"}]}], "+", 
              RowBox[{
               RowBox[{"Boole", "[", 
                RowBox[{
                 RowBox[{"#Rain", "==", "\"\<True\>\""}], "&&", 
                 RowBox[{"#Sprinkler", "==", "\"\<Off\>\""}]}], "]"}], 
               RowBox[{"{", 
                RowBox[{"pGrns", ",", 
                 RowBox[{"1", "-", "pGrns"}]}], "}"}]}], "+", 
              RowBox[{
               RowBox[{"Boole", "[", 
                RowBox[{
                 RowBox[{"#Rain", "==", "\"\<False\>\""}], "&&", 
                 RowBox[{"#Sprinkler", "==", "\"\<Off\>\""}]}], "]"}], 
               RowBox[{"{", 
                RowBox[{"pGnrns", ",", 
                 RowBox[{"1", "-", "pGnrns"}]}], "}"}]}]}]}], "]"}], 
           "]"}]}]}], "|>"}]}], "\[IndentingNewLine]", "}"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Probability", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"#Cloudy", "==", " ", "c"}], "\[Conditioned]", 
     RowBox[{"#Grass", "==", "\"\<Wet\>\""}]}], "&"}], ",", "BN"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.963343734229288*^9, 3.9633437427674847`*^9}},
 CellLabel->"In[75]:=",ExpressionUUID->"d30778d8-496a-3549-a6ee-d55b64eca73a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"pC", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"pGnrns", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "pRc"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "pSc"}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"pGnrs", "-", 
          RowBox[{"pGnrs", " ", "pRc"}], "+", 
          RowBox[{"pGrs", " ", "pRc"}]}], ")"}], " ", "pSc"}], "+", 
       RowBox[{"pGrns", " ", 
        RowBox[{"(", 
         RowBox[{"pRc", "-", 
          RowBox[{"pRc", " ", "pSc"}]}], ")"}]}]}], ")"}], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"c", "\[Equal]", "1"}], "]"}]}], "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "pC"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"pGnrns", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "pRnc"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "pSnc"}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"pGnrs", "-", 
          RowBox[{"pGnrs", " ", "pRnc"}], "+", 
          RowBox[{"pGrs", " ", "pRnc"}]}], ")"}], " ", "pSnc"}], "+", 
       RowBox[{"pGrns", " ", 
        RowBox[{"(", 
         RowBox[{"pRnc", "-", 
          RowBox[{"pRnc", " ", "pSnc"}]}], ")"}]}]}], ")"}], " ", 
     RowBox[{"Boole", "[", 
      RowBox[{"c", "\[Equal]", "2"}], "]"}]}]}], ")"}], "/", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"pGrns", " ", "pRnc"}], "+", 
    RowBox[{"pC", " ", "pGrns", " ", 
     RowBox[{"(", 
      RowBox[{"pRc", "-", 
       RowBox[{"pRc", " ", "pSc"}], "+", 
       RowBox[{"pRnc", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "pSnc"}], ")"}]}]}], ")"}]}], "+", 
    RowBox[{"pGnrns", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "pRnc"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "pSnc"}], ")"}]}], "+", 
    RowBox[{"pGnrs", " ", "pSnc"}], "-", 
    RowBox[{"pGnrs", " ", "pRnc", " ", "pSnc"}], "-", 
    RowBox[{"pGrns", " ", "pRnc", " ", "pSnc"}], "+", 
    RowBox[{"pGrs", " ", "pRnc", " ", "pSnc"}], "+", 
    RowBox[{"pC", " ", "pGnrs", " ", 
     RowBox[{"(", 
      RowBox[{"pSc", "-", 
       RowBox[{"pRc", " ", "pSc"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "pRnc"}], ")"}], " ", "pSnc"}]}], ")"}]}], 
    "+", 
    RowBox[{"pC", " ", "pGrs", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"pRc", " ", "pSc"}], "-", 
       RowBox[{"pRnc", " ", "pSnc"}]}], ")"}]}], "+", 
    RowBox[{"pC", " ", "pGnrns", " ", 
     RowBox[{"(", 
      RowBox[{"pRnc", "+", 
       RowBox[{"pRc", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "pSc"}], ")"}]}], "-", "pSc", "+", "pSnc", 
       "-", 
       RowBox[{"pRnc", " ", "pSnc"}]}], ")"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.9633437244369164`*^9, 3.963343743300644*^9}},
 CellLabel->"Out[76]=",ExpressionUUID->"4d322d57-8c72-4a4f-acdb-98beb3ef0b91"]
}, Open  ]],

Cell["We can also ask more complicated queries:", "Text",
 CellChangeTimes->{{3.9633437631746674`*^9, 
  3.963343772071436*^9}},ExpressionUUID->"61eb36e6-7460-3e42-b139-\
ab2f4b075c3c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Probability", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"#Grass", " ", "==", "\"\<Wet\>\""}], "\[And]", 
      RowBox[{"#Cloudy", "==", "\"\<False\>\""}]}], "\[Conditioned]", " ", 
     RowBox[{
      RowBox[{"#Rain", " ", "==", "\"\<True\>\""}], "\[Or]", 
      RowBox[{"#Sprinkler", " ", "==", " ", "\"\<On\>\""}]}]}], "&"}], ",", 
   "BN"}], "]"}]], "Input",
 CellChangeTimes->{{3.9633438227721615`*^9, 3.9633438232723827`*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"f92946d9-176b-7d40-847e-af474097361d"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "pC"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"pGrns", " ", "pRnc", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "pSnc"}], ")"}]}], "+", 
     RowBox[{"pGnrs", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "pRnc"}], ")"}], " ", "pSnc"}], "-", 
     RowBox[{"pGrs", " ", "pRnc", " ", "pSnc"}]}], ")"}]}], 
  RowBox[{"pRnc", "+", 
   RowBox[{"pC", " ", 
    RowBox[{"(", 
     RowBox[{"pRc", "+", "pSc", "-", 
      RowBox[{"pRc", " ", "pSc"}], "+", 
      RowBox[{"pRnc", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "pSnc"}], ")"}]}], "-", "pSnc"}], ")"}]}], "+",
    "pSnc", "-", 
   RowBox[{"pRnc", " ", "pSnc"}]}]]], "Output",
 CellChangeTimes->{{3.9633438156842957`*^9, 3.9633438239567833`*^9}},
 CellLabel->"Out[79]=",ExpressionUUID->"caf7603a-562e-2345-af22-bbb1f0748227"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Probability", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"#Grass", " ", "==", "\"\<Wet\>\""}], "\[Nor]", 
      RowBox[{
       RowBox[{"#Cloudy", "==", "\"\<False\>\""}], "\[Xor]", 
       RowBox[{"#Sprinkler", "==", "\"\<On\>\""}]}]}], "\[Conditioned]", " ", 
     RowBox[{"#Rain", " ", "==", "\"\<True\>\""}]}], "&"}], ",", "BN"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.963343832063072*^9, 3.9633438332168713`*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"8e375185-85f3-af49-8f18-bae55dbbadaf"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"pC", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "pGrns"}], ")"}], " ", "pRc", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "pSc"}], ")"}]}], "-", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "pGrs"}], ")"}], " ", "pRnc", " ", "pSnc"}], "+", 
   RowBox[{"pC", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "pGrs"}], ")"}], " ", "pRnc", " ", "pSnc"}]}], 
  RowBox[{
   RowBox[{"pC", " ", 
    RowBox[{"(", 
     RowBox[{"pRc", "-", "pRnc"}], ")"}]}], "+", "pRnc"}]]], "Output",
 CellChangeTimes->{3.9633438336303444`*^9},
 CellLabel->"Out[80]=",ExpressionUUID->"726b7f7a-165d-874b-81ef-c659699ad0bc"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["How it works", "Section",
 CellChangeTimes->{{3.963340778693964*^9, 3.963340808481886*^9}, {
  3.963340976883087*^9, 3.963340983771015*^9}, {3.963343682324156*^9, 
  3.9633436857598495`*^9}, {3.9633437543585052`*^9, 3.963343761513834*^9}, {
  3.9633438459049625`*^9, 
  3.963343849257761*^9}},ExpressionUUID->"cc2ccf8a-7c6f-d148-9123-\
7f954032ff50"],

Cell[TextData[{
 "The following code implements a ",
 StyleBox["BayesianNetwork", "InlineCode"],
 " function that produces a ",
 StyleBox["BayesiannetworkObject", "InlineCode"],
 ":"
}], "Text",
 CellChangeTimes->{{3.9633409037326736`*^9, 
  3.9633409394402046`*^9}},ExpressionUUID->"f9cd661a-7869-364a-a0dd-\
817bc97bb521"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Creating", " ", "Bayesian", " ", "network", " ", "models"}], " ", 
   "*)"}], "\n", 
  RowBox[{
   RowBox[{"BayesianNetwork", "[", 
    RowBox[{"vars_", "?", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"VectorQ", "[", 
        RowBox[{"#", ",", "AssociationQ"}], "]"}], "&"}], ")"}]}], "]"}], " ",
    ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "names", ",", "name2slot", ",", "x", ",", "a", ",", "distributions", ",",
        "parents", ",", "edges", ",", "graph", ",", "args", ",", 
       "originalDomains", ",", "newDomains", ",", "domainmaps", ",", 
       "transformationrules", ",", "pdf", ",", "ranges", ",", "dist"}], "}"}],
      ",", "\n", "\t", 
     RowBox[{
      RowBox[{"names", " ", "=", " ", 
       RowBox[{"vars", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "\"\<Name\>\""}], "]"}], "]"}]}], ";", "\n", 
      "\t", 
      RowBox[{"distributions", " ", "=", " ", 
       RowBox[{"vars", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "\"\<Distribution\>\""}], "]"}], "]"}]}], ";", 
      "\n", "\t", 
      RowBox[{"name2slot", " ", "=", " ", 
       RowBox[{"Association", "@@", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"names", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "->", 
           RowBox[{"Slot", "[", "i", "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "@", "names"}]}], "}"}]}], "]"}]}]}], ";", "\n",
       "\t", "\n", "\t", 
      RowBox[{"(*", " ", 
       RowBox[{"Create", " ", "BN", " ", "graph"}], "*)"}], "\n", "\t", 
      RowBox[{"parents", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"DeleteDuplicates", "[", 
          RowBox[{"Cases", "[", 
           RowBox[{"dist", ",", 
            RowBox[{
             RowBox[{"Slot", "[", "a_", "]"}], "->", "a"}], ",", 
            RowBox[{"-", "1"}]}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"dist", ",", "distributions"}], "}"}]}], "]"}]}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Extracts", " ", "all", " ", "variable", " ", "slots", " ", "in", " ", 
        "the", " ", "distribution", " ", "expressions"}], " ", "*)"}], "\n", 
      "\t", 
      RowBox[{"edges", " ", "=", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"parents", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "j"}], "]"}], "]"}], "->", 
             RowBox[{"names", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", 
              RowBox[{"Length", "@", 
               RowBox[{"parents", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "@", "names"}]}], "}"}]}], "]"}], "]"}]}], ";", 
      "\n", "\t", 
      RowBox[{"graph", " ", "=", " ", 
       RowBox[{"Graph", "[", 
        RowBox[{"edges", ",", 
         RowBox[{"VertexLabels", "->", "Automatic"}]}], "]"}]}], ";", "\n", 
      "\t", "\n", "\t", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Transform", " ", "all", " ", "distributions", " ", "to", " ", 
        "integer", " ", "domains"}], " ", "*)"}], "\n", "\t", 
      RowBox[{"originalDomains", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"DistributionDomain", "[", 
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], "&"}], ",", 
         "distributions"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"newDomains", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Range", "@", 
           RowBox[{"Length", "@", "#"}]}], "&"}], ",", "originalDomains"}], 
        "]"}]}], ";", "\t", "\n", "\t", 
      RowBox[{"domainmaps", " ", "=", " ", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Association", "@@", 
           RowBox[{"Thread", "[", 
            RowBox[{"#1", "->", "#2"}], "]"}]}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{"originalDomains", ",", "newDomains"}], "}"}]}], "]"}]}], ";",
       "\n", "\t", 
      RowBox[{"transformationrules", " ", "=", " ", 
       RowBox[{"Flatten", "@", 
        RowBox[{"Table", "[", "\n", "\t\t", 
         RowBox[{
          RowBox[{"Module", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"slot", ",", "dom"}], "}"}], ",", "\n", "\t\t\t", 
            RowBox[{
             RowBox[{"dom", " ", "=", " ", 
              RowBox[{"domainmaps", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], ";", "\n", "\t\t\t", 
             RowBox[{"slot", " ", "=", " ", 
              RowBox[{"Slot", "@", 
               RowBox[{"names", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}]}], ";", "\n", "\t\t\t", 
             RowBox[{"MapThread", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"Equal", "[", 
                  RowBox[{"slot", ",", "#1"}], "]"}], "->", 
                 RowBox[{"Equal", "[", 
                  RowBox[{"slot", ",", "#2"}], "]"}]}], "&"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Keys", "[", "dom", "]"}], ",", 
                 RowBox[{"Values", "[", "dom", "]"}]}], "}"}]}], "]"}]}]}], 
           "\n", "\t\t", "]"}], ",", "\n", "\t", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "@", "distributions"}]}], "}"}]}], "]"}]}]}], ";",
       "\n", "\t", 
      RowBox[{"distributions", " ", "=", " ", 
       RowBox[{"distributions", "/.", "transformationrules"}]}], ";", "\n", 
      "\t", "\n", "\t", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Replace", " ", "named", " ", "variables", " ", "by", " ", "dummy", " ",
         "variables"}], "*)"}], "\t\t", "\n", "\t", 
      RowBox[{"args", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Thread", "[", 
           RowBox[{"name2slot", "[", 
            RowBox[{"[", "#", "]"}], "]"}], "]"}], "&"}], ",", "parents"}], 
        "]"}]}], ";", "\n", "\t", 
      RowBox[{"distributions", " ", "=", " ", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#1", "[", "#2", "]"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{"distributions", ",", "args"}], "}"}]}], "]"}]}], ";", "\n",
       "\t", 
      RowBox[{"distributions", " ", "=", " ", 
       RowBox[{"Table", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"dom", ",", "probs"}], "}"}], ",", "\n", "\t\t\t", 
           RowBox[{
            RowBox[{"dom", " ", "=", " ", 
             RowBox[{"DistributionDomain", "[", "dist", "]"}]}], ";", "\n", 
            "\t\t\t", 
            RowBox[{"probs", " ", "=", " ", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Evaluate", "[", 
                RowBox[{"PDF", "[", 
                 RowBox[{"dist", ",", "y"}], "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"y", ",", "dom"}], "}"}]}], "]"}]}], ";", "\n", 
            "\t\t\t", 
            RowBox[{"EmpiricalDistribution", "[", 
             RowBox[{"probs", "->", 
              RowBox[{"Range", "@", 
               RowBox[{"Length", "@", "dom"}]}]}], "]"}]}]}], "\n", "\t\t", 
          "]"}], "\n", "\t", ",", 
         RowBox[{"{", 
          RowBox[{"dist", ",", "distributions"}], "}"}]}], "]"}]}], ";", "\n",
       "\n", "\t", 
      RowBox[{"(*", " ", 
       RowBox[{"Create", " ", "joint", " ", "distribution"}], " ", "*)"}], 
      "\n", "\t", 
      RowBox[{"pdf", " ", "=", " ", 
       RowBox[{"Function", "[", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"Times", "@@", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"PDF", "[", 
             RowBox[{
              RowBox[{"distributions", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", 
              RowBox[{"Slot", "[", "i", "]"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"Length", "@", "distributions"}]}], "}"}]}], "]"}]}], 
         "]"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"ranges", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", "[", "i", "]"}], ",", 
           RowBox[{"Sequence", "@@", 
            RowBox[{"MinMax", "[", 
             RowBox[{"DistributionDomain", "[", 
              RowBox[{"distributions", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}], ",", "1"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "@", "distributions"}]}], "}"}]}], "]"}]}], ";", 
      "\n", "\t", 
      RowBox[{"dist", " ", "=", " ", 
       RowBox[{"ProbabilityDistribution", "[", 
        RowBox[{
         RowBox[{"pdf", "@@", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"x", "[", "i", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"Length", "@", "distributions"}]}], "}"}]}], "]"}]}], ",", 
         RowBox[{"Sequence", "@@", "ranges"}]}], "]"}]}], ";", "\n", "\n", 
      "\t", 
      RowBox[{"(*", " ", 
       RowBox[{"Return", " ", "BM", " ", "object"}], " ", "*)"}], "\n", "\t", 
      RowBox[{"BayesianNetworkObject", "[", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<Variables\>\"", "->", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"<|", 
             RowBox[{
              RowBox[{"\"\<Name\>\"", "->", 
               RowBox[{"names", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], ",", 
              RowBox[{"\"\<Parents\>\"", "->", 
               RowBox[{"parents", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], ",", 
              RowBox[{"\"\<Domain\>\"", "->", 
               RowBox[{"domainmaps", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], ",", 
              RowBox[{"\"\<Distribution\>\"", "->", 
               RowBox[{"distributions", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}]}], "|>"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"Length", "@", "names"}]}], "}"}]}], "]"}]}], ",", 
         RowBox[{"\"\<Distribution\>\"", "->", "dist"}], ",", 
         RowBox[{"\"\<Graph\>\"", "->", "graph"}]}], "|>"}], "]"}]}]}], "\n", 
    "]"}]}]}]], "Code",
 CellChangeTimes->{3.96334359831538*^9, 3.9633436287867565`*^9},
 CellLabel->"In[64]:=",ExpressionUUID->"af1cbd8a-94fa-af4b-9296-f70b271d8c2d"],

Cell["\<\
As an attempt to make my BN feel more WL native, the following additional \
code make the BayesianNetworkObject appear in the \
\[OpenCurlyDoubleQuote]iconized\[CloseCurlyDoubleQuote] form:\
\>", "Text",
 CellChangeTimes->{{3.9633409626550713`*^9, 3.9633409656265125`*^9}, {
  3.9633410443971577`*^9, 3.963341084541191*^9}, {3.9633411294721737`*^9, 
  3.9633411745873146`*^9}},ExpressionUUID->"477bf554-3766-224b-9ab0-\
351bdb7ccd08"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Visual", " ", "appearance", " ", "of", " ", "BN", " ", "objects"}], " ", 
   "*)"}], "\n", 
  RowBox[{
   RowBox[{"BayesianNetworkObject", "/:", 
    RowBox[{"MakeBoxes", "[", 
     RowBox[{
      RowBox[{"obj", ":", 
       RowBox[{"BayesianNetworkObject", "[", 
        RowBox[{"asc_", "?", "BayesianNetworkQ"}], "]"}]}], ",", 
      RowBox[{"form", ":", 
       RowBox[{"(", 
        RowBox[{"StandardForm", "|", "TraditionalForm"}], ")"}]}]}], "]"}], ":=",
     "\n", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "info", "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"info", "=", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"BoxForm`SummaryItem", "[", 
           RowBox[{"{", 
            RowBox[{"Graph", "[", 
             RowBox[{
              RowBox[{"asc", "[", "\"\<Graph\>\"", "]"}], ",", 
              RowBox[{"VertexLabels", "->", "None"}], ",", 
              RowBox[{"VertexSize", "->", "Large"}], ",", 
              RowBox[{"ImageSize", "->", "50"}]}], "]"}], "}"}], "]"}], "}"}],
          "}"}]}], ";", "\n", "\t", 
       RowBox[{"BoxForm`ArrangeSummaryBox", "[", 
        RowBox[{
        "BayesianNetworkObject", ",", "obj", ",", "None", ",", "info", ",", 
         RowBox[{"{", "}"}], ",", "form", ",", 
         RowBox[{"\"\<Interpretable\>\"", "->", "Automatic"}]}], "]"}]}]}], 
     "\n", "]"}]}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"Initialization", " ", "tests"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"BayesianNetworkQ", "[", 
     RowBox[{"asc_", "?", "AssociationQ"}], "]"}], " ", ":=", " ", 
    RowBox[{"AllTrue", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<Variables\>\"", ",", "\"\<Distribution\>\"", 
        ",", "\"\<Graph\>\""}], "}"}], ",", " ", 
      RowBox[{
       RowBox[{"KeyExistsQ", "[", 
        RowBox[{"asc", ",", " ", "#"}], "]"}], "&"}]}], "]"}]}]}]}]], "Code",
 CellChangeTimes->{{3.963341215817217*^9, 3.9633412160341187`*^9}, 
   3.96334125007399*^9},
 CellLabel->"In[48]:=",ExpressionUUID->"3042b930-efd2-b74a-8cc3-d6ddfb870c96"],

Cell["The I overload the Probability function:", "Text",
 CellChangeTimes->{{3.963341257211588*^9, 
  3.9633412747427273`*^9}},ExpressionUUID->"1801a3d6-a4a2-8f49-8508-\
935931a58daf"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Calculation", " ", "of", " ", "probabilities"}], " ", "*)"}], 
  "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"Unprotect", "[", "Probability", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"BayesianNetworkObject", "/:", " ", 
    RowBox[{"Probability", "[", 
     RowBox[{"expr_Function", ",", "BN_BayesianNetworkObject"}], "]"}], ":=", 
    " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "variables", ",", "variableNames", ",", "variableSlots", ",", 
        "variableAssociation", ",", "dom", ",", "dist", ",", "x", ",", 
        "rules", ",", "newexpr", ",", "slot"}], "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"variables", " ", "=", " ", 
        RowBox[{"BN", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "\"\<Variables\>\""}], "]"}], "]"}]}], ";", "\n", 
       "\t", 
       RowBox[{"variableNames", " ", "=", " ", 
        RowBox[{"variables", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "\"\<Name\>\""}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\t", 
       RowBox[{"variableSlots", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"x", "[", "i", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "@", "variableNames"}]}], "}"}]}], "]"}]}], ";",
        "\n", "\t", 
       RowBox[{"variableAssociation", " ", "=", " ", 
        RowBox[{"Association", "[", 
         RowBox[{"Thread", "[", 
          RowBox[{"variableNames", "->", "variableSlots"}], "]"}], "]"}]}], ";",
        "\[IndentingNewLine]", "\n", "\t", 
       RowBox[{"(*", " ", 
        RowBox[{
        "Transform", " ", "expression", " ", "to", " ", "the", " ", "BN", " ",
          "dummy", " ", "variables", " ", "with", " ", "integer", " ", 
         "domains"}], " ", "*)"}], "\n", "\t", 
       RowBox[{"newexpr", " ", "=", " ", "expr"}], ";", " ", "\n", "\t", 
       RowBox[{"Do", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"dom", " ", "=", " ", 
           RowBox[{
            RowBox[{"variables", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", "\"\<Domain\>\"", "]"}]}], ";",
           "\n", "\t\t", 
          RowBox[{"slot", " ", "=", " ", 
           RowBox[{"Slot", "@", 
            RowBox[{"variableNames", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}]}], ";", "\n", "\t\t", 
          RowBox[{"rules", " ", "=", " ", 
           RowBox[{"MapThread", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Equal", "[", 
                RowBox[{"slot", ",", "#1"}], "]"}], "->", 
               RowBox[{"Equal", "[", 
                RowBox[{"slot", ",", "#2"}], "]"}]}], "&"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Keys", "[", "dom", "]"}], ",", 
               RowBox[{"Values", "[", "dom", "]"}]}], "}"}]}], "]"}]}], ";", 
          "\n", "\t\t", 
          RowBox[{"newexpr", " ", "=", " ", 
           RowBox[{"(", 
            RowBox[{"newexpr", "/.", "rules"}], ")"}]}]}], ",", "\n", "\t", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "@", "variables"}]}], "}"}]}], "]"}], ";", "\n", 
       "\n", "\t", 
       RowBox[{"(*", " ", 
        RowBox[{"Compute", " ", "the", " ", "probability"}], " ", "*)"}], 
       "\n", "\t", 
       RowBox[{
        RowBox[{"Probability", "[", 
         RowBox[{
          RowBox[{"newexpr", "[", "variableAssociation", "]"}], ",", 
          RowBox[{"variableSlots", " ", "\[Distributed]", " ", 
           RowBox[{"BN", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "\"\<Distribution\>\""}], "]"}], "]"}]}]}], 
         "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"0.", "->", "0"}], ",", 
          RowBox[{"1.", "->", "1"}]}], "}"}]}]}]}], "\[IndentingNewLine]", 
     "\n", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Protect", "[", "Probability", "]"}], ";"}]}]}]], "Code",
 CellChangeTimes->{{3.963341378973816*^9, 3.963341384568983*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"7783bce5-b960-b24e-bf05-e7364eba5202"],

Cell["\<\
Finally, I overloaded the Graph function to create plots of the Bayesian \
networks:\
\>", "Text",
 CellChangeTimes->{{3.963341276175642*^9, 
  3.9633413127679462`*^9}},ExpressionUUID->"32206117-d38c-824f-b02b-\
7f82f660b207"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "Plotting", " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"Unprotect", "[", "Graph", "]"}], ";"}], "\n", 
   RowBox[{"BayesianNetworkObject", "/:", " ", 
    RowBox[{"Graph", "[", 
     RowBox[{"BN_BayesianNetworkObject", ",", 
      RowBox[{"evidence_", ":", "None"}], ",", 
      RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "options", ",", "variables", ",", "graph", ",", "evidencenodes", ",", 
        "a", ",", "colour", ",", "labels", ",", "probs", ",", "domain", ",", 
        "outcomes", ",", "barcharts"}], "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"options", " ", "=", " ", 
        RowBox[{"Options", "[", "Graph", "]"}]}], ";", "\n", "\t", 
       RowBox[{"variables", " ", "=", " ", 
        RowBox[{"BN", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "\"\<Variables\>\""}], "]"}], "]"}]}], ";", "\n", 
       "\t", 
       RowBox[{"graph", " ", "=", " ", 
        RowBox[{"BN", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "\"\<Graph\>\""}], "]"}], "]"}]}], ";", "\n", 
       "\t", "\n", "\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"evidence", "===", "None"}], ",", "\n", "\t\t", 
         RowBox[{"evidencenodes", " ", "=", " ", 
          RowBox[{"{", "}"}]}], ",", "\n", "\t\t", 
         RowBox[{"evidencenodes", " ", "=", " ", 
          RowBox[{"DeleteDuplicates", "[", 
           RowBox[{"Cases", "[", 
            RowBox[{"evidence", ",", 
             RowBox[{
              RowBox[{"Slot", "[", "a_", "]"}], "->", "a"}], ",", 
             RowBox[{"-", "1"}]}], "]"}], "]"}]}]}], "\n", "\t", "]"}], ";", 
       "\n", "\n", "\t", 
       RowBox[{"labels", " ", "=", " ", 
        RowBox[{"Table", "[", "\n", "\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"domain", " ", "=", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Slot", "[", 
               RowBox[{"var", "[", "\"\<Name\>\"", "]"}], "]"}], ",", 
              RowBox[{"Sequence", "@@", 
               RowBox[{"MinMax", "[", 
                RowBox[{"var", "[", "\"\<Domain\>\"", "]"}], "]"}]}], ",", 
              "1"}], "}"}]}], ";", "\n", "\t\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"evidence", "===", "None"}], ",", "\n", "\t\t\t", 
             RowBox[{"probs", " ", "=", " ", 
              RowBox[{"Simplify", "[", 
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"Probability", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Evaluate", "[", 
                    RowBox[{
                    RowBox[{"Slot", "[", 
                    RowBox[{"var", "[", "\"\<Name\>\"", "]"}], "]"}], "==", 
                    "val"}], "]"}], "&"}], ",", "BN"}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"val", ",", 
                    RowBox[{"Keys", "[", 
                    RowBox[{"var", "[", "\"\<Domain\>\"", "]"}], "]"}]}], 
                   "}"}]}], "]"}], "/.", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"0.", "->", "0"}], ",", 
                  RowBox[{"1.", "->", "1"}]}], "}"}]}], "]"}]}], ",", "\n", 
             "\t\t\t", 
             RowBox[{"probs", " ", "=", " ", 
              RowBox[{"Simplify", "[", 
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"Probability", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Evaluate", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Slot", "[", 
                    RowBox[{"var", "[", "\"\<Name\>\"", "]"}], "]"}], "==", 
                    "val"}], "\[Conditioned]", " ", 
                    RowBox[{"evidence", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "&"}], ",", 
                    "BN"}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"val", ",", 
                    RowBox[{"Keys", "[", 
                    RowBox[{"var", "[", "\"\<Domain\>\"", "]"}], "]"}]}], 
                   "}"}]}], "]"}], "/.", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"0.", "->", "0"}], ",", 
                  RowBox[{"1.", "->", "1"}]}], "}"}]}], "]"}]}]}], "\n", 
            "\t\t", "]"}], ";", "\n", "\t\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"VectorQ", "[", 
              RowBox[{"probs", ",", "NumericQ"}], "]"}], ",", "\n", "\t\t\t", 
             RowBox[{
              RowBox[{"var", "[", "\"\<Name\>\"", "]"}], "->", 
              RowBox[{"Labeled", "[", "\n", "\t\t\t\t", 
               RowBox[{
                RowBox[{"BarChart", "[", 
                 RowBox[{"probs", ",", 
                  RowBox[{"PlotRange", "->", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], ",", 
                  RowBox[{"BarOrigin", "->", "Left"}], ",", 
                  RowBox[{"ImageSize", "->", "Tiny"}], ",", 
                  RowBox[{"Frame", "->", "True"}], ",", 
                  RowBox[{"FrameTicks", "->", 
                   RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}]}], ",", 
                  RowBox[{"ChartLabels", "->", 
                   RowBox[{"Keys", "[", 
                    RowBox[{"var", "[", "\"\<Domain\>\"", "]"}], "]"}]}], ",", 
                  RowBox[{"ChartStyle", "->", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"evidencenodes", ",", 
                    RowBox[{"var", "[", "\"\<Name\>\"", "]"}]}], "]"}], ",", 
                    "Blue", ",", "Orange"}], "]"}]}]}], "]"}], ",", "\n", 
                "\t\t\t\t", 
                RowBox[{"var", "[", "\"\<Name\>\"", "]"}], ",", "Top"}], 
               "]"}]}], ",", "\n", "\t\t\t", 
             RowBox[{
              RowBox[{"var", "[", "\"\<Name\>\"", "]"}], "->", 
              RowBox[{"Labeled", "[", 
               RowBox[{
                RowBox[{"TableForm", "[", 
                 RowBox[{"probs", ",", 
                  RowBox[{"TableHeadings", "->", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Keys", "[", 
                    RowBox[{"var", "[", "\"\<Domain\>\"", "]"}], "]"}], ",", 
                    "None"}], "}"}]}]}], "]"}], ",", 
                RowBox[{"var", "[", "\"\<Name\>\"", "]"}], ",", "Top"}], 
               "]"}]}]}], "\n", "\t\t", "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"var", ",", "variables"}], "}"}]}], "]"}]}], ";", "\n", 
       "\t", "\n", "\t", 
       RowBox[{"Graph", "[", 
        RowBox[{"graph", ",", 
         RowBox[{"VertexLabels", "->", "labels"}]}], "]"}]}]}], "\n", "]"}]}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Protect", "[", "Graph", "]"}], ";"}]}]}]], "Code",
 CellChangeTimes->{{3.9633413934235783`*^9, 3.9633413991957245`*^9}, {
  3.9633438730749702`*^9, 
  3.963343875209465*^9}},ExpressionUUID->"947e2ed8-5373-e142-abed-\
2784e794a95e"],

Cell["That\[CloseCurlyQuote]s all the code I needed to implement BNs in the \
WL!", "Text",
 CellChangeTimes->{{3.9633414064495125`*^9, 
  3.963341434587101*^9}},ExpressionUUID->"65effcf5-0f55-3b44-bfa0-\
43c0b38c9811"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Concluding remarks", "Section",
 CellChangeTimes->{{3.963341445494713*^9, 
  3.963341449229307*^9}},ExpressionUUID->"a21ba4d6-fc35-194e-85af-\
8674841f88eb"],

Cell[TextData[{
 "I\[CloseCurlyQuote]m quite happy that I was able to implement BNs in WL \
with such a small amount of code. Also, this implementation is the only one I \
know of that works with symbolic probabilities, which is sometimes convenient \
when I\[CloseCurlyQuote]m not confident enough to assign a number. With this \
implementation I can still perform inference and investigate how the answer \
varies as I change parameters. Also, the types of queries I can ask are more \
advanced than what I have seen in other implementations. \n\nOf course there \
are also limitations.  Most notably, the probability calculations becomes \
very slow as soon as one goes beyond small \[OpenCurlyDoubleQuote]toy \
examples\[CloseCurlyDoubleQuote] like I presented here. However, this is not \
surprising given that I haven\[CloseCurlyQuote]t implemented any efficient BN \
inference algorithms and solely rely on the inbuilt ",
 StyleBox["Probability", "InlineCode"],
 " function to do the calculations. One could possibly write new methods for ",
 StyleBox["Probability", "InlineCode"],
 " to mitigate this. \n\nI hope the Wolfram will include support for BNs in \
the future so that my paclet becomes redundant, for example as an update to \
CategoricalDistribution. In the meantime, I would be interested to hear from \
others who have tried to implement BNs in the WL."
}], "Text",
 CellChangeTimes->{{3.9633414574515305`*^9, 3.96334219031526*^9}, {
  3.96334222819063*^9, 3.963342279160673*^9}, {3.9633423148508015`*^9, 
  3.9633424333505936`*^9}, {3.9633424649907284`*^9, 
  3.963342588010023*^9}},ExpressionUUID->"486dc3f8-33d4-544a-94d0-\
40896098a9b3"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1152, 651.6},
WindowMargins->{{
  Automatic, -5.399999999999864}, {-5.399999999999977, Automatic}},
Magnification:>0.7 Inherited,
FrontEndVersion->"14.2 for Microsoft Windows (64-bit) (March 14, 2025)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"e3024f42-43ba-ec44-b597-b3021fb3e16b"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[576, 22, 186, 3, 67, "Title",ExpressionUUID->"fb898530-1d51-c142-9171-f999d116163c"],
Cell[765, 27, 165, 3, 21, "Author",ExpressionUUID->"ec47f65b-2b6f-a24e-83b4-32a00b85ce30"],
Cell[933, 32, 1134, 16, 38, "Text",ExpressionUUID->"b4862872-00b8-c841-ab31-75e93699e430"],
Cell[2070, 50, 31179, 693, 232, "Input",ExpressionUUID->"f1734fb3-c1c6-ad4c-88ee-738959207a44"],
Cell[CellGroupData[{
Cell[33274, 747, 159, 3, 46, "Section",ExpressionUUID->"4f1a55f2-b25f-1140-a5f3-c31166fab912"],
Cell[33436, 752, 1601, 26, 117, "Text",ExpressionUUID->"b6b3774f-33b8-b744-842e-b57789b10bcf"],
Cell[35040, 780, 453, 10, 21, "ItemNumbered",ExpressionUUID->"06675790-69fc-0c40-a3d4-4ac084a8ba87"],
Cell[35496, 792, 412, 8, 21, "ItemNumbered",ExpressionUUID->"c8d2a666-cdb7-ba45-a5dc-55e8bd36ece2"],
Cell[CellGroupData[{
Cell[35933, 804, 288, 7, 37, "Subsection",ExpressionUUID->"2235a9e2-1e29-9143-a6b3-3ad99503e08f"],
Cell[36224, 813, 360, 7, 23, "Text",ExpressionUUID->"b2373134-223e-4f41-9307-1b754d6a61a6"],
Cell[CellGroupData[{
Cell[36609, 824, 487, 10, 21, "Input",ExpressionUUID->"80c4685c-0c67-6a45-b2e3-d5212e0f1474"],
Cell[37099, 836, 35752, 633, 103, "Output",ExpressionUUID->"025cb7cd-24dc-3245-ba1b-0110978bab71"]
}, Open  ]],
Cell[CellGroupData[{
Cell[72888, 1474, 492, 11, 21, "Input",ExpressionUUID->"d2ee3da5-5d71-3146-b949-59aa9374a9f9"],
Cell[73383, 1487, 9957, 198, 60, "Output",ExpressionUUID->"0451bbdc-3ded-fc4a-b383-a3d19cb29a31"]
}, Open  ]],
Cell[83355, 1688, 578, 15, 23, "Text",ExpressionUUID->"7ff97b62-9553-b74d-afec-2849cfda3c16"],
Cell[CellGroupData[{
Cell[83958, 1707, 162, 3, 21, "Input",ExpressionUUID->"f365b7a1-017c-8b4b-8877-4078037a4779"],
Cell[84123, 1712, 35909, 634, 45, "Output",ExpressionUUID->"1a0e187f-1a25-5b4b-a766-3b81035f3d48"]
}, Open  ]],
Cell[CellGroupData[{
Cell[120069, 2351, 230, 4, 21, "Input",ExpressionUUID->"f34a5d1d-e649-c14a-bf0d-448ca1cc957f"],
Cell[120302, 2357, 478, 12, 23, "Output",ExpressionUUID->"b8a88ac6-8465-5a47-a9fa-df16f840e401"]
}, Open  ]],
Cell[120795, 2372, 1525, 32, 71, "Text",ExpressionUUID->"a1f861e0-a9ca-b84b-b506-95612e071761"],
Cell[CellGroupData[{
Cell[122345, 2408, 411, 9, 21, "Input",ExpressionUUID->"e8f44853-41fe-124a-93b1-855a75eb28b8"],
Cell[122759, 2419, 9957, 198, 60, "Output",ExpressionUUID->"fd48d9bc-27d5-ba48-a796-c410436238cd"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[132765, 2623, 219, 5, 37, "Subsection",ExpressionUUID->"b5f2aa51-0b0e-c840-bef5-c4f68893ff4f"],
Cell[132987, 2630, 986, 21, 55, "Text",ExpressionUUID->"f9316198-312e-b041-9ae7-5e77ba85877c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[134022, 2657, 288, 5, 46, "Section",ExpressionUUID->"bb06359c-7bb7-254f-9845-1c5a43ccfc65"],
Cell[134313, 2664, 368, 7, 23, "Text",ExpressionUUID->"99c457db-3c36-9e42-bb9b-25c664a4d526"],
Cell[CellGroupData[{
Cell[134706, 2675, 4103, 100, 112, "Input",ExpressionUUID->"d793268b-2955-0043-8a58-a2c78cbf140d"],
Cell[138812, 2777, 13645, 264, 58, "Output",ExpressionUUID->"42024449-2901-ec47-bdab-b39e50e6790d"]
}, Open  ]],
Cell[152472, 3044, 394, 9, 23, "Text",ExpressionUUID->"65cd49d8-d057-b94a-8e29-75493d4f5244"],
Cell[152869, 3055, 180, 3, 23, "Text",ExpressionUUID->"6ea7414f-a148-2c47-998e-66e372ead534"],
Cell[CellGroupData[{
Cell[153074, 3062, 348, 9, 21, "Input",ExpressionUUID->"99c0d6f8-a0c2-184f-be7e-b027ae1c2d1c",
 CellID->443941269],
Cell[153425, 3073, 169, 2, 23, "Output",ExpressionUUID->"79bf4593-4356-8146-bcbd-709e51e582e6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[153631, 3080, 394, 9, 21, "Input",ExpressionUUID->"98c76eff-1d14-5844-b10a-e49dc95f1213"],
Cell[154028, 3091, 248, 4, 23, "Output",ExpressionUUID->"767c4395-ed6a-4749-863c-2c3b018fe559"]
}, Open  ]],
Cell[154291, 3098, 202, 3, 23, "Text",ExpressionUUID->"4a35186d-1f1b-3c47-b9a3-48437e8786c7"],
Cell[CellGroupData[{
Cell[154518, 3105, 208, 3, 21, "Input",ExpressionUUID->"965e95c0-986d-f449-9def-670bfdecafda"],
Cell[154729, 3110, 31279, 695, 235, "Output",ExpressionUUID->"093d3023-1295-8740-9d3e-8313a78ce349"]
}, Open  ]],
Cell[CellGroupData[{
Cell[186045, 3810, 287, 6, 21, "Input",ExpressionUUID->"abaff592-744c-c640-85b0-929a18295198"],
Cell[186335, 3818, 31058, 690, 235, "Output",ExpressionUUID->"790462ab-8671-964c-a0ed-8d6240ce9645"]
}, Open  ]],
Cell[217408, 4511, 217, 5, 23, "Text",ExpressionUUID->"d4ecbf6f-fd04-304c-9f6e-230179b1f20d"],
Cell[CellGroupData[{
Cell[217650, 4520, 4247, 103, 112, "Input",ExpressionUUID->"6dac1979-5256-9544-a6dd-26cedee705bf"],
Cell[221900, 4625, 25474, 481, 58, "Output",ExpressionUUID->"42407994-9ae2-e54d-868e-94b4a14d014e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[247411, 5111, 255, 4, 21, "Input",ExpressionUUID->"1a5c25e4-bf80-6547-9866-c5a630e79d8f"],
Cell[247669, 5117, 20643, 454, 232, "Output",ExpressionUUID->"f43b6b19-570a-d241-b2e3-3e645acd757c"]
}, Open  ]],
Cell[268327, 5574, 183, 3, 23, "Text",ExpressionUUID->"df985851-733f-4040-9b04-e2b0633b1a42"],
Cell[CellGroupData[{
Cell[268535, 5581, 4919, 118, 139, "Input",ExpressionUUID->"d30778d8-496a-3549-a6ee-d55b64eca73a"],
Cell[273457, 5701, 3195, 95, 62, "Output",ExpressionUUID->"4d322d57-8c72-4a4f-acdb-98beb3ef0b91"]
}, Open  ]],
Cell[276667, 5799, 185, 3, 23, "Text",ExpressionUUID->"61eb36e6-7460-3e42-b139-ab2f4b075c3c"],
Cell[CellGroupData[{
Cell[276877, 5806, 562, 13, 21, "Input",ExpressionUUID->"f92946d9-176b-7d40-847e-af474097361d"],
Cell[277442, 5821, 987, 29, 36, "Output",ExpressionUUID->"caf7603a-562e-2345-af22-bbb1f0748227"]
}, Open  ]],
Cell[CellGroupData[{
Cell[278466, 5855, 552, 13, 21, "Input",ExpressionUUID->"8e375185-85f3-af49-8f18-bae55dbbadaf"],
Cell[279021, 5870, 753, 23, 36, "Output",ExpressionUUID->"726b7f7a-165d-874b-81ef-c659699ad0bc"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[279823, 5899, 356, 6, 46, "Section",ExpressionUUID->"cc2ccf8a-7c6f-d148-9123-7f954032ff50"],
Cell[280182, 5907, 324, 9, 23, "Text",ExpressionUUID->"f9cd661a-7869-364a-a0dd-817bc97bb521"],
Cell[280509, 5918, 11008, 277, 551, "Code",ExpressionUUID->"af1cbd8a-94fa-af4b-9296-f70b271d8c2d"],
Cell[291520, 6197, 444, 8, 23, "Text",ExpressionUUID->"477bf554-3766-224b-9ab0-351bdb7ccd08"],
Cell[291967, 6207, 2133, 54, 133, "Code",ExpressionUUID->"3042b930-efd2-b74a-8cc3-d6ddfb870c96"],
Cell[294103, 6263, 184, 3, 23, "Text",ExpressionUUID->"1801a3d6-a4a2-8f49-8508-935931a58daf"],
Cell[294290, 6268, 4217, 102, 293, "Code",ExpressionUUID->"7783bce5-b960-b24e-bf05-e7364eba5202"],
Cell[298510, 6372, 236, 6, 23, "Text",ExpressionUUID->"32206117-d38c-824f-b02b-7f82f660b207"],
Cell[298749, 6380, 7345, 168, 366, "Code",ExpressionUUID->"947e2ed8-5373-e142-abed-2784e794a95e"],
Cell[306097, 6550, 219, 4, 23, "Text",ExpressionUUID->"65effcf5-0f55-3b44-bfa0-43c0b38c9811"]
}, Open  ]],
Cell[CellGroupData[{
Cell[306353, 6559, 163, 3, 46, "Section",ExpressionUUID->"a21ba4d6-fc35-194e-85af-8674841f88eb"],
Cell[306519, 6564, 1662, 25, 147, "Text",ExpressionUUID->"486dc3f8-33d4-544a-94d0-40896098a9b3"]
}, Open  ]]
}, Open  ]]
}
]
*)

